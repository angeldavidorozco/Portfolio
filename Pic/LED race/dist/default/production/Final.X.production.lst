

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Sun Jul 10 19:38:22 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F47J53
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK4,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK5,global,class=CODE,delta=1,noexec
     9                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    11                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    19                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    21                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    22                           	psect	text0,global,reloc=2,class=CODE,delta=1
    23                           	psect	text1,global,reloc=2,class=CODE,delta=1
    24                           	psect	text2,global,reloc=2,class=CODE,delta=1
    25                           	psect	text3,global,reloc=2,class=CODE,delta=1
    26                           	psect	text4,global,reloc=2,class=CODE,delta=1
    27                           	psect	text5,global,reloc=2,class=CODE,delta=1
    28                           	psect	text6,global,reloc=2,class=CODE,delta=1
    29                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text9,global,reloc=2,class=CODE,delta=1
    32                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    49                           	psect	text27,global,reloc=2,class=CODE,delta=1
    50                           	psect	text28,global,reloc=2,class=CODE,delta=1
    51                           	psect	text29,global,reloc=2,class=CODE,delta=1
    52                           	psect	text30,global,reloc=2,class=CODE,delta=1
    53                           	psect	text31,global,reloc=2,class=CODE,delta=1
    54                           	psect	text32,global,reloc=2,class=CODE,delta=1
    55                           	psect	text33,global,reloc=2,class=CODE,delta=1
    56                           	psect	text34,global,reloc=2,class=CODE,delta=1
    57                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    58                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    59                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    60                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    61                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    62  0000                     
    63                           ; Version 2.40
    64                           ; Generated 17/11/2021 GMT
    65                           ; 
    66                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    67                           ; All rights reserved.
    68                           ; 
    69                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    70                           ; 
    71                           ; Redistribution and use in source and binary forms, with or without modification, are
    72                           ; permitted provided that the following conditions are met:
    73                           ; 
    74                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    75                           ;        conditions and the following disclaimer.
    76                           ; 
    77                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    78                           ;        of conditions and the following disclaimer in the documentation and/or other
    79                           ;        materials provided with the distribution. Publication is not required when
    80                           ;        this file is used in an embedded application.
    81                           ; 
    82                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    83                           ;        software without specific prior written permission.
    84                           ; 
    85                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    86                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    87                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    88                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    89                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    90                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    91                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    92                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    93                           ; 
    94                           ; 
    95                           ; Code-generator required, PIC18F47J53 Definitions
    96                           ; 
    97                           ; SFR Addresses
    98  0000                     
    99                           	psect	idataBANK0
   100  002FEA                     __pidataBANK0:
   101                           	callstack 0
   102                           
   103                           ;initializer for car_pos@F7150
   104  002FEA  0080               	dw	128
   105  002FEC  0040               	dw	64
   106  002FEE  0020               	dw	32
   107  002FF0  0010               	dw	16
   108  002FF2  0008               	dw	8
   109  002FF4  0004               	dw	4
   110  002FF6  0002               	dw	2
   111  002FF8  0001               	dw	1
   112                           
   113                           	psect	idataBANK3
   114  002FFA                     __pidataBANK3:
   115                           	callstack 0
   116                           
   117                           ;initializer for colision@F7155
   118  002FFA  007C               	dw	124
   119  002FFC  0054               	dw	84
   120  002FFE  0046               	dw	70
   121  003000  0083               	dw	131
   122  003002  00CD               	dw	205
   123  003004  00CD               	dw	205
   124  003006  0081               	dw	129
   125  003008  0042               	dw	66
   126                           
   127                           	psect	idataBANK4
   128  0024A2                     __pidataBANK4:
   129                           	callstack 0
   130                           
   131                           ;initializer for main@F7145
   132  0024A2  0081               	dw	129
   133  0024A4  0081               	dw	129
   134  0024A6  0081               	dw	129
   135  0024A8  0081               	dw	129
   136  0024AA  0081               	dw	129
   137  0024AC  0081               	dw	129
   138  0024AE  0081               	dw	129
   139  0024B0  0081               	dw	129
   140  0024B2  0081               	dw	129
   141  0024B4  0083               	dw	131
   142  0024B6  00C3               	dw	195
   143  0024B8  00C3               	dw	195
   144  0024BA  008B               	dw	139
   145  0024BC  009D               	dw	157
   146  0024BE  0089               	dw	137
   147  0024C0  0081               	dw	129
   148  0024C2  00C1               	dw	193
   149  0024C4  00E1               	dw	225
   150  0024C6  00E1               	dw	225
   151  0024C8  00E3               	dw	227
   152  0024CA  0083               	dw	131
   153  0024CC  0083               	dw	131
   154  0024CE  0087               	dw	135
   155  0024D0  008F               	dw	143
   156  0024D2  009F               	dw	159
   157  0024D4  008F               	dw	143
   158  0024D6  0087               	dw	135
   159  0024D8  0083               	dw	131
   160  0024DA  00C1               	dw	193
   161  0024DC  00E7               	dw	231
   162  0024DE  00E7               	dw	231
   163  0024E0  00E1               	dw	225
   164  0024E2  00E1               	dw	225
   165  0024E4  00C1               	dw	193
   166  0024E6  0081               	dw	129
   167  0024E8  0099               	dw	153
   168  0024EA  00B9               	dw	185
   169  0024EC  00F1               	dw	241
   170  0024EE  00E1               	dw	225
   171  0024F0  0081               	dw	129
   172  0024F2  0081               	dw	129
   173  0024F4  0081               	dw	129
   174  0024F6  0083               	dw	131
   175  0024F8  0087               	dw	135
   176  0024FA  008F               	dw	143
   177  0024FC  009F               	dw	159
   178  0024FE  00BF               	dw	191
   179  002500  009F               	dw	159
   180  002502  008F               	dw	143
   181  002504  0087               	dw	135
   182  002506  0083               	dw	131
   183  002508  0081               	dw	129
   184  00250A  00E1               	dw	225
   185  00250C  00E1               	dw	225
   186  00250E  00E1               	dw	225
   187  002510  0083               	dw	131
   188  002512  0087               	dw	135
   189  002514  00E3               	dw	227
   190  002516  00E1               	dw	225
   191  002518  0081               	dw	129
   192  00251A  0081               	dw	129
   193  00251C  00B1               	dw	177
   194  00251E  00B9               	dw	185
   195  002520  00B1               	dw	177
   196  002522  0081               	dw	129
   197  002524  0081               	dw	129
   198  002526  0081               	dw	129
   199  002528  00C1               	dw	193
   200  00252A  00E1               	dw	225
   201  00252C  00F1               	dw	241
   202  00252E  00E1               	dw	225
   203  002530  00C1               	dw	193
   204  002532  0081               	dw	129
   205  002534  0085               	dw	133
   206  002536  008F               	dw	143
   207  002538  0085               	dw	133
   208  00253A  0081               	dw	129
   209  00253C  0081               	dw	129
   210  00253E  0081               	dw	129
   211  002540  0081               	dw	129
   212  002542  0089               	dw	137
   213  002544  009D               	dw	157
   214  002546  00BD               	dw	189
   215  002548  00BD               	dw	189
   216  00254A  00BD               	dw	189
   217  00254C  0099               	dw	153
   218  00254E  0081               	dw	129
   219  002550  0081               	dw	129
   220  002552  00E7               	dw	231
   221  002554  00E7               	dw	231
   222  002556  00E7               	dw	231
   223  002558  00C3               	dw	195
   224  00255A  0081               	dw	129
   225  00255C  0099               	dw	153
   226  00255E  0099               	dw	153
   227  002560  0099               	dw	153
   228  002562  0099               	dw	153
   229  002564  0099               	dw	153
   230  002566  0099               	dw	153
   231  002568  0099               	dw	153
   232  00256A  00BD               	dw	189
   233  00256C  00BD               	dw	189
   234  00256E  0081               	dw	129
   235  002570  0081               	dw	129
   236  002572  0081               	dw	129
   237  002574  0081               	dw	129
   238  002576  0081               	dw	129
   239  002578  0081               	dw	129
   240  00257A  00C3               	dw	195
   241  00257C  00E7               	dw	231
   242  00257E  00F7               	dw	247
   243  002580  00F7               	dw	247
   244  002582  00F7               	dw	247
   245  002584  00F7               	dw	247
   246  002586  00F7               	dw	247
   247  002588  00F7               	dw	247
   248  00258A  00F7               	dw	247
   249  00258C  00F7               	dw	247
   250  00258E  00F7               	dw	247
   251  002590  00F7               	dw	247
   252  002592  0081               	dw	129
   253  002594  0081               	dw	129
   254  002596  0081               	dw	129
   255  002598  0081               	dw	129
   256  00259A  0081               	dw	129
   257  00259C  0081               	dw	129
   258  00259E  0081               	dw	129
   259  0025A0  0081               	dw	129
   260                           
   261                           	psect	idataBANK5
   262  0025A2                     __pidataBANK5:
   263                           	callstack 0
   264                           
   265                           ;initializer for main@F7147
   266  0025A2  0081               	dw	129
   267  0025A4  0081               	dw	129
   268  0025A6  0081               	dw	129
   269  0025A8  0081               	dw	129
   270  0025AA  0081               	dw	129
   271  0025AC  0081               	dw	129
   272  0025AE  0081               	dw	129
   273  0025B0  0081               	dw	129
   274  0025B2  0081               	dw	129
   275  0025B4  0083               	dw	131
   276  0025B6  0087               	dw	135
   277  0025B8  008F               	dw	143
   278  0025BA  009F               	dw	159
   279  0025BC  00BF               	dw	191
   280  0025BE  00BF               	dw	191
   281  0025C0  009F               	dw	159
   282  0025C2  008F               	dw	143
   283  0025C4  00C7               	dw	199
   284  0025C6  00E3               	dw	227
   285  0025C8  00F3               	dw	243
   286  0025CA  00F3               	dw	243
   287  0025CC  00E3               	dw	227
   288  0025CE  0087               	dw	135
   289  0025D0  008F               	dw	143
   290  0025D2  009F               	dw	159
   291  0025D4  009F               	dw	159
   292  0025D6  009F               	dw	159
   293  0025D8  008F               	dw	143
   294  0025DA  00CF               	dw	207
   295  0025DC  00CF               	dw	207
   296  0025DE  00CF               	dw	207
   297  0025E0  00CF               	dw	207
   298  0025E2  0081               	dw	129
   299  0025E4  0081               	dw	129
   300  0025E6  0081               	dw	129
   301  0025E8  0081               	dw	129
   302  0025EA  0099               	dw	153
   303  0025EC  0099               	dw	153
   304  0025EE  0099               	dw	153
   305  0025F0  0099               	dw	153
   306  0025F2  00BD               	dw	189
   307  0025F4  00BD               	dw	189
   308  0025F6  00BD               	dw	189
   309  0025F8  00BD               	dw	189
   310  0025FA  00BD               	dw	189
   311  0025FC  00B9               	dw	185
   312  0025FE  00B1               	dw	177
   313  002600  00B3               	dw	179
   314  002602  00A3               	dw	163
   315  002604  00A7               	dw	167
   316  002606  00A7               	dw	167
   317  002608  00A7               	dw	167
   318  00260A  00A7               	dw	167
   319  00260C  00A7               	dw	167
   320  00260E  00E7               	dw	231
   321  002610  00C7               	dw	199
   322  002612  00C7               	dw	199
   323  002614  00E7               	dw	231
   324  002616  00E7               	dw	231
   325  002618  0083               	dw	131
   326  00261A  0081               	dw	129
   327  00261C  00B1               	dw	177
   328  00261E  00B9               	dw	185
   329  002620  00B1               	dw	177
   330  002622  0081               	dw	129
   331  002624  0087               	dw	135
   332  002626  0087               	dw	135
   333  002628  00C3               	dw	195
   334  00262A  00E1               	dw	225
   335  00262C  00F1               	dw	241
   336  00262E  00E1               	dw	225
   337  002630  00C1               	dw	193
   338  002632  0085               	dw	133
   339  002634  0085               	dw	133
   340  002636  0085               	dw	133
   341  002638  0085               	dw	133
   342  00263A  0085               	dw	133
   343  00263C  0085               	dw	133
   344  00263E  0085               	dw	133
   345  002640  0085               	dw	133
   346  002642  008D               	dw	141
   347  002644  009D               	dw	157
   348  002646  00FD               	dw	253
   349  002648  00FD               	dw	253
   350  00264A  00FD               	dw	253
   351  00264C  00F9               	dw	249
   352  00264E  00E1               	dw	225
   353  002650  00E3               	dw	227
   354  002652  00E7               	dw	231
   355  002654  00E7               	dw	231
   356  002656  00E7               	dw	231
   357  002658  00C3               	dw	195
   358  00265A  0081               	dw	129
   359  00265C  0099               	dw	153
   360  00265E  0099               	dw	153
   361  002660  0099               	dw	153
   362  002662  0099               	dw	153
   363  002664  0099               	dw	153
   364  002666  0099               	dw	153
   365  002668  0099               	dw	153
   366  00266A  00BD               	dw	189
   367  00266C  00BD               	dw	189
   368  00266E  0081               	dw	129
   369  002670  0081               	dw	129
   370  002672  0081               	dw	129
   371  002674  0081               	dw	129
   372  002676  0081               	dw	129
   373  002678  0081               	dw	129
   374  00267A  00C3               	dw	195
   375  00267C  00E7               	dw	231
   376  00267E  00F7               	dw	247
   377  002680  00F7               	dw	247
   378  002682  00F7               	dw	247
   379  002684  00F7               	dw	247
   380  002686  00F7               	dw	247
   381  002688  00F7               	dw	247
   382  00268A  00F7               	dw	247
   383  00268C  00F7               	dw	247
   384  00268E  00F7               	dw	247
   385  002690  00F7               	dw	247
   386  002692  0081               	dw	129
   387  002694  0081               	dw	129
   388  002696  0081               	dw	129
   389  002698  0081               	dw	129
   390  00269A  0081               	dw	129
   391  00269C  0081               	dw	129
   392  00269E  0081               	dw	129
   393  0026A0  0081               	dw	129
   394  0000                     _SSP1CON1bits	set	4038
   395  0000                     _INTCON2bits	set	4081
   396  0000                     _SSP1STATbits	set	4039
   397  0000                     _SSP1BUF	set	4041
   398  0000                     _INTCONbits	set	4082
   399                           
   400                           	psect	nvBANK0
   401  0000FE                     __pnvBANK0:
   402                           	callstack 0
   403  0000FE                     _place:
   404                           	callstack 0
   405  0000FE                     	ds	2
   406  0000                     _LATCbits	set	3979
   407  0000                     _TMR0	set	4054
   408  0000                     _PPSCONbits	set	3775
   409  0000                     _ANCON0	set	3912
   410  0000                     _PORTB	set	3969
   411  0000                     _LATC	set	3979
   412  0000                     _T0CONbits	set	4053
   413  0000                     _INTCON3bits	set	4080
   414  0000                     _TRISA	set	3986
   415  0000                     _SSP1CON2bits	set	4037
   416  0000                     _LATD	set	3980
   417  0000                     _RCONbits	set	4048
   418  0000                     _PORTCbits	set	3970
   419  0000                     _PORTAbits	set	3968
   420  0000                     _ANCON1	set	3913
   421  0000                     _PIR1bits	set	3998
   422  0000                     _EECON2	set	4007
   423  0000                     _TRISD	set	3989
   424  0000                     _TRISC	set	3988
   425  0000                     _TRISB	set	3987
   426  0000                     _RPINR1	set	3809
   427  0000                     _RPINR2	set	3810
   428                           
   429                           	psect	smallconst
   430  000F00                     __psmallconst:
   431                           	callstack 0
   432  000F00  00                 	db	0
   433  000F01                     STR_16:
   434  000F01  62                 	db	98	;'b'
   435  000F02  6F                 	db	111	;'o'
   436  000F03  72                 	db	114	;'r'
   437  000F04  72                 	db	114	;'r'
   438  000F05  61                 	db	97	;'a'
   439  000F06  6E                 	db	110	;'n'
   440  000F07  64                 	db	100	;'d'
   441  000F08  6F                 	db	111	;'o'
   442  000F09  20                 	db	32
   443  000F0A  6D                 	db	109	;'m'
   444  000F0B  65                 	db	101	;'e'
   445  000F0C  6D                 	db	109	;'m'
   446  000F0D  6F                 	db	111	;'o'
   447  000F0E  72                 	db	114	;'r'
   448  000F0F  69                 	db	105	;'i'
   449  000F10  61                 	db	97	;'a'
   450  000F11  00                 	db	0
   451  000F12                     STR_12:
   452  000F12  4E                 	db	78	;'N'
   453  000F13  65                 	db	101	;'e'
   454  000F14  77                 	db	119	;'w'
   455  000F15  20                 	db	32
   456  000F16  68                 	db	104	;'h'
   457  000F17  69                 	db	105	;'i'
   458  000F18  67                 	db	103	;'g'
   459  000F19  68                 	db	104	;'h'
   460  000F1A  20                 	db	32
   461  000F1B  73                 	db	115	;'s'
   462  000F1C  63                 	db	99	;'c'
   463  000F1D  6F                 	db	111	;'o'
   464  000F1E  72                 	db	114	;'r'
   465  000F1F  65                 	db	101	;'e'
   466  000F20  21                 	db	33
   467  000F21  00                 	db	0
   468  000F22                     STR_9:
   469  000F22  50                 	db	80	;'P'
   470  000F23  72                 	db	114	;'r'
   471  000F24  65                 	db	101	;'e'
   472  000F25  73                 	db	115	;'s'
   473  000F26  73                 	db	115	;'s'
   474  000F27  20                 	db	32
   475  000F28  74                 	db	116	;'t'
   476  000F29  6F                 	db	111	;'o'
   477  000F2A  20                 	db	32
   478  000F2B  63                 	db	99	;'c'
   479  000F2C  6F                 	db	111	;'o'
   480  000F2D  6E                 	db	110	;'n'
   481  000F2E  74                 	db	116	;'t'
   482  000F2F  2E                 	db	46
   483  000F30  00                 	db	0
   484  000F31                     STR_14:
   485  000F31  48                 	db	72	;'H'
   486  000F32  69                 	db	105	;'i'
   487  000F33  67                 	db	103	;'g'
   488  000F34  68                 	db	104	;'h'
   489  000F35  65                 	db	101	;'e'
   490  000F36  73                 	db	115	;'s'
   491  000F37  74                 	db	116	;'t'
   492  000F38  20                 	db	32
   493  000F39  73                 	db	115	;'s'
   494  000F3A  63                 	db	99	;'c'
   495  000F3B  6F                 	db	111	;'o'
   496  000F3C  72                 	db	114	;'r'
   497  000F3D  65                 	db	101	;'e'
   498  000F3E  3A                 	db	58	;':'
   499  000F3F  00                 	db	0
   500  000F40                     STR_10:
   501  000F40  59                 	db	89	;'Y'
   502  000F41  6F                 	db	111	;'o'
   503  000F42  75                 	db	117	;'u'
   504  000F43  72                 	db	114	;'r'
   505  000F44  20                 	db	32
   506  000F45  53                 	db	83	;'S'
   507  000F46  63                 	db	99	;'c'
   508  000F47  6F                 	db	111	;'o'
   509  000F48  72                 	db	114	;'r'
   510  000F49  65                 	db	101	;'e'
   511  000F4A  3A                 	db	58	;':'
   512  000F4B  25                 	db	37
   513  000F4C  6C                 	db	108	;'l'
   514  000F4D  75                 	db	117	;'u'
   515  000F4E  00                 	db	0
   516  000F4F                     STR_8:
   517  000F4F  47                 	db	71	;'G'
   518  000F50  61                 	db	97	;'a'
   519  000F51  6D                 	db	109	;'m'
   520  000F52  65                 	db	101	;'e'
   521  000F53  20                 	db	32
   522  000F54  6F                 	db	111	;'o'
   523  000F55  76                 	db	118	;'v'
   524  000F56  65                 	db	101	;'e'
   525  000F57  72                 	db	114	;'r'
   526  000F58  20                 	db	32
   527  000F59  3A                 	db	58	;':'
   528  000F5A  28                 	db	40
   529  000F5B  20                 	db	32
   530  000F5C  00                 	db	0
   531  000F5D                     STR_2:
   532  000F5D  47                 	db	71	;'G'
   533  000F5E  65                 	db	101	;'e'
   534  000F5F  74                 	db	116	;'t'
   535  000F60  20                 	db	32
   536  000F61  73                 	db	115	;'s'
   537  000F62  65                 	db	101	;'e'
   538  000F63  74                 	db	116	;'t'
   539  000F64  2E                 	db	46
   540  000F65  2E                 	db	46
   541  000F66  2E                 	db	46
   542  000F67  00                 	db	0
   543  000F68                     STR_15:
   544  000F68  25                 	db	37
   545  000F69  6C                 	db	108	;'l'
   546  000F6A  75                 	db	117	;'u'
   547  000F6B  20                 	db	32
   548  000F6C  70                 	db	112	;'p'
   549  000F6D  6F                 	db	111	;'o'
   550  000F6E  69                 	db	105	;'i'
   551  000F6F  6E                 	db	110	;'n'
   552  000F70  74                 	db	116	;'t'
   553  000F71  73                 	db	115	;'s'
   554  000F72  00                 	db	0
   555  000F73                     STR_13:
   556  000F73  53                 	db	83	;'S'
   557  000F74  63                 	db	99	;'c'
   558  000F75  6F                 	db	111	;'o'
   559  000F76  72                 	db	114	;'r'
   560  000F77  65                 	db	101	;'e'
   561  000F78  3A                 	db	58	;':'
   562  000F79  20                 	db	32
   563  000F7A  25                 	db	37
   564  000F7B  6C                 	db	108	;'l'
   565  000F7C  75                 	db	117	;'u'
   566  000F7D  00                 	db	0
   567  000F7E                     STR_11:
   568  000F7E  53                 	db	83	;'S'
   569  000F7F  61                 	db	97	;'a'
   570  000F80  76                 	db	118	;'v'
   571  000F81  69                 	db	105	;'i'
   572  000F82  6E                 	db	110	;'n'
   573  000F83  67                 	db	103	;'g'
   574  000F84  2E                 	db	46
   575  000F85  2E                 	db	46
   576  000F86  2E                 	db	46
   577  000F87  00                 	db	0
   578  000F88                     STR_1:
   579  000F88  52                 	db	82	;'R'
   580  000F89  65                 	db	101	;'e'
   581  000F8A  61                 	db	97	;'a'
   582  000F8B  64                 	db	100	;'d'
   583  000F8C  79                 	db	121	;'y'
   584  000F8D  2E                 	db	46
   585  000F8E  2E                 	db	46
   586  000F8F  2E                 	db	46
   587  000F90  00                 	db	0
   588  000F91                     STR_4:
   589  000F91  4E                 	db	78	;'N'
   590  000F92  69                 	db	105	;'i'
   591  000F93  76                 	db	118	;'v'
   592  000F94  65                 	db	101	;'e'
   593  000F95  6C                 	db	108	;'l'
   594  000F96  20                 	db	32
   595  000F97  20                 	db	32
   596  000F98  31                 	db	49	;'1'
   597  000F99  00                 	db	0
   598  000F9A                     STR_5:
   599  000F9A  4E                 	db	78	;'N'
   600  000F9B  69                 	db	105	;'i'
   601  000F9C  76                 	db	118	;'v'
   602  000F9D  65                 	db	101	;'e'
   603  000F9E  6C                 	db	108	;'l'
   604  000F9F  20                 	db	32
   605  000FA0  32                 	db	50	;'2'
   606  000FA1  00                 	db	0
   607  000FA2                     STR_6:
   608  000FA2  4E                 	db	78	;'N'
   609  000FA3  69                 	db	105	;'i'
   610  000FA4  76                 	db	118	;'v'
   611  000FA5  65                 	db	101	;'e'
   612  000FA6  6C                 	db	108	;'l'
   613  000FA7  20                 	db	32
   614  000FA8  33                 	db	51	;'3'
   615  000FA9  00                 	db	0
   616  000FAA                     STR_7:
   617  000FAA  4E                 	db	78	;'N'
   618  000FAB  69                 	db	105	;'i'
   619  000FAC  76                 	db	118	;'v'
   620  000FAD  65                 	db	101	;'e'
   621  000FAE  6C                 	db	108	;'l'
   622  000FAF  20                 	db	32
   623  000FB0  34                 	db	52	;'4'
   624  000FB1  00                 	db	0
   625  000FB2                     STR_3:
   626  000FB2  47                 	db	71	;'G'
   627  000FB3  4F                 	db	79	;'O'
   628  000FB4  21                 	db	33
   629  000FB5  00                 	db	0
   630  000FB6                     STR_28:
   631  000FB6  6C                 	db	108	;'l'
   632  000FB7  58                 	db	88	;'X'
   633  000FB8  00                 	db	0
   634  000FB9                     STR_24:
   635  000FB9  6C                 	db	108	;'l'
   636  000FBA  78                 	db	120	;'x'
   637  000FBB  00                 	db	0
   638  000FBC                     STR_17:
   639  000FBC  25                 	db	37
   640  000FBD  78                 	db	120	;'x'
   641  000FBE  00                 	db	0
   642  000FBF  00                 	db	0	; dummy byte at the end
   643  0000                     
   644                           ; #config settings
   645                           
   646                           	psect	cinit
   647  002AD0                     __pcinit:
   648                           	callstack 0
   649  002AD0                     start_initialization:
   650                           	callstack 0
   651  002AD0                     __initialization:
   652                           	callstack 0
   653                           
   654                           ; Initialize objects allocated to BANK5 (256 bytes)
   655                           ; load TBLPTR registers with __pidataBANK5
   656  002AD0  0EA2               	movlw	low __pidataBANK5
   657  002AD2  6EF6               	movwf	tblptrl,c
   658  002AD4  0E25               	movlw	high __pidataBANK5
   659  002AD6  6EF7               	movwf	tblptrh,c
   660  002AD8  0E00               	movlw	low (__pidataBANK5 shr (0+16))
   661  002ADA  6EF8               	movwf	tblptru,c
   662  002ADC  EE05  F000         	lfsr	0,__pdataBANK5
   663  002AE0  EE11 F000          	lfsr	1,256
   664  002AE4                     copy_data0:
   665  002AE4  0009               	tblrd		*+
   666  002AE6  CFF5 FFEE          	movff	tablat,postinc0
   667  002AEA  50E5               	movf	postdec1,w,c
   668  002AEC  50E1               	movf	fsr1l,w,c
   669  002AEE  E1FA               	bnz	copy_data0
   670  002AF0  50E2               	movf	fsr1h,w,c
   671  002AF2  E1F8               	bnz	copy_data0
   672                           
   673                           ; Initialize objects allocated to BANK4 (256 bytes)
   674                           ; load TBLPTR registers with __pidataBANK4
   675  002AF4  0EA2               	movlw	low __pidataBANK4
   676  002AF6  6EF6               	movwf	tblptrl,c
   677  002AF8  0E24               	movlw	high __pidataBANK4
   678  002AFA  6EF7               	movwf	tblptrh,c
   679  002AFC  0E00               	movlw	low (__pidataBANK4 shr (0+16))
   680  002AFE  6EF8               	movwf	tblptru,c
   681  002B00  EE04  F000         	lfsr	0,__pdataBANK4
   682  002B04  EE11 F000          	lfsr	1,256
   683  002B08                     copy_data1:
   684  002B08  0009               	tblrd		*+
   685  002B0A  CFF5 FFEE          	movff	tablat,postinc0
   686  002B0E  50E5               	movf	postdec1,w,c
   687  002B10  50E1               	movf	fsr1l,w,c
   688  002B12  E1FA               	bnz	copy_data1
   689  002B14  50E2               	movf	fsr1h,w,c
   690  002B16  E1F8               	bnz	copy_data1
   691                           
   692                           ; Initialize objects allocated to BANK3 (16 bytes)
   693                           ; load TBLPTR registers with __pidataBANK3
   694  002B18  0EFA               	movlw	low __pidataBANK3
   695  002B1A  6EF6               	movwf	tblptrl,c
   696  002B1C  0E2F               	movlw	high __pidataBANK3
   697  002B1E  6EF7               	movwf	tblptrh,c
   698  002B20  0E00               	movlw	low (__pidataBANK3 shr (0+16))
   699  002B22  6EF8               	movwf	tblptru,c
   700  002B24  EE03  F020         	lfsr	0,__pdataBANK3
   701  002B28  EE10 F010          	lfsr	1,16
   702  002B2C                     copy_data2:
   703  002B2C  0009               	tblrd		*+
   704  002B2E  CFF5 FFEE          	movff	tablat,postinc0
   705  002B32  50E5               	movf	postdec1,w,c
   706  002B34  50E1               	movf	fsr1l,w,c
   707  002B36  E1FA               	bnz	copy_data2
   708                           
   709                           ; Initialize objects allocated to BANK0 (16 bytes)
   710                           ; load TBLPTR registers with __pidataBANK0
   711  002B38  0EEA               	movlw	low __pidataBANK0
   712  002B3A  6EF6               	movwf	tblptrl,c
   713  002B3C  0E2F               	movlw	high __pidataBANK0
   714  002B3E  6EF7               	movwf	tblptrh,c
   715  002B40  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   716  002B42  6EF8               	movwf	tblptru,c
   717  002B44  EE00  F0EE         	lfsr	0,__pdataBANK0
   718  002B48  EE10 F010          	lfsr	1,16
   719  002B4C                     copy_data3:
   720  002B4C  0009               	tblrd		*+
   721  002B4E  CFF5 FFEE          	movff	tablat,postinc0
   722  002B52  50E5               	movf	postdec1,w,c
   723  002B54  50E1               	movf	fsr1l,w,c
   724  002B56  E1FA               	bnz	copy_data3
   725                           
   726                           ; Clear objects allocated to BANK3 (32 bytes)
   727  002B58  EE03  F000         	lfsr	0,__pbssBANK3
   728  002B5C  0E20               	movlw	32
   729  002B5E                     clear_0:
   730  002B5E  6AEE               	clrf	postinc0,c
   731  002B60  06E8               	decf	wreg,f,c
   732  002B62  E1FD               	bnz	clear_0
   733                           
   734                           ; Clear objects allocated to BANK0 (42 bytes)
   735  002B64  EE00  F0C4         	lfsr	0,__pbssBANK0
   736  002B68  0E2A               	movlw	42
   737  002B6A                     clear_1:
   738  002B6A  6AEE               	clrf	postinc0,c
   739  002B6C  06E8               	decf	wreg,f,c
   740  002B6E  E1FD               	bnz	clear_1
   741  002B70                     end_of_initialization:
   742                           	callstack 0
   743  002B70                     __end_of__initialization:
   744                           	callstack 0
   745  002B70  905E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   746  002B72  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   747  002B74  0E00               	movlw	low (__Lsmallconst shr (0+16))
   748  002B76  6EF8               	movwf	tblptru,c
   749  002B78  0E0F               	movlw	high __Lsmallconst
   750  002B7A  6EF7               	movwf	tblptrh,c
   751  002B7C  0100               	movlb	0
   752  002B7E  EFE0  F007         	goto	_main	;jump to C main() function
   753                           
   754                           	psect	bssBANK0
   755  0000C4                     __pbssBANK0:
   756                           	callstack 0
   757  0000C4                     _nout:
   758                           	callstack 0
   759  0000C4                     	ds	2
   760  0000C6                     _width:
   761                           	callstack 0
   762  0000C6                     	ds	2
   763  0000C8                     _prec:
   764                           	callstack 0
   765  0000C8                     	ds	2
   766  0000CA                     _flags:
   767                           	callstack 0
   768  0000CA                     	ds	2
   769  0000CC                     _points:
   770                           	callstack 0
   771  0000CC                     	ds	2
   772  0000CE                     _timeron:
   773                           	callstack 0
   774  0000CE                     	ds	2
   775  0000D0                     _puntajeguardado:
   776                           	callstack 0
   777  0000D0                     	ds	2
   778  0000D2                     _start:
   779                           	callstack 0
   780  0000D2                     	ds	2
   781  0000D4                     _exit_colision:
   782                           	callstack 0
   783  0000D4                     	ds	2
   784  0000D6                     _enter_colision:
   785                           	callstack 0
   786  0000D6                     	ds	2
   787  0000D8                     _puntaje:
   788                           	callstack 0
   789  0000D8                     	ds	2
   790  0000DA                     _t:
   791                           	callstack 0
   792  0000DA                     	ds	2
   793  0000DC                     _k:
   794                           	callstack 0
   795  0000DC                     	ds	2
   796  0000DE                     _j:
   797                           	callstack 0
   798  0000DE                     	ds	2
   799  0000E0                     _i:
   800                           	callstack 0
   801  0000E0                     	ds	2
   802  0000E2                     _posicion:
   803                           	callstack 0
   804  0000E2                     	ds	2
   805  0000E4                     _map3:
   806                           	callstack 0
   807  0000E4                     	ds	2
   808  0000E6                     _map2:
   809                           	callstack 0
   810  0000E6                     	ds	2
   811  0000E8                     _map:
   812                           	callstack 0
   813  0000E8                     	ds	2
   814  0000EA                     _statusflag:
   815                           	callstack 0
   816  0000EA                     	ds	2
   817  0000EC                     _flag:
   818                           	callstack 0
   819  0000EC                     	ds	2
   820                           
   821                           	psect	dataBANK0
   822  0000EE                     __pdataBANK0:
   823                           	callstack 0
   824  0000EE                     car_pos@F7150:
   825                           	callstack 0
   826  0000EE                     	ds	16
   827                           
   828                           	psect	bssBANK3
   829  000300                     __pbssBANK3:
   830                           	callstack 0
   831  000300                     _dbuf:
   832                           	callstack 0
   833  000300                     	ds	32
   834                           
   835                           	psect	dataBANK3
   836  000320                     __pdataBANK3:
   837                           	callstack 0
   838  000320                     colision@F7155:
   839                           	callstack 0
   840  000320                     	ds	16
   841                           
   842                           	psect	dataBANK4
   843  000400                     __pdataBANK4:
   844                           	callstack 0
   845  000400                     main@F7145:
   846                           	callstack 0
   847  000400                     	ds	256
   848                           
   849                           	psect	dataBANK5
   850  000500                     __pdataBANK5:
   851                           	callstack 0
   852  000500                     main@F7147:
   853                           	callstack 0
   854  000500                     	ds	256
   855                           
   856                           	psect	cstackBANK2
   857  000200                     __pcstackBANK2:
   858                           	callstack 0
   859  000200                     main@map3:
   860                           	callstack 0
   861                           
   862                           ; 256 bytes @ 0x0
   863  000200                     	ds	256
   864                           
   865                           	psect	cstackBANK1
   866  000100                     __pcstackBANK1:
   867                           	callstack 0
   868  000100                     main@map:
   869                           	callstack 0
   870                           
   871                           ; 256 bytes @ 0x0
   872  000100                     	ds	256
   873                           
   874                           	psect	cstackBANK0
   875  000060                     __pcstackBANK0:
   876                           	callstack 0
   877  000060                     ?_sprintf:
   878                           	callstack 0
   879  000060                     sprintf@s:
   880                           	callstack 0
   881                           
   882                           ; 2 bytes @ 0x0
   883  000060                     	ds	2
   884  000062                     sprintf@fmt:
   885                           	callstack 0
   886                           
   887                           ; 2 bytes @ 0x2
   888  000062                     	ds	4
   889  000066                     sprintf@ap:
   890                           	callstack 0
   891                           
   892                           ; 2 bytes @ 0x6
   893  000066                     	ds	2
   894  000068                     sprintf@f:
   895                           	callstack 0
   896                           
   897                           ; 11 bytes @ 0x8
   898  000068                     	ds	11
   899  000073                     escritura@vector:
   900                           	callstack 0
   901  000073                     clean_memory@vector:
   902                           	callstack 0
   903                           
   904                           ; 16 bytes @ 0x13
   905  000073                     	ds	12
   906  00007F                     escritura@alta:
   907                           	callstack 0
   908                           
   909                           ; 1 bytes @ 0x1F
   910  00007F                     	ds	1
   911  000080                     escritura@baja:
   912                           	callstack 0
   913                           
   914                           ; 1 bytes @ 0x20
   915  000080                     	ds	1
   916  000081                     escritura@msb:
   917                           	callstack 0
   918                           
   919                           ; 1 bytes @ 0x21
   920  000081                     	ds	1
   921  000082                     escritura@lsb:
   922                           	callstack 0
   923                           
   924                           ; 1 bytes @ 0x22
   925  000082                     	ds	1
   926  000083                     escritura@a:
   927                           	callstack 0
   928  000083                     clean_memory@dato1:
   929                           	callstack 0
   930                           
   931                           ; 1 bytes @ 0x23
   932  000083                     	ds	1
   933  000084                     clean_memory@dato2:
   934                           	callstack 0
   935  000084                     escritura@totalguardado:
   936                           	callstack 0
   937                           
   938                           ; 2 bytes @ 0x24
   939  000084                     	ds	1
   940  000085                     clean_memory@a:
   941                           	callstack 0
   942                           
   943                           ; 1 bytes @ 0x25
   944  000085                     	ds	1
   945  000086                     ??_colision:
   946                           
   947                           ; 1 bytes @ 0x26
   948  000086                     	ds	2
   949  000088                     colision@map2:
   950                           	callstack 0
   951                           
   952                           ; 16 bytes @ 0x28
   953  000088                     	ds	16
   954  000098                     colision@vector2:
   955                           	callstack 0
   956                           
   957                           ; 15 bytes @ 0x38
   958  000098                     	ds	15
   959  0000A7                     colision@vector:
   960                           	callstack 0
   961                           
   962                           ; 15 bytes @ 0x47
   963  0000A7                     	ds	15
   964  0000B6                     ??_main:
   965                           
   966                           ; 1 bytes @ 0x56
   967  0000B6                     	ds	2
   968  0000B8                     main@vector:
   969                           	callstack 0
   970                           
   971                           ; 10 bytes @ 0x58
   972  0000B8                     	ds	10
   973  0000C2                     main@speed:
   974                           	callstack 0
   975                           
   976                           ; 2 bytes @ 0x62
   977  0000C2                     	ds	2
   978                           
   979                           	psect	cstackCOMRAM
   980  000001                     __pcstackCOMRAM:
   981                           	callstack 0
   982  000001                     ??_pulso:
   983  000001                     ?_strlen:
   984                           	callstack 0
   985  000001                     ?_isupper:
   986                           	callstack 0
   987  000001                     ?_isalpha:
   988                           	callstack 0
   989  000001                     ?_strncmp:
   990                           	callstack 0
   991  000001                     ?_islower:
   992                           	callstack 0
   993  000001                     ?___wmul:
   994                           	callstack 0
   995  000001                     ?___lwdiv:
   996                           	callstack 0
   997  000001                     ?___lodiv:
   998                           	callstack 0
   999  000001                     ?___lomod:
  1000                           	callstack 0
  1001  000001                     ___wmul@multiplier:
  1002                           	callstack 0
  1003  000001                     ___lwdiv@dividend:
  1004                           	callstack 0
  1005  000001                     isalpha@c:
  1006                           	callstack 0
  1007  000001                     isupper@c:
  1008                           	callstack 0
  1009  000001                     fputc@c:
  1010                           	callstack 0
  1011  000001                     strlen@s:
  1012                           	callstack 0
  1013  000001                     strncmp@_l:
  1014                           	callstack 0
  1015  000001                     islower@c:
  1016                           	callstack 0
  1017  000001                     ___lodiv@dividend:
  1018                           	callstack 0
  1019  000001                     ___lomod@dividend:
  1020                           	callstack 0
  1021  000001                     car_pos@pos:
  1022                           	callstack 0
  1023                           
  1024                           ; 16 bytes @ 0x0
  1025  000001                     	ds	1
  1026  000002                     ??_inicializacion:
  1027  000002                     ??_cleanDisp:
  1028  000002                     Texto@A:
  1029                           	callstack 0
  1030                           
  1031                           ; 2 bytes @ 0x1
  1032  000002                     	ds	1
  1033  000003                     ??_isupper:
  1034  000003                     ??_isalpha:
  1035  000003                     ??_islower:
  1036  000003                     ___wmul@multiplicand:
  1037                           	callstack 0
  1038  000003                     ___lwdiv@divisor:
  1039                           	callstack 0
  1040  000003                     fputc@fp:
  1041                           	callstack 0
  1042  000003                     strlen@a:
  1043                           	callstack 0
  1044  000003                     strncmp@_r:
  1045                           	callstack 0
  1046                           
  1047                           ; 2 bytes @ 0x2
  1048  000003                     	ds	1
  1049  000004                     ??_Texto:
  1050                           
  1051                           ; 1 bytes @ 0x3
  1052  000004                     	ds	1
  1053  000005                     ??_fputc:
  1054  000005                     ___wmul@product:
  1055                           	callstack 0
  1056  000005                     ___lwdiv@quotient:
  1057                           	callstack 0
  1058  000005                     strncmp@n:
  1059                           	callstack 0
  1060                           
  1061                           ; 2 bytes @ 0x4
  1062  000005                     	ds	1
  1063  000006                     Texto@LSB:
  1064                           	callstack 0
  1065                           
  1066                           ; 1 bytes @ 0x5
  1067  000006                     	ds	1
  1068  000007                     ??_strncmp:
  1069  000007                     ?_toupper:
  1070                           	callstack 0
  1071  000007                     Texto@total1:
  1072                           	callstack 0
  1073  000007                     ___lwdiv@counter:
  1074                           	callstack 0
  1075  000007                     toupper@c:
  1076                           	callstack 0
  1077                           
  1078                           ; 2 bytes @ 0x6
  1079  000007                     	ds	1
  1080  000008                     Texto@total2:
  1081                           	callstack 0
  1082  000008                     strncmp@l:
  1083                           	callstack 0
  1084                           
  1085                           ; 2 bytes @ 0x7
  1086  000008                     	ds	1
  1087  000009                     ??_toupper:
  1088  000009                     Texto@aux:
  1089                           	callstack 0
  1090  000009                     ___lodiv@divisor:
  1091                           	callstack 0
  1092  000009                     ___lomod@divisor:
  1093                           	callstack 0
  1094                           
  1095                           ; 8 bytes @ 0x8
  1096  000009                     	ds	1
  1097  00000A                     Texto@MSB:
  1098                           	callstack 0
  1099  00000A                     fputs@s:
  1100                           	callstack 0
  1101  00000A                     strncmp@r:
  1102                           	callstack 0
  1103                           
  1104                           ; 2 bytes @ 0x9
  1105  00000A                     	ds	1
  1106  00000B                     Texto@i:
  1107                           	callstack 0
  1108                           
  1109                           ; 1 bytes @ 0xA
  1110  00000B                     	ds	1
  1111  00000C                     fputs@fp:
  1112                           	callstack 0
  1113                           
  1114                           ; 2 bytes @ 0xB
  1115  00000C                     	ds	2
  1116  00000E                     fputs@c:
  1117                           	callstack 0
  1118                           
  1119                           ; 1 bytes @ 0xD
  1120  00000E                     	ds	1
  1121  00000F                     fputs@i:
  1122                           	callstack 0
  1123                           
  1124                           ; 2 bytes @ 0xE
  1125  00000F                     	ds	2
  1126  000011                     ?_pad:
  1127                           	callstack 0
  1128  000011                     ___lomod@counter:
  1129                           	callstack 0
  1130  000011                     pad@fp:
  1131                           	callstack 0
  1132  000011                     ___lodiv@quotient:
  1133                           	callstack 0
  1134                           
  1135                           ; 8 bytes @ 0x10
  1136  000011                     	ds	2
  1137  000013                     pad@buf:
  1138                           	callstack 0
  1139                           
  1140                           ; 2 bytes @ 0x12
  1141  000013                     	ds	2
  1142  000015                     pad@p:
  1143                           	callstack 0
  1144                           
  1145                           ; 2 bytes @ 0x14
  1146  000015                     	ds	2
  1147  000017                     ??_pad:
  1148                           
  1149                           ; 1 bytes @ 0x16
  1150  000017                     	ds	1
  1151  000018                     pad@i:
  1152                           	callstack 0
  1153                           
  1154                           ; 2 bytes @ 0x17
  1155  000018                     	ds	1
  1156  000019                     ___lodiv@counter:
  1157                           	callstack 0
  1158                           
  1159                           ; 1 bytes @ 0x18
  1160  000019                     	ds	1
  1161  00001A                     pad@w:
  1162                           	callstack 0
  1163                           
  1164                           ; 2 bytes @ 0x19
  1165  00001A                     	ds	2
  1166  00001C                     ?_utoa:
  1167                           	callstack 0
  1168  00001C                     ?_xtoa:
  1169                           	callstack 0
  1170  00001C                     utoa@fp:
  1171                           	callstack 0
  1172  00001C                     xtoa@fp:
  1173                           	callstack 0
  1174                           
  1175                           ; 2 bytes @ 0x1B
  1176  00001C                     	ds	2
  1177  00001E                     utoa@d:
  1178                           	callstack 0
  1179  00001E                     xtoa@d:
  1180                           	callstack 0
  1181                           
  1182                           ; 8 bytes @ 0x1D
  1183  00001E                     	ds	8
  1184  000026                     ??_utoa:
  1185  000026                     xtoa@x:
  1186                           	callstack 0
  1187                           
  1188                           ; 1 bytes @ 0x25
  1189  000026                     	ds	1
  1190  000027                     ??_xtoa:
  1191                           
  1192                           ; 1 bytes @ 0x26
  1193  000027                     	ds	7
  1194  00002E                     utoa@p:
  1195                           	callstack 0
  1196                           
  1197                           ; 2 bytes @ 0x2D
  1198  00002E                     	ds	1
  1199  00002F                     xtoa@p:
  1200                           	callstack 0
  1201                           
  1202                           ; 2 bytes @ 0x2E
  1203  00002F                     	ds	1
  1204  000030                     utoa@w:
  1205                           	callstack 0
  1206                           
  1207                           ; 2 bytes @ 0x2F
  1208  000030                     	ds	1
  1209  000031                     xtoa@w:
  1210                           	callstack 0
  1211                           
  1212                           ; 2 bytes @ 0x30
  1213  000031                     	ds	1
  1214  000032                     utoa@n:
  1215                           	callstack 0
  1216                           
  1217                           ; 8 bytes @ 0x31
  1218  000032                     	ds	1
  1219  000033                     xtoa@n:
  1220                           	callstack 0
  1221                           
  1222                           ; 8 bytes @ 0x32
  1223  000033                     	ds	7
  1224  00003A                     utoa@i:
  1225                           	callstack 0
  1226                           
  1227                           ; 2 bytes @ 0x39
  1228  00003A                     	ds	1
  1229  00003B                     xtoa@i:
  1230                           	callstack 0
  1231                           
  1232                           ; 2 bytes @ 0x3A
  1233  00003B                     	ds	2
  1234  00003D                     xtoa@c:
  1235                           	callstack 0
  1236                           
  1237                           ; 2 bytes @ 0x3C
  1238  00003D                     	ds	2
  1239  00003F                     ?_vfpfcnvrt:
  1240                           	callstack 0
  1241  00003F                     vfpfcnvrt@fp:
  1242                           	callstack 0
  1243                           
  1244                           ; 2 bytes @ 0x3E
  1245  00003F                     	ds	2
  1246  000041                     vfpfcnvrt@fmt:
  1247                           	callstack 0
  1248                           
  1249                           ; 2 bytes @ 0x40
  1250  000041                     	ds	2
  1251  000043                     vfpfcnvrt@ap:
  1252                           	callstack 0
  1253                           
  1254                           ; 2 bytes @ 0x42
  1255  000043                     	ds	2
  1256  000045                     ??_vfpfcnvrt:
  1257                           
  1258                           ; 1 bytes @ 0x44
  1259  000045                     	ds	6
  1260  00004B                     vfpfcnvrt@c:
  1261                           	callstack 0
  1262                           
  1263                           ; 1 bytes @ 0x4A
  1264  00004B                     	ds	1
  1265  00004C                     vfpfcnvrt@llu:
  1266                           	callstack 0
  1267                           
  1268                           ; 8 bytes @ 0x4B
  1269  00004C                     	ds	8
  1270  000054                     ?_vfprintf:
  1271                           	callstack 0
  1272  000054                     vfprintf@fp:
  1273                           	callstack 0
  1274                           
  1275                           ; 2 bytes @ 0x53
  1276  000054                     	ds	2
  1277  000056                     vfprintf@fmt:
  1278                           	callstack 0
  1279                           
  1280                           ; 2 bytes @ 0x55
  1281  000056                     	ds	2
  1282  000058                     vfprintf@ap:
  1283                           	callstack 0
  1284                           
  1285                           ; 2 bytes @ 0x57
  1286  000058                     	ds	2
  1287  00005A                     vfprintf@cfmt:
  1288                           	callstack 0
  1289                           
  1290                           ; 2 bytes @ 0x59
  1291  00005A                     	ds	2
  1292  00005C                     ??_clean_memory:
  1293  00005C                     ??_escritura:
  1294                           
  1295                           ; 1 bytes @ 0x5B
  1296  00005C                     	ds	2
  1297                           
  1298 ;;
  1299 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1300 ;;
  1301 ;; *************** function _main *****************
  1302 ;; Defined at:
  1303 ;;		line 143 in file "FINAL.c"
  1304 ;; Parameters:    Size  Location     Type
  1305 ;;		None
  1306 ;; Auto vars:     Size  Location     Type
  1307 ;;  map3          256    0[BANK2 ] int [128]
  1308 ;;  map           256    0[BANK1 ] int [128]
  1309 ;;  vector2        15    0        unsigned char [15]
  1310 ;;  vector         10   88[BANK0 ] unsigned char [10]
  1311 ;;  speed           2   98[BANK0 ] int 
  1312 ;;  selector        2    0        int 
  1313 ;;  LSB             2    0        int 
  1314 ;;  MSB             2    0        int 
  1315 ;;  Temp            2    0        int 
  1316 ;;  Dtemp           2    0        int 
  1317 ;;  Dhumedad        2    0        int 
  1318 ;;  aux1            2    0        int 
  1319 ;;  aux             2    0        int 
  1320 ;;  Humedad         2    0        int 
  1321 ;; Return value:  Size  Location     Type
  1322 ;;                  1    wreg      void 
  1323 ;; Registers used:
  1324 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1325 ;; Tracked objects:
  1326 ;;		On entry : 0/0
  1327 ;;		On exit  : 0/0
  1328 ;;		Unchanged: 0/0
  1329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1331 ;;      Locals:         0      12     256     256       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1332 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1333 ;;      Totals:         0      14     256     256       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1334 ;;Total ram usage:      526 bytes
  1335 ;; Hardware stack levels required when called: 11
  1336 ;; This function calls:
  1337 ;;		_InitEntradasSalidas
  1338 ;;		_InitINT
  1339 ;;		_Texto
  1340 ;;		___wmul
  1341 ;;		_car_pos
  1342 ;;		_cleanDisp
  1343 ;;		_clean_memory
  1344 ;;		_colision
  1345 ;;		_configSPI
  1346 ;;		_direccion1
  1347 ;;		_inicializacion
  1348 ;;		_mapa
  1349 ;;		_mapeo
  1350 ;;		_pulso
  1351 ;;		_sprintf
  1352 ;; This function is called by:
  1353 ;;		Startup code after reset
  1354 ;; This function uses a non-reentrant model
  1355 ;;
  1356                           
  1357                           	psect	text0
  1358  000FC0                     __ptext0:
  1359                           	callstack 0
  1360  000FC0                     _main:
  1361                           	callstack 20
  1362  000FC0                     
  1363                           ;FINAL.c: 145:     timeron = 0;
  1364  000FC0  0E00               	movlw	0
  1365  000FC2  0100               	movlb	0	; () banked
  1366  000FC4  6FCF               	movwf	(_timeron+1)& (0+255),b
  1367  000FC6  0E00               	movlw	0
  1368  000FC8  6FCE               	movwf	_timeron& (0+255),b
  1369                           
  1370                           ;FINAL.c: 146:     int Humedad, aux, aux1;;FINAL.c: 147:     flag = 0;
  1371  000FCA  0E00               	movlw	0
  1372  000FCC  6FED               	movwf	(_flag+1)& (0+255),b
  1373  000FCE  0E00               	movlw	0
  1374  000FD0  6FEC               	movwf	_flag& (0+255),b
  1375                           
  1376                           ;FINAL.c: 148:     place = 3;
  1377  000FD2  0E00               	movlw	0
  1378  000FD4  6FFF               	movwf	(_place+1)& (0+255),b
  1379  000FD6  0E03               	movlw	3
  1380  000FD8  6FFE               	movwf	_place& (0+255),b
  1381  000FDA                     
  1382                           ; BSR set to: 0
  1383                           ;FINAL.c: 149:     mapeo();
  1384  000FDA  EC8D  F017         	call	_mapeo	;wreg free
  1385  000FDE                     
  1386                           ;FINAL.c: 150:     InitEntradasSalidas();
  1387  000FDE  ECC1  F017         	call	_InitEntradasSalidas	;wreg free
  1388  000FE2                     
  1389                           ;FINAL.c: 151:     configSPI();
  1390  000FE2  ECDA  F017         	call	_configSPI	;wreg free
  1391  000FE6                     
  1392                           ;FINAL.c: 152:     pulso();
  1393  000FE6  ECCF  F017         	call	_pulso	;wreg free
  1394  000FEA                     
  1395                           ;FINAL.c: 153:     inicializacion();
  1396  000FEA  ECC0  F011         	call	_inicializacion	;wreg free
  1397  000FEE                     
  1398                           ;FINAL.c: 154:     direccion1();
  1399  000FEE  ECEC  F017         	call	_direccion1	;wreg free
  1400  000FF2                     
  1401                           ;FINAL.c: 155:     InitINT();
  1402  000FF2  ECB0  F017         	call	_InitINT	;wreg free
  1403  000FF6                     
  1404                           ;FINAL.c: 156:     mapa();
  1405  000FF6  EC05  F018         	call	_mapa	;wreg free
  1406  000FFA                     
  1407                           ;FINAL.c: 157:     clean_memory();
  1408  000FFA  EC07  F010         	call	_clean_memory	;wreg free
  1409  000FFE                     
  1410                           ;FINAL.c: 159:     exit_colision = 0;
  1411  000FFE  0E00               	movlw	0
  1412  001000  0100               	movlb	0	; () banked
  1413  001002  6FD5               	movwf	(_exit_colision+1)& (0+255),b
  1414  001004  0E00               	movlw	0
  1415  001006  6FD4               	movwf	_exit_colision& (0+255),b
  1416  001008                     
  1417                           ; BSR set to: 0
  1418                           ;FINAL.c: 161:     int Dhumedad, Dtemp, Temp, MSB, LSB, selector, speed;;FINAL.c: 162:  
      +                             char vector[10], vector2[15];;FINAL.c: 163:       sprintf(vector,"Ready...");
  1419  001008  0EB8               	movlw	low main@vector
  1420  00100A  6F60               	movwf	sprintf@s& (0+255),b
  1421  00100C  0E00               	movlw	high main@vector
  1422  00100E  6F61               	movwf	(sprintf@s+1)& (0+255),b
  1423  001010  0E88               	movlw	low STR_1
  1424  001012  6F62               	movwf	sprintf@fmt& (0+255),b
  1425  001014  0E0F               	movlw	high STR_1
  1426  001016  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  1427  001018  EC84  F016         	call	_sprintf	;wreg free
  1428  00101C                     
  1429                           ;FINAL.c: 164:       Texto(vector);
  1430  00101C  0EB8               	movlw	low main@vector
  1431  00101E  6E02               	movwf	Texto@A^0,c
  1432  001020  0E00               	movlw	high main@vector
  1433  001022  6E03               	movwf	(Texto@A+1)^0,c
  1434  001024  ECC1  F015         	call	_Texto	;wreg free
  1435  001028                     
  1436                           ;FINAL.c: 165:       _delay((unsigned long)((500)*(48000000/4000.0)));
  1437  001028  0E1F               	movlw	31
  1438  00102A  0100               	movlb	0	; () banked
  1439  00102C  6FB7               	movwf	(??_main+1)& (0+255),b
  1440  00102E  0E71               	movlw	113
  1441  001030  6FB6               	movwf	??_main& (0+255),b
  1442  001032  0E1E               	movlw	30
  1443  001034                     u2577:
  1444  001034  2EE8               	decfsz	wreg,f,c
  1445  001036  D7FE               	bra	u2577
  1446  001038  2FB6               	decfsz	??_main& (0+255),f,b
  1447  00103A  D7FC               	bra	u2577
  1448  00103C  2FB7               	decfsz	(??_main+1)& (0+255),f,b
  1449  00103E  D7FA               	bra	u2577
  1450  001040  F000               	nop	
  1451  001042                     
  1452                           ;FINAL.c: 166:       cleanDisp();
  1453  001042  EC9F  F017         	call	_cleanDisp	;wreg free
  1454  001046                     
  1455                           ;FINAL.c: 168:       sprintf(vector,"Get set...");
  1456  001046  0EB8               	movlw	low main@vector
  1457  001048  0100               	movlb	0	; () banked
  1458  00104A  6F60               	movwf	sprintf@s& (0+255),b
  1459  00104C  0E00               	movlw	high main@vector
  1460  00104E  6F61               	movwf	(sprintf@s+1)& (0+255),b
  1461  001050  0E5D               	movlw	low STR_2
  1462  001052  6F62               	movwf	sprintf@fmt& (0+255),b
  1463  001054  0E0F               	movlw	high STR_2
  1464  001056  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  1465  001058  EC84  F016         	call	_sprintf	;wreg free
  1466  00105C                     
  1467                           ;FINAL.c: 169:       Texto(vector);
  1468  00105C  0EB8               	movlw	low main@vector
  1469  00105E  6E02               	movwf	Texto@A^0,c
  1470  001060  0E00               	movlw	high main@vector
  1471  001062  6E03               	movwf	(Texto@A+1)^0,c
  1472  001064  ECC1  F015         	call	_Texto	;wreg free
  1473  001068                     
  1474                           ;FINAL.c: 170:       _delay((unsigned long)((500)*(48000000/4000.0)));
  1475  001068  0E1F               	movlw	31
  1476  00106A  0100               	movlb	0	; () banked
  1477  00106C  6FB7               	movwf	(??_main+1)& (0+255),b
  1478  00106E  0E71               	movlw	113
  1479  001070  6FB6               	movwf	??_main& (0+255),b
  1480  001072  0E1E               	movlw	30
  1481  001074                     u2587:
  1482  001074  2EE8               	decfsz	wreg,f,c
  1483  001076  D7FE               	bra	u2587
  1484  001078  2FB6               	decfsz	??_main& (0+255),f,b
  1485  00107A  D7FC               	bra	u2587
  1486  00107C  2FB7               	decfsz	(??_main+1)& (0+255),f,b
  1487  00107E  D7FA               	bra	u2587
  1488  001080  F000               	nop	
  1489  001082                     
  1490                           ;FINAL.c: 171:       cleanDisp();
  1491  001082  EC9F  F017         	call	_cleanDisp	;wreg free
  1492  001086                     
  1493                           ;FINAL.c: 173:       sprintf(vector,"GO!");
  1494  001086  0EB8               	movlw	low main@vector
  1495  001088  0100               	movlb	0	; () banked
  1496  00108A  6F60               	movwf	sprintf@s& (0+255),b
  1497  00108C  0E00               	movlw	high main@vector
  1498  00108E  6F61               	movwf	(sprintf@s+1)& (0+255),b
  1499  001090  0EB2               	movlw	low STR_3
  1500  001092  6F62               	movwf	sprintf@fmt& (0+255),b
  1501  001094  0E0F               	movlw	high STR_3
  1502  001096  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  1503  001098  EC84  F016         	call	_sprintf	;wreg free
  1504  00109C                     
  1505                           ;FINAL.c: 174:       Texto(vector);
  1506  00109C  0EB8               	movlw	low main@vector
  1507  00109E  6E02               	movwf	Texto@A^0,c
  1508  0010A0  0E00               	movlw	high main@vector
  1509  0010A2  6E03               	movwf	(Texto@A+1)^0,c
  1510  0010A4  ECC1  F015         	call	_Texto	;wreg free
  1511  0010A8                     
  1512                           ;FINAL.c: 175:       _delay((unsigned long)((500)*(48000000/4000.0)));
  1513  0010A8  0E1F               	movlw	31
  1514  0010AA  0100               	movlb	0	; () banked
  1515  0010AC  6FB7               	movwf	(??_main+1)& (0+255),b
  1516  0010AE  0E71               	movlw	113
  1517  0010B0  6FB6               	movwf	??_main& (0+255),b
  1518  0010B2  0E1E               	movlw	30
  1519  0010B4                     u2597:
  1520  0010B4  2EE8               	decfsz	wreg,f,c
  1521  0010B6  D7FE               	bra	u2597
  1522  0010B8  2FB6               	decfsz	??_main& (0+255),f,b
  1523  0010BA  D7FC               	bra	u2597
  1524  0010BC  2FB7               	decfsz	(??_main+1)& (0+255),f,b
  1525  0010BE  D7FA               	bra	u2597
  1526  0010C0  F000               	nop	
  1527  0010C2                     
  1528                           ;FINAL.c: 176:       cleanDisp();
  1529  0010C2  EC9F  F017         	call	_cleanDisp	;wreg free
  1530  0010C6                     
  1531                           ;FINAL.c: 180:       sprintf(vector,"Nivel  1");
  1532  0010C6  0EB8               	movlw	low main@vector
  1533  0010C8  0100               	movlb	0	; () banked
  1534  0010CA  6F60               	movwf	sprintf@s& (0+255),b
  1535  0010CC  0E00               	movlw	high main@vector
  1536  0010CE  6F61               	movwf	(sprintf@s+1)& (0+255),b
  1537  0010D0  0E91               	movlw	low STR_4
  1538  0010D2  6F62               	movwf	sprintf@fmt& (0+255),b
  1539  0010D4  0E0F               	movlw	high STR_4
  1540  0010D6  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  1541  0010D8  EC84  F016         	call	_sprintf	;wreg free
  1542  0010DC                     
  1543                           ;FINAL.c: 181:       Texto(vector);
  1544  0010DC  0EB8               	movlw	low main@vector
  1545  0010DE  6E02               	movwf	Texto@A^0,c
  1546  0010E0  0E00               	movlw	high main@vector
  1547  0010E2  6E03               	movwf	(Texto@A+1)^0,c
  1548  0010E4  ECC1  F015         	call	_Texto	;wreg free
  1549  0010E8                     
  1550                           ;FINAL.c: 183:       timeron = 1;
  1551  0010E8  0E00               	movlw	0
  1552  0010EA  0100               	movlb	0	; () banked
  1553  0010EC  6FCF               	movwf	(_timeron+1)& (0+255),b
  1554  0010EE  0E01               	movlw	1
  1555  0010F0  6FCE               	movwf	_timeron& (0+255),b
  1556  0010F2                     
  1557                           ; BSR set to: 0
  1558                           ;FINAL.c: 184:       TMR0 = 0;
  1559  0010F2  0E00               	movlw	0
  1560  0010F4  6ED7               	movwf	215,c	;volatile
  1561  0010F6  0E00               	movlw	0
  1562  0010F8  6ED6               	movwf	214,c	;volatile
  1563  0010FA                     
  1564                           ; BSR set to: 0
  1565                           ;FINAL.c: 185:       T0CONbits.TMR0ON = 1;
  1566  0010FA  8ED5               	bsf	213,7,c	;volatile
  1567  0010FC                     
  1568                           ; BSR set to: 0
  1569                           ;FINAL.c: 189:       int map [128] = {0b10000001,
  1570  0010FC  EE24  F000         	lfsr	2,main@F7145
  1571  001100  EE11  F000         	lfsr	1,main@map
  1572  001104  0EFF               	movlw	255
  1573  001106                     u2431:
  1574  001106  CFDE FFE6          	movff	postinc2,postinc1
  1575  00110A  06E8               	decf	wreg,f,c
  1576  00110C  E2FC               	bc	u2431
  1577  00110E  0E00               	movlw	256
  1578  001110  5ED9               	subwf	fsr2l,f,c
  1579  001112  5EE1               	subwf	fsr1l,f,c
  1580  001114                     l2925:
  1581                           
  1582                           ; BSR set to: 0
  1583                           ;FINAL.c: 322:     {;FINAL.c: 325:         for (speed = 0; speed <2; speed++){
  1584  001114  0E00               	movlw	0
  1585  001116  6FC3               	movwf	(main@speed+1)& (0+255),b
  1586  001118  0E00               	movlw	0
  1587  00111A  6FC2               	movwf	main@speed& (0+255),b
  1588  00111C                     l2931:
  1589                           
  1590                           ; BSR set to: 0
  1591                           ;FINAL.c: 326:         for (i=0; i<120; i++){
  1592  00111C  0E00               	movlw	0
  1593  00111E  6FE1               	movwf	(_i+1)& (0+255),b
  1594  001120  0E00               	movlw	0
  1595  001122  6FE0               	movwf	_i& (0+255),b
  1596  001124                     l2937:
  1597                           
  1598                           ; BSR set to: 0
  1599                           ;FINAL.c: 327:             for (k = 0 ; k < (25 - speed*10); k++){
  1600  001124  0E00               	movlw	0
  1601  001126  6FDD               	movwf	(_k+1)& (0+255),b
  1602  001128  0E00               	movlw	0
  1603  00112A  6FDC               	movwf	_k& (0+255),b
  1604  00112C  EFF6  F008         	goto	l2973
  1605  001130                     l2939:
  1606                           
  1607                           ; BSR set to: 0
  1608                           ;FINAL.c: 328:             for (j=0; j<8; j++){
  1609  001130  0E00               	movlw	0
  1610  001132  6FDF               	movwf	(_j+1)& (0+255),b
  1611  001134  0E00               	movlw	0
  1612  001136  6FDE               	movwf	_j& (0+255),b
  1613  001138                     l2941:
  1614                           
  1615                           ; BSR set to: 0
  1616  001138  BFDF               	btfsc	(_j+1)& (0+255),7,b
  1617  00113A  EFA8  F008         	goto	u2441
  1618  00113E  51DF               	movf	(_j+1)& (0+255),w,b
  1619  001140  E109               	bnz	u2440
  1620  001142  0E08               	movlw	8
  1621  001144  5DDE               	subwf	_j& (0+255),w,b
  1622  001146  A0D8               	btfss	status,0,c
  1623  001148  EFA8  F008         	goto	u2441
  1624  00114C  EFAA  F008         	goto	u2440
  1625  001150                     u2441:
  1626  001150  EFAC  F008         	goto	l2945
  1627  001154                     u2440:
  1628  001154  EFF4  F008         	goto	l2971
  1629  001158                     l2945:
  1630                           
  1631                           ; BSR set to: 0
  1632                           ;FINAL.c: 330:                 car_pos();
  1633  001158  EC62  F017         	call	_car_pos	;wreg free
  1634  00115C                     
  1635                           ;FINAL.c: 331:                 LATC = 0;
  1636  00115C  0E00               	movlw	0
  1637  00115E  6E8B               	movwf	139,c	;volatile
  1638  001160                     
  1639                           ;FINAL.c: 332:                 LATD = posicion;
  1640  001160  C0E2  FF8C         	movff	_posicion,3980	;volatile
  1641  001164                     
  1642                           ;FINAL.c: 333:                 _delay((unsigned long)((1)*(48000000/4000.0)));
  1643  001164  0E10               	movlw	16
  1644  001166  0100               	movlb	0	; () banked
  1645  001168  6FB6               	movwf	??_main& (0+255),b
  1646  00116A  0E94               	movlw	148
  1647  00116C                     u2607:
  1648  00116C  2EE8               	decfsz	wreg,f,c
  1649  00116E  D7FE               	bra	u2607
  1650  001170  2FB6               	decfsz	??_main& (0+255),f,b
  1651  001172  D7FC               	bra	u2607
  1652  001174  F000               	nop	
  1653  001176                     
  1654                           ;FINAL.c: 336:                 LATC = j;
  1655  001176  C0DE  FF8B         	movff	_j,3979	;volatile
  1656  00117A                     
  1657                           ;FINAL.c: 337:                 LATD = map [j+i];
  1658  00117A  0100               	movlb	0	; () banked
  1659  00117C  51E0               	movf	_i& (0+255),w,b
  1660  00117E  25DE               	addwf	_j& (0+255),w,b
  1661  001180  6FB6               	movwf	??_main& (0+255),b
  1662  001182  51E1               	movf	(_i+1)& (0+255),w,b
  1663  001184  21DF               	addwfc	(_j+1)& (0+255),w,b
  1664  001186  6FB7               	movwf	(??_main+1)& (0+255),b
  1665  001188  90D8               	bcf	status,0,c
  1666  00118A  37B6               	rlcf	??_main& (0+255),f,b
  1667  00118C  37B7               	rlcf	(??_main+1)& (0+255),f,b
  1668  00118E  0E00               	movlw	low main@map
  1669  001190  25B6               	addwf	??_main& (0+255),w,b
  1670  001192  6ED9               	movwf	fsr2l,c
  1671  001194  0E01               	movlw	high main@map
  1672  001196  21B7               	addwfc	(??_main+1)& (0+255),w,b
  1673  001198  6EDA               	movwf	fsr2h,c
  1674  00119A  50DF               	movf	indf2,w,c
  1675  00119C  6E8C               	movwf	140,c	;volatile
  1676  00119E                     
  1677                           ; BSR set to: 0
  1678                           ;FINAL.c: 339:                 _delay((unsigned long)((1)*(48000000/4000.0)));
  1679  00119E  0E10               	movlw	16
  1680  0011A0  0100               	movlb	0	; () banked
  1681  0011A2  6FB6               	movwf	??_main& (0+255),b
  1682  0011A4  0E94               	movlw	148
  1683  0011A6                     u2617:
  1684  0011A6  2EE8               	decfsz	wreg,f,c
  1685  0011A8  D7FE               	bra	u2617
  1686  0011AA  2FB6               	decfsz	??_main& (0+255),f,b
  1687  0011AC  D7FC               	bra	u2617
  1688  0011AE  F000               	nop	
  1689  0011B0                     
  1690                           ;FINAL.c: 341:                 if(j==0){
  1691  0011B0  0100               	movlb	0	; () banked
  1692  0011B2  51DE               	movf	_j& (0+255),w,b
  1693  0011B4  11DF               	iorwf	(_j+1)& (0+255),w,b
  1694  0011B6  A4D8               	btfss	status,2,c
  1695  0011B8  EFE0  F008         	goto	u2451
  1696  0011BC  EFE2  F008         	goto	u2450
  1697  0011C0                     u2451:
  1698  0011C0  EFF0  F008         	goto	l2967
  1699  0011C4                     u2450:
  1700  0011C4                     
  1701                           ; BSR set to: 0
  1702                           ;FINAL.c: 342:                     colision();
  1703  0011C4  ECFC  F010         	call	_colision	;wreg free
  1704  0011C8                     
  1705                           ;FINAL.c: 343:                     if(exit_colision == 1){
  1706  0011C8  0100               	movlb	0	; () banked
  1707  0011CA  05D4               	decf	_exit_colision& (0+255),w,b
  1708  0011CC  11D5               	iorwf	(_exit_colision+1)& (0+255),w,b
  1709  0011CE  A4D8               	btfss	status,2,c
  1710  0011D0  EFEC  F008         	goto	u2461
  1711  0011D4  EFEE  F008         	goto	u2460
  1712  0011D8                     u2461:
  1713  0011D8  EFF0  F008         	goto	l2967
  1714  0011DC                     u2460:
  1715  0011DC  EF25  F00A         	goto	l153
  1716  0011E0                     l2967:
  1717                           
  1718                           ; BSR set to: 0
  1719                           ;FINAL.c: 349:             }
  1720  0011E0  4BDE               	infsnz	_j& (0+255),f,b
  1721  0011E2  2BDF               	incf	(_j+1)& (0+255),f,b
  1722  0011E4  EF9C  F008         	goto	l2941
  1723  0011E8                     l2971:
  1724                           
  1725                           ; BSR set to: 0
  1726                           ;FINAL.c: 351:         }
  1727  0011E8  4BDC               	infsnz	_k& (0+255),f,b
  1728  0011EA  2BDD               	incf	(_k+1)& (0+255),f,b
  1729  0011EC                     l2973:
  1730                           
  1731                           ; BSR set to: 0
  1732  0011EC  C0C2  F001         	movff	main@speed,___wmul@multiplier
  1733  0011F0  C0C3  F002         	movff	main@speed+1,___wmul@multiplier+1
  1734  0011F4  0EFF               	movlw	255
  1735  0011F6  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1736  0011F8  0EF6               	movlw	246
  1737  0011FA  6E03               	movwf	___wmul@multiplicand^0,c
  1738  0011FC  EC7A  F017         	call	___wmul	;wreg free
  1739  001200  0E19               	movlw	25
  1740  001202  2601               	addwf	?___wmul^0,f,c
  1741  001204  0E00               	movlw	0
  1742  001206  2202               	addwfc	(?___wmul+1)^0,f,c
  1743  001208  5001               	movf	?___wmul^0,w,c
  1744  00120A  0100               	movlb	0	; () banked
  1745  00120C  5DDC               	subwf	_k& (0+255),w,b
  1746  00120E  51DD               	movf	(_k+1)& (0+255),w,b
  1747  001210  0A80               	xorlw	128
  1748  001212  6FB6               	movwf	??_main& (0+255),b
  1749  001214  5002               	movf	(?___wmul+1)^0,w,c
  1750  001216  0A80               	xorlw	128
  1751  001218  59B6               	subwfb	??_main& (0+255),w,b
  1752  00121A  A0D8               	btfss	status,0,c
  1753  00121C  EF12  F009         	goto	u2471
  1754  001220  EF14  F009         	goto	u2470
  1755  001224                     u2471:
  1756  001224  EF98  F008         	goto	l2939
  1757  001228                     u2470:
  1758  001228                     
  1759                           ; BSR set to: 0
  1760                           ;FINAL.c: 353:         }
  1761  001228  4BE0               	infsnz	_i& (0+255),f,b
  1762  00122A  2BE1               	incf	(_i+1)& (0+255),f,b
  1763  00122C                     
  1764                           ; BSR set to: 0
  1765  00122C  BFE1               	btfsc	(_i+1)& (0+255),7,b
  1766  00122E  EF22  F009         	goto	u2481
  1767  001232  51E1               	movf	(_i+1)& (0+255),w,b
  1768  001234  E109               	bnz	u2480
  1769  001236  0E78               	movlw	120
  1770  001238  5DE0               	subwf	_i& (0+255),w,b
  1771  00123A  A0D8               	btfss	status,0,c
  1772  00123C  EF22  F009         	goto	u2481
  1773  001240  EF24  F009         	goto	u2480
  1774  001244                     u2481:
  1775  001244  EF92  F008         	goto	l2937
  1776  001248                     u2480:
  1777  001248                     
  1778                           ; BSR set to: 0
  1779                           ;FINAL.c: 355:         cleanDisp();
  1780  001248  EC9F  F017         	call	_cleanDisp	;wreg free
  1781  00124C                     
  1782                           ;FINAL.c: 357:       sprintf(vector,"Nivel 2");
  1783  00124C  0EB8               	movlw	low main@vector
  1784  00124E  0100               	movlb	0	; () banked
  1785  001250  6F60               	movwf	sprintf@s& (0+255),b
  1786  001252  0E00               	movlw	high main@vector
  1787  001254  6F61               	movwf	(sprintf@s+1)& (0+255),b
  1788  001256  0E9A               	movlw	low STR_5
  1789  001258  6F62               	movwf	sprintf@fmt& (0+255),b
  1790  00125A  0E0F               	movlw	high STR_5
  1791  00125C  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  1792  00125E  EC84  F016         	call	_sprintf	;wreg free
  1793  001262                     
  1794                           ;FINAL.c: 358:       Texto(vector);
  1795  001262  0EB8               	movlw	low main@vector
  1796  001264  6E02               	movwf	Texto@A^0,c
  1797  001266  0E00               	movlw	high main@vector
  1798  001268  6E03               	movwf	(Texto@A+1)^0,c
  1799  00126A  ECC1  F015         	call	_Texto	;wreg free
  1800  00126E                     
  1801                           ;FINAL.c: 360:         }
  1802  00126E  0100               	movlb	0	; () banked
  1803  001270  4BC2               	infsnz	main@speed& (0+255),f,b
  1804  001272  2BC3               	incf	(main@speed+1)& (0+255),f,b
  1805  001274                     
  1806                           ; BSR set to: 0
  1807  001274  BFC3               	btfsc	(main@speed+1)& (0+255),7,b
  1808  001276  EF46  F009         	goto	u2491
  1809  00127A  51C3               	movf	(main@speed+1)& (0+255),w,b
  1810  00127C  E109               	bnz	u2490
  1811  00127E  0E02               	movlw	2
  1812  001280  5DC2               	subwf	main@speed& (0+255),w,b
  1813  001282  A0D8               	btfss	status,0,c
  1814  001284  EF46  F009         	goto	u2491
  1815  001288  EF48  F009         	goto	u2490
  1816  00128C                     u2491:
  1817  00128C  EF8E  F008         	goto	l2931
  1818  001290                     u2490:
  1819  001290                     
  1820                           ; BSR set to: 0
  1821                           ;FINAL.c: 362:          cleanDisp();
  1822  001290  EC9F  F017         	call	_cleanDisp	;wreg free
  1823  001294                     
  1824                           ;FINAL.c: 364:       sprintf(vector,"Nivel 3");
  1825  001294  0EB8               	movlw	low main@vector
  1826  001296  0100               	movlb	0	; () banked
  1827  001298  6F60               	movwf	sprintf@s& (0+255),b
  1828  00129A  0E00               	movlw	high main@vector
  1829  00129C  6F61               	movwf	(sprintf@s+1)& (0+255),b
  1830  00129E  0EA2               	movlw	low STR_6
  1831  0012A0  6F62               	movwf	sprintf@fmt& (0+255),b
  1832  0012A2  0E0F               	movlw	high STR_6
  1833  0012A4  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  1834  0012A6  EC84  F016         	call	_sprintf	;wreg free
  1835  0012AA                     
  1836                           ;FINAL.c: 365:       Texto(vector);
  1837  0012AA  0EB8               	movlw	low main@vector
  1838  0012AC  6E02               	movwf	Texto@A^0,c
  1839  0012AE  0E00               	movlw	high main@vector
  1840  0012B0  6E03               	movwf	(Texto@A+1)^0,c
  1841  0012B2  ECC1  F015         	call	_Texto	;wreg free
  1842  0012B6                     
  1843                           ;FINAL.c: 367:       int map3 [128] = {0b10000001,
  1844  0012B6  EE25  F000         	lfsr	2,main@F7147
  1845  0012BA  EE12  F000         	lfsr	1,main@map3
  1846  0012BE  0EFF               	movlw	255
  1847  0012C0                     u2501:
  1848  0012C0  CFDE FFE6          	movff	postinc2,postinc1
  1849  0012C4  06E8               	decf	wreg,f,c
  1850  0012C6  E2FC               	bc	u2501
  1851  0012C8  0E00               	movlw	256
  1852  0012CA  5ED9               	subwf	fsr2l,f,c
  1853  0012CC  5EE1               	subwf	fsr1l,f,c
  1854  0012CE                     
  1855                           ;FINAL.c: 496:       for (speed = 0; speed <2; speed++){
  1856  0012CE  0E00               	movlw	0
  1857  0012D0  0100               	movlb	0	; () banked
  1858  0012D2  6FC3               	movwf	(main@speed+1)& (0+255),b
  1859  0012D4  0E00               	movlw	0
  1860  0012D6  6FC2               	movwf	main@speed& (0+255),b
  1861  0012D8                     l3003:
  1862                           
  1863                           ; BSR set to: 0
  1864                           ;FINAL.c: 497:         for (i=0; i<128; i++){
  1865  0012D8  0E00               	movlw	0
  1866  0012DA  6FE1               	movwf	(_i+1)& (0+255),b
  1867  0012DC  0E00               	movlw	0
  1868  0012DE  6FE0               	movwf	_i& (0+255),b
  1869  0012E0                     l3009:
  1870                           
  1871                           ; BSR set to: 0
  1872                           ;FINAL.c: 498:             for (k = 0 ; k < (25 - speed*10); k++){
  1873  0012E0  0E00               	movlw	0
  1874  0012E2  6FDD               	movwf	(_k+1)& (0+255),b
  1875  0012E4  0E00               	movlw	0
  1876  0012E6  6FDC               	movwf	_k& (0+255),b
  1877  0012E8  EFD4  F009         	goto	l3045
  1878  0012EC                     l3011:
  1879                           
  1880                           ; BSR set to: 0
  1881                           ;FINAL.c: 499:             for (j=0; j<8; j++){
  1882  0012EC  0E00               	movlw	0
  1883  0012EE  6FDF               	movwf	(_j+1)& (0+255),b
  1884  0012F0  0E00               	movlw	0
  1885  0012F2  6FDE               	movwf	_j& (0+255),b
  1886  0012F4                     l3013:
  1887                           
  1888                           ; BSR set to: 0
  1889  0012F4  BFDF               	btfsc	(_j+1)& (0+255),7,b
  1890  0012F6  EF86  F009         	goto	u2511
  1891  0012FA  51DF               	movf	(_j+1)& (0+255),w,b
  1892  0012FC  E109               	bnz	u2510
  1893  0012FE  0E08               	movlw	8
  1894  001300  5DDE               	subwf	_j& (0+255),w,b
  1895  001302  A0D8               	btfss	status,0,c
  1896  001304  EF86  F009         	goto	u2511
  1897  001308  EF88  F009         	goto	u2510
  1898  00130C                     u2511:
  1899  00130C  EF8A  F009         	goto	l3017
  1900  001310                     u2510:
  1901  001310  EFD2  F009         	goto	l3043
  1902  001314                     l3017:
  1903                           
  1904                           ; BSR set to: 0
  1905                           ;FINAL.c: 501:                 car_pos();
  1906  001314  EC62  F017         	call	_car_pos	;wreg free
  1907  001318                     
  1908                           ;FINAL.c: 502:                 LATC = 0;
  1909  001318  0E00               	movlw	0
  1910  00131A  6E8B               	movwf	139,c	;volatile
  1911  00131C                     
  1912                           ;FINAL.c: 503:                 LATD = posicion;
  1913  00131C  C0E2  FF8C         	movff	_posicion,3980	;volatile
  1914  001320                     
  1915                           ;FINAL.c: 504:                 _delay((unsigned long)((1)*(48000000/4000.0)));
  1916  001320  0E10               	movlw	16
  1917  001322  0100               	movlb	0	; () banked
  1918  001324  6FB6               	movwf	??_main& (0+255),b
  1919  001326  0E94               	movlw	148
  1920  001328                     u2627:
  1921  001328  2EE8               	decfsz	wreg,f,c
  1922  00132A  D7FE               	bra	u2627
  1923  00132C  2FB6               	decfsz	??_main& (0+255),f,b
  1924  00132E  D7FC               	bra	u2627
  1925  001330  F000               	nop	
  1926  001332                     
  1927                           ;FINAL.c: 507:                 LATC = j;
  1928  001332  C0DE  FF8B         	movff	_j,3979	;volatile
  1929  001336                     
  1930                           ;FINAL.c: 508:                 LATD = map3 [j+i];
  1931  001336  0100               	movlb	0	; () banked
  1932  001338  51E0               	movf	_i& (0+255),w,b
  1933  00133A  25DE               	addwf	_j& (0+255),w,b
  1934  00133C  6FB6               	movwf	??_main& (0+255),b
  1935  00133E  51E1               	movf	(_i+1)& (0+255),w,b
  1936  001340  21DF               	addwfc	(_j+1)& (0+255),w,b
  1937  001342  6FB7               	movwf	(??_main+1)& (0+255),b
  1938  001344  90D8               	bcf	status,0,c
  1939  001346  37B6               	rlcf	??_main& (0+255),f,b
  1940  001348  37B7               	rlcf	(??_main+1)& (0+255),f,b
  1941  00134A  0E00               	movlw	low main@map3
  1942  00134C  25B6               	addwf	??_main& (0+255),w,b
  1943  00134E  6ED9               	movwf	fsr2l,c
  1944  001350  0E02               	movlw	high main@map3
  1945  001352  21B7               	addwfc	(??_main+1)& (0+255),w,b
  1946  001354  6EDA               	movwf	fsr2h,c
  1947  001356  50DF               	movf	indf2,w,c
  1948  001358  6E8C               	movwf	140,c	;volatile
  1949  00135A                     
  1950                           ; BSR set to: 0
  1951                           ;FINAL.c: 510:                 _delay((unsigned long)((1)*(48000000/4000.0)));
  1952  00135A  0E10               	movlw	16
  1953  00135C  0100               	movlb	0	; () banked
  1954  00135E  6FB6               	movwf	??_main& (0+255),b
  1955  001360  0E94               	movlw	148
  1956  001362                     u2637:
  1957  001362  2EE8               	decfsz	wreg,f,c
  1958  001364  D7FE               	bra	u2637
  1959  001366  2FB6               	decfsz	??_main& (0+255),f,b
  1960  001368  D7FC               	bra	u2637
  1961  00136A  F000               	nop	
  1962  00136C                     
  1963                           ;FINAL.c: 512:                 if(j==0){
  1964  00136C  0100               	movlb	0	; () banked
  1965  00136E  51DE               	movf	_j& (0+255),w,b
  1966  001370  11DF               	iorwf	(_j+1)& (0+255),w,b
  1967  001372  A4D8               	btfss	status,2,c
  1968  001374  EFBE  F009         	goto	u2521
  1969  001378  EFC0  F009         	goto	u2520
  1970  00137C                     u2521:
  1971  00137C  EFCE  F009         	goto	l3039
  1972  001380                     u2520:
  1973  001380                     
  1974                           ; BSR set to: 0
  1975                           ;FINAL.c: 513:                     colision();
  1976  001380  ECFC  F010         	call	_colision	;wreg free
  1977  001384                     
  1978                           ;FINAL.c: 514:                     if(exit_colision == 1){
  1979  001384  0100               	movlb	0	; () banked
  1980  001386  05D4               	decf	_exit_colision& (0+255),w,b
  1981  001388  11D5               	iorwf	(_exit_colision+1)& (0+255),w,b
  1982  00138A  A4D8               	btfss	status,2,c
  1983  00138C  EFCA  F009         	goto	u2531
  1984  001390  EFCC  F009         	goto	u2530
  1985  001394                     u2531:
  1986  001394  EFCE  F009         	goto	l3039
  1987  001398                     u2530:
  1988  001398  EF25  F00A         	goto	l153
  1989  00139C                     l3039:
  1990                           
  1991                           ; BSR set to: 0
  1992                           ;FINAL.c: 520:             }
  1993  00139C  4BDE               	infsnz	_j& (0+255),f,b
  1994  00139E  2BDF               	incf	(_j+1)& (0+255),f,b
  1995  0013A0  EF7A  F009         	goto	l3013
  1996  0013A4                     l3043:
  1997                           
  1998                           ; BSR set to: 0
  1999                           ;FINAL.c: 522:         }
  2000  0013A4  4BDC               	infsnz	_k& (0+255),f,b
  2001  0013A6  2BDD               	incf	(_k+1)& (0+255),f,b
  2002  0013A8                     l3045:
  2003                           
  2004                           ; BSR set to: 0
  2005  0013A8  C0C2  F001         	movff	main@speed,___wmul@multiplier
  2006  0013AC  C0C3  F002         	movff	main@speed+1,___wmul@multiplier+1
  2007  0013B0  0EFF               	movlw	255
  2008  0013B2  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2009  0013B4  0EF6               	movlw	246
  2010  0013B6  6E03               	movwf	___wmul@multiplicand^0,c
  2011  0013B8  EC7A  F017         	call	___wmul	;wreg free
  2012  0013BC  0E19               	movlw	25
  2013  0013BE  2601               	addwf	?___wmul^0,f,c
  2014  0013C0  0E00               	movlw	0
  2015  0013C2  2202               	addwfc	(?___wmul+1)^0,f,c
  2016  0013C4  5001               	movf	?___wmul^0,w,c
  2017  0013C6  0100               	movlb	0	; () banked
  2018  0013C8  5DDC               	subwf	_k& (0+255),w,b
  2019  0013CA  51DD               	movf	(_k+1)& (0+255),w,b
  2020  0013CC  0A80               	xorlw	128
  2021  0013CE  6FB6               	movwf	??_main& (0+255),b
  2022  0013D0  5002               	movf	(?___wmul+1)^0,w,c
  2023  0013D2  0A80               	xorlw	128
  2024  0013D4  59B6               	subwfb	??_main& (0+255),w,b
  2025  0013D6  A0D8               	btfss	status,0,c
  2026  0013D8  EFF0  F009         	goto	u2541
  2027  0013DC  EFF2  F009         	goto	u2540
  2028  0013E0                     u2541:
  2029  0013E0  EF76  F009         	goto	l3011
  2030  0013E4                     u2540:
  2031  0013E4                     
  2032                           ; BSR set to: 0
  2033                           ;FINAL.c: 524:         }
  2034  0013E4  4BE0               	infsnz	_i& (0+255),f,b
  2035  0013E6  2BE1               	incf	(_i+1)& (0+255),f,b
  2036  0013E8                     
  2037                           ; BSR set to: 0
  2038  0013E8  BFE1               	btfsc	(_i+1)& (0+255),7,b
  2039  0013EA  EF00  F00A         	goto	u2551
  2040  0013EE  51E1               	movf	(_i+1)& (0+255),w,b
  2041  0013F0  E109               	bnz	u2550
  2042  0013F2  0E80               	movlw	128
  2043  0013F4  5DE0               	subwf	_i& (0+255),w,b
  2044  0013F6  A0D8               	btfss	status,0,c
  2045  0013F8  EF00  F00A         	goto	u2551
  2046  0013FC  EF02  F00A         	goto	u2550
  2047  001400                     u2551:
  2048  001400  EF70  F009         	goto	l3009
  2049  001404                     u2550:
  2050  001404                     
  2051                           ; BSR set to: 0
  2052                           ;FINAL.c: 526:         sprintf(vector,"Nivel 4");
  2053  001404  0EB8               	movlw	low main@vector
  2054  001406  6F60               	movwf	sprintf@s& (0+255),b
  2055  001408  0E00               	movlw	high main@vector
  2056  00140A  6F61               	movwf	(sprintf@s+1)& (0+255),b
  2057  00140C  0EAA               	movlw	low STR_7
  2058  00140E  6F62               	movwf	sprintf@fmt& (0+255),b
  2059  001410  0E0F               	movlw	high STR_7
  2060  001412  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  2061  001414  EC84  F016         	call	_sprintf	;wreg free
  2062  001418                     
  2063                           ;FINAL.c: 527:       Texto(vector);
  2064  001418  0EB8               	movlw	low main@vector
  2065  00141A  6E02               	movwf	Texto@A^0,c
  2066  00141C  0E00               	movlw	high main@vector
  2067  00141E  6E03               	movwf	(Texto@A+1)^0,c
  2068  001420  ECC1  F015         	call	_Texto	;wreg free
  2069  001424                     
  2070                           ;FINAL.c: 529:         }
  2071  001424  0100               	movlb	0	; () banked
  2072  001426  4BC2               	infsnz	main@speed& (0+255),f,b
  2073  001428  2BC3               	incf	(main@speed+1)& (0+255),f,b
  2074  00142A                     
  2075                           ; BSR set to: 0
  2076  00142A  BFC3               	btfsc	(main@speed+1)& (0+255),7,b
  2077  00142C  EF21  F00A         	goto	u2561
  2078  001430  51C3               	movf	(main@speed+1)& (0+255),w,b
  2079  001432  E109               	bnz	u2560
  2080  001434  0E02               	movlw	2
  2081  001436  5DC2               	subwf	main@speed& (0+255),w,b
  2082  001438  A0D8               	btfss	status,0,c
  2083  00143A  EF21  F00A         	goto	u2561
  2084  00143E  EF23  F00A         	goto	u2560
  2085  001442                     u2561:
  2086  001442  EF6C  F009         	goto	l3003
  2087  001446                     u2560:
  2088  001446  EF8A  F008         	goto	l2925
  2089  00144A                     l153:
  2090                           
  2091                           ; BSR set to: 0
  2092  00144A  EF4C  F000         	goto	start
  2093  00144E                     __end_of_main:
  2094                           	callstack 0
  2095                           
  2096 ;; *************** function _mapeo *****************
  2097 ;; Defined at:
  2098 ;;		line 932 in file "FINAL.c"
  2099 ;; Parameters:    Size  Location     Type
  2100 ;;		None
  2101 ;; Auto vars:     Size  Location     Type
  2102 ;;		None
  2103 ;; Return value:  Size  Location     Type
  2104 ;;                  1    wreg      void 
  2105 ;; Registers used:
  2106 ;;		wreg, status,2
  2107 ;; Tracked objects:
  2108 ;;		On entry : 0/0
  2109 ;;		On exit  : 0/0
  2110 ;;		Unchanged: 0/0
  2111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2113 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2115 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2116 ;;Total ram usage:        0 bytes
  2117 ;; Hardware stack levels used: 1
  2118 ;; Hardware stack levels required when called: 1
  2119 ;; This function calls:
  2120 ;;		Nothing
  2121 ;; This function is called by:
  2122 ;;		_main
  2123 ;; This function uses a non-reentrant model
  2124 ;;
  2125                           
  2126                           	psect	text1
  2127  002F1A                     __ptext1:
  2128                           	callstack 0
  2129  002F1A                     _mapeo:
  2130                           	callstack 29
  2131  002F1A                     
  2132                           ;FINAL.c: 934:      INTCONbits.GIE=0;
  2133  002F1A  9EF2               	bcf	242,7,c	;volatile
  2134  002F1C                     
  2135                           ;FINAL.c: 935:      EECON2=0x55;
  2136  002F1C  0E55               	movlw	85
  2137  002F1E  6EA7               	movwf	167,c	;volsfr
  2138                           
  2139                           ;FINAL.c: 936:      EECON2=0xAA;
  2140  002F20  0EAA               	movlw	170
  2141  002F22  6EA7               	movwf	167,c	;volsfr
  2142  002F24                     
  2143                           ;FINAL.c: 937:      PPSCONbits.IOLOCK=0;
  2144  002F24  010E               	movlb	14	; () banked
  2145  002F26  91BF               	bcf	191,0,b	;volatile
  2146                           
  2147                           ;FINAL.c: 939:      RPINR1=0;
  2148  002F28  0E00               	movlw	0
  2149  002F2A  6FE1               	movwf	225,b	;volatile
  2150                           
  2151                           ;FINAL.c: 940:      RPINR2=1;
  2152  002F2C  0E01               	movlw	1
  2153  002F2E  6FE2               	movwf	226,b	;volatile
  2154  002F30                     
  2155                           ; BSR set to: 14
  2156                           ;FINAL.c: 944:      INTCONbits.GIE=0;
  2157  002F30  9EF2               	bcf	242,7,c	;volatile
  2158                           
  2159                           ;FINAL.c: 945:      EECON2 = 0x55;
  2160  002F32  0E55               	movlw	85
  2161  002F34  6EA7               	movwf	167,c	;volsfr
  2162                           
  2163                           ;FINAL.c: 946:      EECON2 = 0xAA;
  2164  002F36  0EAA               	movlw	170
  2165  002F38  6EA7               	movwf	167,c	;volsfr
  2166  002F3A                     
  2167                           ; BSR set to: 14
  2168                           ;FINAL.c: 947:      PPSCONbits.IOLOCK=1;
  2169  002F3A  81BF               	bsf	191,0,b	;volatile
  2170  002F3C                     
  2171                           ; BSR set to: 14
  2172  002F3C  0012               	return		;funcret
  2173  002F3E                     __end_of_mapeo:
  2174                           	callstack 0
  2175                           
  2176 ;; *************** function _mapa *****************
  2177 ;; Defined at:
  2178 ;;		line 775 in file "FINAL.c"
  2179 ;; Parameters:    Size  Location     Type
  2180 ;;		None
  2181 ;; Auto vars:     Size  Location     Type
  2182 ;;		None
  2183 ;; Return value:  Size  Location     Type
  2184 ;;                  2   20[None  ] int 
  2185 ;; Registers used:
  2186 ;;		None
  2187 ;; Tracked objects:
  2188 ;;		On entry : 0/0
  2189 ;;		On exit  : 0/0
  2190 ;;		Unchanged: 0/0
  2191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2195 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2196 ;;Total ram usage:        0 bytes
  2197 ;; Hardware stack levels used: 1
  2198 ;; Hardware stack levels required when called: 1
  2199 ;; This function calls:
  2200 ;;		Nothing
  2201 ;; This function is called by:
  2202 ;;		_main
  2203 ;; This function uses a non-reentrant model
  2204 ;;
  2205                           
  2206                           	psect	text2
  2207  00300A                     __ptext2:
  2208                           	callstack 0
  2209  00300A                     _mapa:
  2210                           	callstack 29
  2211  00300A  0012               	return		;funcret
  2212  00300C                     __end_of_mapa:
  2213                           	callstack 0
  2214                           
  2215 ;; *************** function _inicializacion *****************
  2216 ;; Defined at:
  2217 ;;		line 872 in file "FINAL.c"
  2218 ;; Parameters:    Size  Location     Type
  2219 ;;		None
  2220 ;; Auto vars:     Size  Location     Type
  2221 ;;		None
  2222 ;; Return value:  Size  Location     Type
  2223 ;;                  1    wreg      void 
  2224 ;; Registers used:
  2225 ;;		wreg, status,2, cstack
  2226 ;; Tracked objects:
  2227 ;;		On entry : 0/0
  2228 ;;		On exit  : 0/0
  2229 ;;		Unchanged: 0/0
  2230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2233 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2234 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2235 ;;Total ram usage:        2 bytes
  2236 ;; Hardware stack levels used: 1
  2237 ;; Hardware stack levels required when called: 2
  2238 ;; This function calls:
  2239 ;;		_pulso
  2240 ;; This function is called by:
  2241 ;;		_main
  2242 ;; This function uses a non-reentrant model
  2243 ;;
  2244                           
  2245                           	psect	text3
  2246  002380                     __ptext3:
  2247                           	callstack 0
  2248  002380                     _inicializacion:
  2249                           	callstack 28
  2250  002380                     
  2251                           ;FINAL.c: 875:         _delay((unsigned long)((30)*(48000000/4000.0)));
  2252  002380  0E02               	movlw	2
  2253  002382  6E03               	movwf	(??_inicializacion+1)^0,c
  2254  002384  0ED4               	movlw	212
  2255  002386  6E02               	movwf	??_inicializacion^0,c
  2256  002388  0E85               	movlw	133
  2257  00238A                     u2647:
  2258  00238A  2EE8               	decfsz	wreg,f,c
  2259  00238C  D7FE               	bra	u2647
  2260  00238E  2E02               	decfsz	??_inicializacion^0,f,c
  2261  002390  D7FC               	bra	u2647
  2262  002392  2E03               	decfsz	(??_inicializacion+1)^0,f,c
  2263  002394  D7FA               	bra	u2647
  2264  002396  F000               	nop	
  2265  002398                     
  2266                           ;FINAL.c: 876:         PORTB= 0b00000011;
  2267  002398  0E03               	movlw	3
  2268  00239A  6E81               	movwf	129,c	;volatile
  2269  00239C                     
  2270                           ;FINAL.c: 877:         pulso();
  2271  00239C  ECCF  F017         	call	_pulso	;wreg free
  2272  0023A0                     
  2273                           ;FINAL.c: 878:         _delay((unsigned long)((30)*(48000000/4000.0)));
  2274  0023A0  0E02               	movlw	2
  2275  0023A2  6E03               	movwf	(??_inicializacion+1)^0,c
  2276  0023A4  0ED4               	movlw	212
  2277  0023A6  6E02               	movwf	??_inicializacion^0,c
  2278  0023A8  0E85               	movlw	133
  2279  0023AA                     u2657:
  2280  0023AA  2EE8               	decfsz	wreg,f,c
  2281  0023AC  D7FE               	bra	u2657
  2282  0023AE  2E02               	decfsz	??_inicializacion^0,f,c
  2283  0023B0  D7FC               	bra	u2657
  2284  0023B2  2E03               	decfsz	(??_inicializacion+1)^0,f,c
  2285  0023B4  D7FA               	bra	u2657
  2286  0023B6  F000               	nop	
  2287  0023B8                     
  2288                           ;FINAL.c: 879:         PORTB= 0b00000011;
  2289  0023B8  0E03               	movlw	3
  2290  0023BA  6E81               	movwf	129,c	;volatile
  2291                           
  2292                           ;FINAL.c: 880:         pulso();
  2293  0023BC  ECCF  F017         	call	_pulso	;wreg free
  2294  0023C0                     
  2295                           ;FINAL.c: 881:         _delay((unsigned long)((30)*(48000000/4000.0)));
  2296  0023C0  0E02               	movlw	2
  2297  0023C2  6E03               	movwf	(??_inicializacion+1)^0,c
  2298  0023C4  0ED4               	movlw	212
  2299  0023C6  6E02               	movwf	??_inicializacion^0,c
  2300  0023C8  0E85               	movlw	133
  2301  0023CA                     u2667:
  2302  0023CA  2EE8               	decfsz	wreg,f,c
  2303  0023CC  D7FE               	bra	u2667
  2304  0023CE  2E02               	decfsz	??_inicializacion^0,f,c
  2305  0023D0  D7FC               	bra	u2667
  2306  0023D2  2E03               	decfsz	(??_inicializacion+1)^0,f,c
  2307  0023D4  D7FA               	bra	u2667
  2308  0023D6  F000               	nop	
  2309  0023D8                     
  2310                           ;FINAL.c: 882:         PORTB= 0b00000011;
  2311  0023D8  0E03               	movlw	3
  2312  0023DA  6E81               	movwf	129,c	;volatile
  2313  0023DC                     
  2314                           ;FINAL.c: 883:         pulso();
  2315  0023DC  ECCF  F017         	call	_pulso	;wreg free
  2316  0023E0                     
  2317                           ;FINAL.c: 885:         _delay((unsigned long)((30)*(48000000/4000.0)));
  2318  0023E0  0E02               	movlw	2
  2319  0023E2  6E03               	movwf	(??_inicializacion+1)^0,c
  2320  0023E4  0ED4               	movlw	212
  2321  0023E6  6E02               	movwf	??_inicializacion^0,c
  2322  0023E8  0E85               	movlw	133
  2323  0023EA                     u2677:
  2324  0023EA  2EE8               	decfsz	wreg,f,c
  2325  0023EC  D7FE               	bra	u2677
  2326  0023EE  2E02               	decfsz	??_inicializacion^0,f,c
  2327  0023F0  D7FC               	bra	u2677
  2328  0023F2  2E03               	decfsz	(??_inicializacion+1)^0,f,c
  2329  0023F4  D7FA               	bra	u2677
  2330  0023F6  F000               	nop	
  2331                           
  2332                           ;FINAL.c: 887:         PORTB= 0b00000010;
  2333  0023F8  0E02               	movlw	2
  2334  0023FA  6E81               	movwf	129,c	;volatile
  2335  0023FC                     
  2336                           ;FINAL.c: 888:         pulso();
  2337  0023FC  ECCF  F017         	call	_pulso	;wreg free
  2338  002400                     
  2339                           ;FINAL.c: 890:         _delay((unsigned long)((30)*(48000000/4000.0)));
  2340  002400  0E02               	movlw	2
  2341  002402  6E03               	movwf	(??_inicializacion+1)^0,c
  2342  002404  0ED4               	movlw	212
  2343  002406  6E02               	movwf	??_inicializacion^0,c
  2344  002408  0E85               	movlw	133
  2345  00240A                     u2687:
  2346  00240A  2EE8               	decfsz	wreg,f,c
  2347  00240C  D7FE               	bra	u2687
  2348  00240E  2E02               	decfsz	??_inicializacion^0,f,c
  2349  002410  D7FC               	bra	u2687
  2350  002412  2E03               	decfsz	(??_inicializacion+1)^0,f,c
  2351  002414  D7FA               	bra	u2687
  2352  002416  F000               	nop	
  2353  002418                     
  2354                           ;FINAL.c: 892:         PORTB= 0b00000010;
  2355  002418  0E02               	movlw	2
  2356  00241A  6E81               	movwf	129,c	;volatile
  2357  00241C                     
  2358                           ;FINAL.c: 893:         pulso();
  2359  00241C  ECCF  F017         	call	_pulso	;wreg free
  2360  002420                     
  2361                           ;FINAL.c: 894:         PORTB= 0b00001001;
  2362  002420  0E09               	movlw	9
  2363  002422  6E81               	movwf	129,c	;volatile
  2364  002424                     
  2365                           ;FINAL.c: 895:         pulso();
  2366  002424  ECCF  F017         	call	_pulso	;wreg free
  2367  002428                     
  2368                           ;FINAL.c: 898:         _delay((unsigned long)((30)*(48000000/4000.0)));
  2369  002428  0E02               	movlw	2
  2370  00242A  6E03               	movwf	(??_inicializacion+1)^0,c
  2371  00242C  0ED4               	movlw	212
  2372  00242E  6E02               	movwf	??_inicializacion^0,c
  2373  002430  0E85               	movlw	133
  2374  002432                     u2697:
  2375  002432  2EE8               	decfsz	wreg,f,c
  2376  002434  D7FE               	bra	u2697
  2377  002436  2E02               	decfsz	??_inicializacion^0,f,c
  2378  002438  D7FC               	bra	u2697
  2379  00243A  2E03               	decfsz	(??_inicializacion+1)^0,f,c
  2380  00243C  D7FA               	bra	u2697
  2381  00243E  F000               	nop	
  2382  002440                     
  2383                           ;FINAL.c: 900:         PORTB= 0b00000000;
  2384  002440  0E00               	movlw	0
  2385  002442  6E81               	movwf	129,c	;volatile
  2386                           
  2387                           ;FINAL.c: 901:         pulso();
  2388  002444  ECCF  F017         	call	_pulso	;wreg free
  2389  002448                     
  2390                           ;FINAL.c: 902:         PORTB= 0b00001111;
  2391  002448  0E0F               	movlw	15
  2392  00244A  6E81               	movwf	129,c	;volatile
  2393  00244C                     
  2394                           ;FINAL.c: 903:         pulso();
  2395  00244C  ECCF  F017         	call	_pulso	;wreg free
  2396  002450                     
  2397                           ;FINAL.c: 906:         _delay((unsigned long)((30)*(48000000/4000.0)));
  2398  002450  0E02               	movlw	2
  2399  002452  6E03               	movwf	(??_inicializacion+1)^0,c
  2400  002454  0ED4               	movlw	212
  2401  002456  6E02               	movwf	??_inicializacion^0,c
  2402  002458  0E85               	movlw	133
  2403  00245A                     u2707:
  2404  00245A  2EE8               	decfsz	wreg,f,c
  2405  00245C  D7FE               	bra	u2707
  2406  00245E  2E02               	decfsz	??_inicializacion^0,f,c
  2407  002460  D7FC               	bra	u2707
  2408  002462  2E03               	decfsz	(??_inicializacion+1)^0,f,c
  2409  002464  D7FA               	bra	u2707
  2410  002466  F000               	nop	
  2411  002468                     
  2412                           ;FINAL.c: 908:         PORTB= 0b00000000;
  2413  002468  0E00               	movlw	0
  2414  00246A  6E81               	movwf	129,c	;volatile
  2415  00246C                     
  2416                           ;FINAL.c: 909:         pulso();
  2417  00246C  ECCF  F017         	call	_pulso	;wreg free
  2418  002470                     
  2419                           ;FINAL.c: 910:         PORTB= 0b00000001;
  2420  002470  0E01               	movlw	1
  2421  002472  6E81               	movwf	129,c	;volatile
  2422  002474                     
  2423                           ;FINAL.c: 911:         pulso();
  2424  002474  ECCF  F017         	call	_pulso	;wreg free
  2425  002478                     
  2426                           ;FINAL.c: 914:         _delay((unsigned long)((30)*(48000000/4000.0)));
  2427  002478  0E02               	movlw	2
  2428  00247A  6E03               	movwf	(??_inicializacion+1)^0,c
  2429  00247C  0ED4               	movlw	212
  2430  00247E  6E02               	movwf	??_inicializacion^0,c
  2431  002480  0E85               	movlw	133
  2432  002482                     u2717:
  2433  002482  2EE8               	decfsz	wreg,f,c
  2434  002484  D7FE               	bra	u2717
  2435  002486  2E02               	decfsz	??_inicializacion^0,f,c
  2436  002488  D7FC               	bra	u2717
  2437  00248A  2E03               	decfsz	(??_inicializacion+1)^0,f,c
  2438  00248C  D7FA               	bra	u2717
  2439  00248E  F000               	nop	
  2440                           
  2441                           ;FINAL.c: 916:         PORTB= 0b00000000;
  2442  002490  0E00               	movlw	0
  2443  002492  6E81               	movwf	129,c	;volatile
  2444  002494                     
  2445                           ;FINAL.c: 917:         pulso();
  2446  002494  ECCF  F017         	call	_pulso	;wreg free
  2447  002498                     
  2448                           ;FINAL.c: 918:         PORTB= 0b00000110;
  2449  002498  0E06               	movlw	6
  2450  00249A  6E81               	movwf	129,c	;volatile
  2451                           
  2452                           ;FINAL.c: 919:         pulso();
  2453  00249C  ECCF  F017         	call	_pulso	;wreg free
  2454  0024A0  0012               	return		;funcret
  2455  0024A2                     __end_of_inicializacion:
  2456                           	callstack 0
  2457                           
  2458 ;; *************** function _configSPI *****************
  2459 ;; Defined at:
  2460 ;;		line 970 in file "FINAL.c"
  2461 ;; Parameters:    Size  Location     Type
  2462 ;;		None
  2463 ;; Auto vars:     Size  Location     Type
  2464 ;;		None
  2465 ;; Return value:  Size  Location     Type
  2466 ;;                  1    wreg      void 
  2467 ;; Registers used:
  2468 ;;		wreg, status,2
  2469 ;; Tracked objects:
  2470 ;;		On entry : 0/0
  2471 ;;		On exit  : 0/0
  2472 ;;		Unchanged: 0/0
  2473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2477 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2478 ;;Total ram usage:        0 bytes
  2479 ;; Hardware stack levels used: 1
  2480 ;; Hardware stack levels required when called: 1
  2481 ;; This function calls:
  2482 ;;		Nothing
  2483 ;; This function is called by:
  2484 ;;		_main
  2485 ;; This function uses a non-reentrant model
  2486 ;;
  2487                           
  2488                           	psect	text4
  2489  002FB4                     __ptext4:
  2490                           	callstack 0
  2491  002FB4                     _configSPI:
  2492                           	callstack 29
  2493  002FB4                     
  2494                           ;FINAL.c: 973:      SSP1CON1bits.SSPM=0b0001;
  2495  002FB4  50C6               	movf	198,w,c	;volatile
  2496  002FB6  0BF0               	andlw	-16
  2497  002FB8  0901               	iorlw	1
  2498  002FBA  6EC6               	movwf	198,c	;volatile
  2499  002FBC                     
  2500                           ;FINAL.c: 974:      SSP1CON1bits.CKP = 0;
  2501  002FBC  98C6               	bcf	198,4,c	;volatile
  2502  002FBE                     
  2503                           ;FINAL.c: 975:      SSP1STATbits.CKE = 0;
  2504  002FBE  9CC7               	bcf	199,6,c	;volatile
  2505  002FC0                     
  2506                           ;FINAL.c: 976:      SSP1STATbits.SMP = 0;
  2507  002FC0  9EC7               	bcf	199,7,c	;volatile
  2508  002FC2                     
  2509                           ;FINAL.c: 977:      SSP1CON1bits.SSPEN=1;
  2510  002FC2  8AC6               	bsf	198,5,c	;volatile
  2511  002FC4  0012               	return		;funcret
  2512  002FC6                     __end_of_configSPI:
  2513                           	callstack 0
  2514                           
  2515 ;; *************** function _colision *****************
  2516 ;; Defined at:
  2517 ;;		line 545 in file "FINAL.c"
  2518 ;; Parameters:    Size  Location     Type
  2519 ;;		None
  2520 ;; Auto vars:     Size  Location     Type
  2521 ;;  map2           16   40[BANK0 ] int [8]
  2522 ;;  vector         15   71[BANK0 ] unsigned char [15]
  2523 ;;  vector2        15   56[BANK0 ] unsigned char [15]
  2524 ;; Return value:  Size  Location     Type
  2525 ;;                  1    wreg      unsigned char 
  2526 ;; Registers used:
  2527 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2528 ;; Tracked objects:
  2529 ;;		On entry : 0/0
  2530 ;;		On exit  : 0/0
  2531 ;;		Unchanged: 0/0
  2532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2534 ;;      Locals:         0      46       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2535 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2536 ;;      Totals:         0      48       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2537 ;;Total ram usage:       48 bytes
  2538 ;; Hardware stack levels used: 1
  2539 ;; Hardware stack levels required when called: 10
  2540 ;; This function calls:
  2541 ;;		_Texto
  2542 ;;		___lwdiv
  2543 ;;		___wmul
  2544 ;;		_cleanDisp
  2545 ;;		_direccion1
  2546 ;;		_direccion2
  2547 ;;		_escritura
  2548 ;;		_sprintf
  2549 ;; This function is called by:
  2550 ;;		_main
  2551 ;; This function uses a non-reentrant model
  2552 ;;
  2553                           
  2554                           	psect	text5
  2555  0021F8                     __ptext5:
  2556                           	callstack 0
  2557  0021F8                     _colision:
  2558                           	callstack 20
  2559  0021F8                     
  2560                           ;FINAL.c: 547:     if((posicion & LATD) != 0){
  2561  0021F8  508C               	movf	140,w,c	;volatile
  2562  0021FA  0100               	movlb	0	; () banked
  2563  0021FC  15E2               	andwf	_posicion& (0+255),w,b
  2564  0021FE  0900               	iorlw	0
  2565  002200  B4D8               	btfsc	status,2,c
  2566  002202  EF05  F011         	goto	u2331
  2567  002206  EF07  F011         	goto	u2330
  2568  00220A                     u2331:
  2569  00220A  EFBF  F011         	goto	l185
  2570  00220E                     u2330:
  2571  00220E                     
  2572                           ; BSR set to: 0
  2573                           ;FINAL.c: 549:       T0CONbits.TMR0ON = 0;
  2574  00220E  9ED5               	bcf	213,7,c	;volatile
  2575  002210                     
  2576                           ; BSR set to: 0
  2577                           ;FINAL.c: 550:       enter_colision = 1;
  2578  002210  0E00               	movlw	0
  2579  002212  6FD7               	movwf	(_enter_colision+1)& (0+255),b
  2580  002214  0E01               	movlw	1
  2581  002216  6FD6               	movwf	_enter_colision& (0+255),b
  2582  002218                     
  2583                           ; BSR set to: 0
  2584                           ;FINAL.c: 553:       char vector[15], vector2[15];;FINAL.c: 558:       cleanDisp();
  2585  002218  EC9F  F017         	call	_cleanDisp	;wreg free
  2586  00221C                     
  2587                           ;FINAL.c: 559:       sprintf(vector,"Game over :( ");
  2588  00221C  0EA7               	movlw	low colision@vector
  2589  00221E  0100               	movlb	0	; () banked
  2590  002220  6F60               	movwf	sprintf@s& (0+255),b
  2591  002222  0E00               	movlw	high colision@vector
  2592  002224  6F61               	movwf	(sprintf@s+1)& (0+255),b
  2593  002226  0E4F               	movlw	low STR_8
  2594  002228  6F62               	movwf	sprintf@fmt& (0+255),b
  2595  00222A  0E0F               	movlw	high STR_8
  2596  00222C  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  2597  00222E  EC84  F016         	call	_sprintf	;wreg free
  2598  002232                     
  2599                           ;FINAL.c: 560:       Texto(vector);
  2600  002232  0EA7               	movlw	low colision@vector
  2601  002234  6E02               	movwf	Texto@A^0,c
  2602  002236  0E00               	movlw	high colision@vector
  2603  002238  6E03               	movwf	(Texto@A+1)^0,c
  2604  00223A  ECC1  F015         	call	_Texto	;wreg free
  2605  00223E                     
  2606                           ;FINAL.c: 561:       _delay((unsigned long)((500)*(48000000/4000.0)));
  2607  00223E  0E1F               	movlw	31
  2608  002240  0100               	movlb	0	; () banked
  2609  002242  6F87               	movwf	(??_colision+1)& (0+255),b
  2610  002244  0E71               	movlw	113
  2611  002246  6F86               	movwf	??_colision& (0+255),b
  2612  002248  0E1E               	movlw	30
  2613  00224A                     u2727:
  2614  00224A  2EE8               	decfsz	wreg,f,c
  2615  00224C  D7FE               	bra	u2727
  2616  00224E  2F86               	decfsz	??_colision& (0+255),f,b
  2617  002250  D7FC               	bra	u2727
  2618  002252  2F87               	decfsz	(??_colision+1)& (0+255),f,b
  2619  002254  D7FA               	bra	u2727
  2620  002256  F000               	nop	
  2621  002258                     
  2622                           ;FINAL.c: 563:       escritura();
  2623  002258  EC22  F00C         	call	_escritura	;wreg free
  2624  00225C                     
  2625                           ;FINAL.c: 565:       cleanDisp();
  2626  00225C  EC9F  F017         	call	_cleanDisp	;wreg free
  2627  002260                     
  2628                           ;FINAL.c: 566:       direccion1();
  2629  002260  ECEC  F017         	call	_direccion1	;wreg free
  2630  002264                     
  2631                           ;FINAL.c: 567:       sprintf(vector,"Press to cont.");
  2632  002264  0EA7               	movlw	low colision@vector
  2633  002266  0100               	movlb	0	; () banked
  2634  002268  6F60               	movwf	sprintf@s& (0+255),b
  2635  00226A  0E00               	movlw	high colision@vector
  2636  00226C  6F61               	movwf	(sprintf@s+1)& (0+255),b
  2637  00226E  0E22               	movlw	low STR_9
  2638  002270  6F62               	movwf	sprintf@fmt& (0+255),b
  2639  002272  0E0F               	movlw	high STR_9
  2640  002274  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  2641  002276  EC84  F016         	call	_sprintf	;wreg free
  2642  00227A                     
  2643                           ;FINAL.c: 568:       Texto(vector);
  2644  00227A  0EA7               	movlw	low colision@vector
  2645  00227C  6E02               	movwf	Texto@A^0,c
  2646  00227E  0E00               	movlw	high colision@vector
  2647  002280  6E03               	movwf	(Texto@A+1)^0,c
  2648  002282  ECC1  F015         	call	_Texto	;wreg free
  2649  002286                     
  2650                           ;FINAL.c: 571:       direccion2();
  2651  002286  ECE3  F017         	call	_direccion2	;wreg free
  2652  00228A                     
  2653                           ;FINAL.c: 573:       points = (TMR0/1000)*2 + (140*puntaje);
  2654  00228A  C0D8  F001         	movff	_puntaje,___wmul@multiplier
  2655  00228E  C0D9  F002         	movff	_puntaje+1,___wmul@multiplier+1
  2656  002292  0E00               	movlw	0
  2657  002294  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2658  002296  0E8C               	movlw	140
  2659  002298  6E03               	movwf	___wmul@multiplicand^0,c
  2660  00229A  EC7A  F017         	call	___wmul	;wreg free
  2661  00229E  C001  F086         	movff	?___wmul,??_colision
  2662  0022A2  C002  F087         	movff	?___wmul+1,??_colision+1
  2663  0022A6  CFD6 F001          	movff	4054,___lwdiv@dividend	;volatile
  2664  0022AA  CFD7 F002          	movff	4055,___lwdiv@dividend+1	;volatile
  2665  0022AE  0E03               	movlw	3
  2666  0022B0  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  2667  0022B2  0EE8               	movlw	232
  2668  0022B4  6E03               	movwf	___lwdiv@divisor^0,c
  2669  0022B6  EC19  F016         	call	___lwdiv	;wreg free
  2670  0022BA  90D8               	bcf	status,0,c
  2671  0022BC  3601               	rlcf	?___lwdiv^0,f,c
  2672  0022BE  3602               	rlcf	(?___lwdiv+1)^0,f,c
  2673  0022C0  5001               	movf	?___lwdiv^0,w,c
  2674  0022C2  0100               	movlb	0	; () banked
  2675  0022C4  2586               	addwf	??_colision& (0+255),w,b
  2676  0022C6  6FCC               	movwf	_points& (0+255),b
  2677  0022C8  5002               	movf	(?___lwdiv+1)^0,w,c
  2678  0022CA  2187               	addwfc	(??_colision+1)& (0+255),w,b
  2679  0022CC  6FCD               	movwf	(_points+1)& (0+255),b
  2680  0022CE                     
  2681                           ; BSR set to: 0
  2682                           ;FINAL.c: 575:       sprintf(vector2,"Your Score:%lu" , points);
  2683  0022CE  0E98               	movlw	low colision@vector2
  2684  0022D0  6F60               	movwf	sprintf@s& (0+255),b
  2685  0022D2  0E00               	movlw	high colision@vector2
  2686  0022D4  6F61               	movwf	(sprintf@s+1)& (0+255),b
  2687  0022D6  0E40               	movlw	low STR_10
  2688  0022D8  6F62               	movwf	sprintf@fmt& (0+255),b
  2689  0022DA  0E0F               	movlw	high STR_10
  2690  0022DC  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  2691  0022DE  C0CC  F064         	movff	_points,?_sprintf+4
  2692  0022E2  C0CD  F065         	movff	_points+1,?_sprintf+5
  2693  0022E6  EC84  F016         	call	_sprintf	;wreg free
  2694  0022EA                     
  2695                           ;FINAL.c: 576:       Texto(vector2);
  2696  0022EA  0E98               	movlw	low colision@vector2
  2697  0022EC  6E02               	movwf	Texto@A^0,c
  2698  0022EE  0E00               	movlw	high colision@vector2
  2699  0022F0  6E03               	movwf	(Texto@A+1)^0,c
  2700  0022F2  ECC1  F015         	call	_Texto	;wreg free
  2701  0022F6                     
  2702                           ;FINAL.c: 581:         int map2 [8] = {0b01111100,
  2703  0022F6  EE23  F020         	lfsr	2,colision@F7155
  2704  0022FA  EE10  F088         	lfsr	1,colision@map2
  2705  0022FE  0E0F               	movlw	15
  2706  002300                     u2341:
  2707  002300  CFDB FFE3          	movff	plusw2,plusw1
  2708  002304  06E8               	decf	wreg,f,c
  2709  002306  E2FC               	bc	u2341
  2710                           
  2711                           ;FINAL.c: 592:       while(exit_colision == 0){
  2712  002308  EFB5  F011         	goto	l2837
  2713  00230C                     l2823:
  2714                           
  2715                           ; BSR set to: 0
  2716                           ;FINAL.c: 595:             for (j=0; j<8; j++){
  2717  00230C  0E00               	movlw	0
  2718  00230E  6FDF               	movwf	(_j+1)& (0+255),b
  2719  002310  0E00               	movlw	0
  2720  002312  6FDE               	movwf	_j& (0+255),b
  2721  002314                     l2825:
  2722                           
  2723                           ; BSR set to: 0
  2724  002314  BFDF               	btfsc	(_j+1)& (0+255),7,b
  2725  002316  EF96  F011         	goto	u2351
  2726  00231A  51DF               	movf	(_j+1)& (0+255),w,b
  2727  00231C  E109               	bnz	u2350
  2728  00231E  0E08               	movlw	8
  2729  002320  5DDE               	subwf	_j& (0+255),w,b
  2730  002322  A0D8               	btfss	status,0,c
  2731  002324  EF96  F011         	goto	u2351
  2732  002328  EF98  F011         	goto	u2350
  2733  00232C                     u2351:
  2734  00232C  EF9A  F011         	goto	l182
  2735  002330                     u2350:
  2736  002330  EFB5  F011         	goto	l2837
  2737  002334                     l182:
  2738                           
  2739                           ; BSR set to: 0
  2740                           ;FINAL.c: 597:                 LATC = j;
  2741  002334  C0DE  FF8B         	movff	_j,3979	;volatile
  2742  002338                     
  2743                           ; BSR set to: 0
  2744                           ;FINAL.c: 598:                 LATD = map2 [j];
  2745  002338  90D8               	bcf	status,0,c
  2746  00233A  35DE               	rlcf	_j& (0+255),w,b
  2747  00233C  6ED9               	movwf	fsr2l,c
  2748  00233E  35DF               	rlcf	(_j+1)& (0+255),w,b
  2749  002340  6EDA               	movwf	fsr2h,c
  2750  002342  0E88               	movlw	low colision@map2
  2751  002344  26D9               	addwf	fsr2l,f,c
  2752  002346  0E00               	movlw	high colision@map2
  2753  002348  22DA               	addwfc	fsr2h,f,c
  2754  00234A  50DF               	movf	indf2,w,c
  2755  00234C  6E8C               	movwf	140,c	;volatile
  2756  00234E                     
  2757                           ; BSR set to: 0
  2758                           ;FINAL.c: 599:                 _delay((unsigned long)((2)*(48000000/4000.0)));
  2759  00234E  0E20               	movlw	32
  2760  002350  0100               	movlb	0	; () banked
  2761  002352  6F86               	movwf	??_colision& (0+255),b
  2762  002354  0E29               	movlw	41
  2763  002356                     u2737:
  2764  002356  2EE8               	decfsz	wreg,f,c
  2765  002358  D7FE               	bra	u2737
  2766  00235A  2F86               	decfsz	??_colision& (0+255),f,b
  2767  00235C  D7FC               	bra	u2737
  2768  00235E  D000               	nop2	
  2769  002360                     
  2770                           ;FINAL.c: 601:             }
  2771  002360  0100               	movlb	0	; () banked
  2772  002362  4BDE               	infsnz	_j& (0+255),f,b
  2773  002364  2BDF               	incf	(_j+1)& (0+255),f,b
  2774  002366  EF8A  F011         	goto	l2825
  2775  00236A                     l2837:
  2776                           
  2777                           ;FINAL.c: 592:       while(exit_colision == 0){
  2778  00236A  0100               	movlb	0	; () banked
  2779  00236C  51D4               	movf	_exit_colision& (0+255),w,b
  2780  00236E  11D5               	iorwf	(_exit_colision+1)& (0+255),w,b
  2781  002370  B4D8               	btfsc	status,2,c
  2782  002372  EFBD  F011         	goto	u2361
  2783  002376  EFBF  F011         	goto	u2360
  2784  00237A                     u2361:
  2785  00237A  EF86  F011         	goto	l2823
  2786  00237E                     u2360:
  2787  00237E                     l185:
  2788                           
  2789                           ; BSR set to: 0
  2790  00237E  0012               	return		;funcret
  2791  002380                     __end_of_colision:
  2792                           	callstack 0
  2793                           
  2794 ;; *************** function _escritura *****************
  2795 ;; Defined at:
  2796 ;;		line 610 in file "FINAL.c"
  2797 ;; Parameters:    Size  Location     Type
  2798 ;;		None
  2799 ;; Auto vars:     Size  Location     Type
  2800 ;;  vector         12   19[BANK0 ] unsigned char [12]
  2801 ;;  totalguardad    2   36[BANK0 ] unsigned int 
  2802 ;;  a               1   35[BANK0 ] unsigned char 
  2803 ;;  lsb             1   34[BANK0 ] unsigned char 
  2804 ;;  msb             1   33[BANK0 ] unsigned char 
  2805 ;;  baja            1   32[BANK0 ] unsigned char 
  2806 ;;  alta            1   31[BANK0 ] unsigned char 
  2807 ;; Return value:  Size  Location     Type
  2808 ;;                  1    wreg      void 
  2809 ;; Registers used:
  2810 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2811 ;; Tracked objects:
  2812 ;;		On entry : 0/0
  2813 ;;		On exit  : 0/0
  2814 ;;		Unchanged: 0/0
  2815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2817 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2818 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2819 ;;      Totals:         2      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2820 ;;Total ram usage:       21 bytes
  2821 ;; Hardware stack levels used: 1
  2822 ;; Hardware stack levels required when called: 9
  2823 ;; This function calls:
  2824 ;;		_Texto
  2825 ;;		___lwdiv
  2826 ;;		___wmul
  2827 ;;		_cleanDisp
  2828 ;;		_direccion1
  2829 ;;		_direccion2
  2830 ;;		_sprintf
  2831 ;; This function is called by:
  2832 ;;		_colision
  2833 ;; This function uses a non-reentrant model
  2834 ;;
  2835                           
  2836                           	psect	text6
  2837  001844                     __ptext6:
  2838                           	callstack 0
  2839  001844                     _escritura:
  2840                           	callstack 20
  2841  001844                     
  2842                           ;FINAL.c: 613:     char vector[12];;FINAL.c: 615:     unsigned char alta, baja, msb, lsb
      +                          , a;;FINAL.c: 616:     a = 0;
  2843  001844  0E00               	movlw	0
  2844  001846  0100               	movlb	0	; () banked
  2845  001848  6F83               	movwf	escritura@a& (0+255),b
  2846  00184A                     
  2847                           ; BSR set to: 0
  2848                           ;FINAL.c: 618:     unsigned int totalguardado;;FINAL.c: 620:       cleanDisp();
  2849  00184A  EC9F  F017         	call	_cleanDisp	;wreg free
  2850  00184E                     
  2851                           ;FINAL.c: 621:       direccion1();
  2852  00184E  ECEC  F017         	call	_direccion1	;wreg free
  2853  001852                     
  2854                           ;FINAL.c: 622:       sprintf(vector,"Saving...");
  2855  001852  0E73               	movlw	low escritura@vector
  2856  001854  0100               	movlb	0	; () banked
  2857  001856  6F60               	movwf	sprintf@s& (0+255),b
  2858  001858  0E00               	movlw	high escritura@vector
  2859  00185A  6F61               	movwf	(sprintf@s+1)& (0+255),b
  2860  00185C  0E7E               	movlw	low STR_11
  2861  00185E  6F62               	movwf	sprintf@fmt& (0+255),b
  2862  001860  0E0F               	movlw	high STR_11
  2863  001862  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  2864  001864  EC84  F016         	call	_sprintf	;wreg free
  2865  001868                     
  2866                           ;FINAL.c: 623:       Texto(vector);
  2867  001868  0E73               	movlw	low escritura@vector
  2868  00186A  6E02               	movwf	Texto@A^0,c
  2869  00186C  0E00               	movlw	high escritura@vector
  2870  00186E  6E03               	movwf	(Texto@A+1)^0,c
  2871  001870  ECC1  F015         	call	_Texto	;wreg free
  2872  001874                     
  2873                           ;FINAL.c: 625:       points = (TMR0/1000)*2 + (140*puntaje);
  2874  001874  C0D8  F001         	movff	_puntaje,___wmul@multiplier
  2875  001878  C0D9  F002         	movff	_puntaje+1,___wmul@multiplier+1
  2876  00187C  0E00               	movlw	0
  2877  00187E  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2878  001880  0E8C               	movlw	140
  2879  001882  6E03               	movwf	___wmul@multiplicand^0,c
  2880  001884  EC7A  F017         	call	___wmul	;wreg free
  2881  001888  C001  F05C         	movff	?___wmul,??_escritura
  2882  00188C  C002  F05D         	movff	?___wmul+1,??_escritura+1
  2883  001890  CFD6 F001          	movff	4054,___lwdiv@dividend	;volatile
  2884  001894  CFD7 F002          	movff	4055,___lwdiv@dividend+1	;volatile
  2885  001898  0E03               	movlw	3
  2886  00189A  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  2887  00189C  0EE8               	movlw	232
  2888  00189E  6E03               	movwf	___lwdiv@divisor^0,c
  2889  0018A0  EC19  F016         	call	___lwdiv	;wreg free
  2890  0018A4  90D8               	bcf	status,0,c
  2891  0018A6  3601               	rlcf	?___lwdiv^0,f,c
  2892  0018A8  3602               	rlcf	(?___lwdiv+1)^0,f,c
  2893  0018AA  5001               	movf	?___lwdiv^0,w,c
  2894  0018AC  245C               	addwf	??_escritura^0,w,c
  2895  0018AE  0100               	movlb	0	; () banked
  2896  0018B0  6FCC               	movwf	_points& (0+255),b
  2897  0018B2  5002               	movf	(?___lwdiv+1)^0,w,c
  2898  0018B4  205D               	addwfc	(??_escritura+1)^0,w,c
  2899  0018B6  6FCD               	movwf	(_points+1)& (0+255),b
  2900  0018B8                     
  2901                           ; BSR set to: 0
  2902                           ;FINAL.c: 629:         SSP1CON2bits.SEN=1;
  2903  0018B8  80C5               	bsf	197,0,c	;volatile
  2904  0018BA                     l188:
  2905                           
  2906                           ;FINAL.c: 631:         while(SSP1CON2bits.SEN == 1){
  2907  0018BA  B0C5               	btfsc	197,0,c	;volatile
  2908  0018BC  EF62  F00C         	goto	u1971
  2909  0018C0  EF64  F00C         	goto	u1970
  2910  0018C4                     u1971:
  2911  0018C4  EF5D  F00C         	goto	l188
  2912  0018C8                     u1970:
  2913  0018C8                     
  2914                           ;FINAL.c: 634:         SSP1BUF = 0b10100000;
  2915  0018C8  0EA0               	movlw	160
  2916  0018CA  6EC9               	movwf	201,c	;volatile
  2917  0018CC                     
  2918                           ;FINAL.c: 636:          _delay((unsigned long)((1)*(48000000/4000.0)));
  2919  0018CC  0E10               	movlw	16
  2920  0018CE  6E5C               	movwf	??_escritura^0,c
  2921  0018D0  0E94               	movlw	148
  2922  0018D2                     u2747:
  2923  0018D2  2EE8               	decfsz	wreg,f,c
  2924  0018D4  D7FE               	bra	u2747
  2925  0018D6  2E5C               	decfsz	??_escritura^0,f,c
  2926  0018D8  D7FC               	bra	u2747
  2927  0018DA  D000               	nop2	
  2928  0018DC                     l191:
  2929                           
  2930                           ;FINAL.c: 638:         while (SSP1STATbits.R_NOT_W == 1){
  2931  0018DC  B4C7               	btfsc	199,2,c	;volatile
  2932  0018DE  EF73  F00C         	goto	u1981
  2933  0018E2  EF75  F00C         	goto	u1980
  2934  0018E6                     u1981:
  2935  0018E6  EF6E  F00C         	goto	l191
  2936  0018EA                     u1980:
  2937  0018EA                     
  2938                           ;FINAL.c: 641:         SSP1BUF = 0b00000000;
  2939  0018EA  0E00               	movlw	0
  2940  0018EC  6EC9               	movwf	201,c	;volatile
  2941  0018EE                     l194:
  2942                           
  2943                           ;FINAL.c: 642:         while (SSP1STATbits.R_NOT_W == 1){
  2944  0018EE  B4C7               	btfsc	199,2,c	;volatile
  2945  0018F0  EF7C  F00C         	goto	u1991
  2946  0018F4  EF7E  F00C         	goto	u1990
  2947  0018F8                     u1991:
  2948  0018F8  EF77  F00C         	goto	l194
  2949  0018FC                     u1990:
  2950  0018FC                     
  2951                           ;FINAL.c: 646:         SSP1BUF = 0b00000001;
  2952  0018FC  0E01               	movlw	1
  2953  0018FE  6EC9               	movwf	201,c	;volatile
  2954  001900                     l197:
  2955                           
  2956                           ;FINAL.c: 647:         while (SSP1STATbits.R_NOT_W == 1){
  2957  001900  B4C7               	btfsc	199,2,c	;volatile
  2958  001902  EF85  F00C         	goto	u2001
  2959  001906  EF87  F00C         	goto	u2000
  2960  00190A                     u2001:
  2961  00190A  EF80  F00C         	goto	l197
  2962  00190E                     u2000:
  2963  00190E                     
  2964                           ;FINAL.c: 652:         SSP1CON2bits.RSEN=1;
  2965  00190E  82C5               	bsf	197,1,c	;volatile
  2966  001910                     l200:
  2967                           
  2968                           ;FINAL.c: 654:         while(SSP1CON2bits.RSEN == 1){
  2969  001910  B2C5               	btfsc	197,1,c	;volatile
  2970  001912  EF8D  F00C         	goto	u2011
  2971  001916  EF8F  F00C         	goto	u2010
  2972  00191A                     u2011:
  2973  00191A  EF88  F00C         	goto	l200
  2974  00191E                     u2010:
  2975  00191E                     
  2976                           ;FINAL.c: 657:         SSP1BUF = 0b10100001;
  2977  00191E  0EA1               	movlw	161
  2978  001920  6EC9               	movwf	201,c	;volatile
  2979  001922                     l203:
  2980                           
  2981                           ;FINAL.c: 658:         while (SSP1STATbits.R_NOT_W == 1){
  2982  001922  B4C7               	btfsc	199,2,c	;volatile
  2983  001924  EF96  F00C         	goto	u2021
  2984  001928  EF98  F00C         	goto	u2020
  2985  00192C                     u2021:
  2986  00192C  EF91  F00C         	goto	l203
  2987  001930                     u2020:
  2988  001930                     
  2989                           ;FINAL.c: 662:         SSP1CON2bits.RCEN=1;
  2990  001930  86C5               	bsf	197,3,c	;volatile
  2991  001932                     l206:
  2992                           
  2993                           ;FINAL.c: 665:         while (SSP1CON2bits.RCEN == 1){
  2994  001932  B6C5               	btfsc	197,3,c	;volatile
  2995  001934  EF9E  F00C         	goto	u2031
  2996  001938  EFA0  F00C         	goto	u2030
  2997  00193C                     u2031:
  2998  00193C  EF99  F00C         	goto	l206
  2999  001940                     u2030:
  3000  001940                     
  3001                           ;FINAL.c: 668:         alta = SSP1BUF;
  3002  001940  CFC9 F07F          	movff	4041,escritura@alta	;volatile
  3003                           
  3004                           ;FINAL.c: 670:         SSP1CON2bits.ACKDT = 0;
  3005  001944  9AC5               	bcf	197,5,c	;volatile
  3006                           
  3007                           ;FINAL.c: 671:         SSP1CON2bits.ACKEN = 1;
  3008  001946  88C5               	bsf	197,4,c	;volatile
  3009  001948                     l209:
  3010                           
  3011                           ;FINAL.c: 673:         while(SSP1CON2bits.ACKEN == 1){
  3012  001948  B8C5               	btfsc	197,4,c	;volatile
  3013  00194A  EFA9  F00C         	goto	u2041
  3014  00194E  EFAB  F00C         	goto	u2040
  3015  001952                     u2041:
  3016  001952  EFA4  F00C         	goto	l209
  3017  001956                     u2040:
  3018  001956                     
  3019                           ;FINAL.c: 676:         SSP1CON2bits.RCEN=1;
  3020  001956  86C5               	bsf	197,3,c	;volatile
  3021  001958                     l212:
  3022                           
  3023                           ;FINAL.c: 679:         while (SSP1CON2bits.RCEN == 1){
  3024  001958  B6C5               	btfsc	197,3,c	;volatile
  3025  00195A  EFB1  F00C         	goto	u2051
  3026  00195E  EFB3  F00C         	goto	u2050
  3027  001962                     u2051:
  3028  001962  EFAC  F00C         	goto	l212
  3029  001966                     u2050:
  3030  001966                     
  3031                           ;FINAL.c: 682:         baja = SSP1BUF;
  3032  001966  CFC9 F080          	movff	4041,escritura@baja	;volatile
  3033                           
  3034                           ;FINAL.c: 684:         SSP1CON2bits.ACKDT = 1;
  3035  00196A  8AC5               	bsf	197,5,c	;volatile
  3036                           
  3037                           ;FINAL.c: 685:         SSP1CON2bits.ACKEN = 1;
  3038  00196C  88C5               	bsf	197,4,c	;volatile
  3039  00196E                     l215:
  3040                           
  3041                           ;FINAL.c: 687:         while(SSP1CON2bits.ACKEN == 1){
  3042  00196E  B8C5               	btfsc	197,4,c	;volatile
  3043  001970  EFBC  F00C         	goto	u2061
  3044  001974  EFBE  F00C         	goto	u2060
  3045  001978                     u2061:
  3046  001978  EFB7  F00C         	goto	l215
  3047  00197C                     u2060:
  3048  00197C                     
  3049                           ;FINAL.c: 690:         SSP1CON2bits.PEN = 1 ;
  3050  00197C  84C5               	bsf	197,2,c	;volatile
  3051  00197E                     l218:
  3052                           
  3053                           ;FINAL.c: 691:         while(SSP1CON2bits.PEN == 1){
  3054  00197E  B4C5               	btfsc	197,2,c	;volatile
  3055  001980  EFC4  F00C         	goto	u2071
  3056  001984  EFC6  F00C         	goto	u2070
  3057  001988                     u2071:
  3058  001988  EFBF  F00C         	goto	l218
  3059  00198C                     u2070:
  3060  00198C                     
  3061                           ;FINAL.c: 694:         totalguardado = (alta << 8) + baja ;
  3062  00198C  0100               	movlb	0	; () banked
  3063  00198E  517F               	movf	escritura@alta& (0+255),w,b
  3064  001990  6E5D               	movwf	(??_escritura+1)^0,c
  3065  001992  6A5C               	clrf	??_escritura^0,c
  3066  001994  5180               	movf	escritura@baja& (0+255),w,b
  3067  001996  245C               	addwf	??_escritura^0,w,c
  3068  001998  6F84               	movwf	escritura@totalguardado& (0+255),b
  3069  00199A  0E00               	movlw	0
  3070  00199C  205D               	addwfc	(??_escritura+1)^0,w,c
  3071  00199E  6F85               	movwf	(escritura@totalguardado+1)& (0+255),b
  3072                           
  3073                           ;FINAL.c: 699:         if(points > totalguardado){
  3074  0019A0  51CC               	movf	_points& (0+255),w,b
  3075  0019A2  5D84               	subwf	escritura@totalguardado& (0+255),w,b
  3076  0019A4  51CD               	movf	(_points+1)& (0+255),w,b
  3077  0019A6  5985               	subwfb	(escritura@totalguardado+1)& (0+255),w,b
  3078  0019A8  B0D8               	btfsc	status,0,c
  3079  0019AA  EFD9  F00C         	goto	u2081
  3080  0019AE  EFDB  F00C         	goto	u2080
  3081  0019B2                     u2081:
  3082  0019B2  EF72  F00D         	goto	l2639
  3083  0019B6                     u2080:
  3084  0019B6                     
  3085                           ; BSR set to: 0
  3086                           ;FINAL.c: 701:            msb = (points>>8);
  3087  0019B6  51CD               	movf	(_points+1)& (0+255),w,b
  3088  0019B8  6F81               	movwf	escritura@msb& (0+255),b
  3089  0019BA                     
  3090                           ; BSR set to: 0
  3091                           ;FINAL.c: 702:            lsb = points;
  3092  0019BA  C0CC  F082         	movff	_points,escritura@lsb
  3093  0019BE                     
  3094                           ; BSR set to: 0
  3095                           ;FINAL.c: 704:       SSP1CON2bits.SEN=1;
  3096  0019BE  80C5               	bsf	197,0,c	;volatile
  3097  0019C0                     
  3098                           ; BSR set to: 0
  3099                           ;FINAL.c: 706:       _delay((unsigned long)((1)*(48000000/4000.0)));
  3100  0019C0  0E10               	movlw	16
  3101  0019C2  6E5C               	movwf	??_escritura^0,c
  3102  0019C4  0E94               	movlw	148
  3103  0019C6                     u2757:
  3104  0019C6  2EE8               	decfsz	wreg,f,c
  3105  0019C8  D7FE               	bra	u2757
  3106  0019CA  2E5C               	decfsz	??_escritura^0,f,c
  3107  0019CC  D7FC               	bra	u2757
  3108  0019CE  D000               	nop2	
  3109  0019D0                     l222:
  3110                           
  3111                           ;FINAL.c: 708:         while(SSP1CON2bits.SEN == 1){
  3112  0019D0  B0C5               	btfsc	197,0,c	;volatile
  3113  0019D2  EFED  F00C         	goto	u2091
  3114  0019D6  EFEF  F00C         	goto	u2090
  3115  0019DA                     u2091:
  3116  0019DA  EFE8  F00C         	goto	l222
  3117  0019DE                     u2090:
  3118  0019DE                     
  3119                           ;FINAL.c: 711:         SSP1BUF = 0b10100000;
  3120  0019DE  0EA0               	movlw	160
  3121  0019E0  6EC9               	movwf	201,c	;volatile
  3122  0019E2                     
  3123                           ;FINAL.c: 713:          _delay((unsigned long)((1)*(48000000/4000.0)));
  3124  0019E2  0E10               	movlw	16
  3125  0019E4  6E5C               	movwf	??_escritura^0,c
  3126  0019E6  0E94               	movlw	148
  3127  0019E8                     u2767:
  3128  0019E8  2EE8               	decfsz	wreg,f,c
  3129  0019EA  D7FE               	bra	u2767
  3130  0019EC  2E5C               	decfsz	??_escritura^0,f,c
  3131  0019EE  D7FC               	bra	u2767
  3132  0019F0  D000               	nop2	
  3133  0019F2                     l225:
  3134                           
  3135                           ;FINAL.c: 715:         while (SSP1STATbits.R_NOT_W == 1){
  3136  0019F2  B4C7               	btfsc	199,2,c	;volatile
  3137  0019F4  EFFE  F00C         	goto	u2101
  3138  0019F8  EF00  F00D         	goto	u2100
  3139  0019FC                     u2101:
  3140  0019FC  EFF9  F00C         	goto	l225
  3141  001A00                     u2100:
  3142  001A00                     
  3143                           ;FINAL.c: 718:         SSP1BUF = 0b00000000;
  3144  001A00  0E00               	movlw	0
  3145  001A02  6EC9               	movwf	201,c	;volatile
  3146  001A04                     l228:
  3147                           
  3148                           ;FINAL.c: 719:         while (SSP1STATbits.R_NOT_W == 1){
  3149  001A04  B4C7               	btfsc	199,2,c	;volatile
  3150  001A06  EF07  F00D         	goto	u2111
  3151  001A0A  EF09  F00D         	goto	u2110
  3152  001A0E                     u2111:
  3153  001A0E  EF02  F00D         	goto	l228
  3154  001A12                     u2110:
  3155  001A12                     
  3156                           ;FINAL.c: 723:         SSP1BUF = 0b00000001;
  3157  001A12  0E01               	movlw	1
  3158  001A14  6EC9               	movwf	201,c	;volatile
  3159  001A16                     l231:
  3160                           
  3161                           ;FINAL.c: 724:         while (SSP1STATbits.R_NOT_W == 1){
  3162  001A16  B4C7               	btfsc	199,2,c	;volatile
  3163  001A18  EF10  F00D         	goto	u2121
  3164  001A1C  EF12  F00D         	goto	u2120
  3165  001A20                     u2121:
  3166  001A20  EF0B  F00D         	goto	l231
  3167  001A24                     u2120:
  3168  001A24                     
  3169                           ;FINAL.c: 728:         SSP1BUF = msb;
  3170  001A24  C081  FFC9         	movff	escritura@msb,4041	;volatile
  3171  001A28                     l234:
  3172                           
  3173                           ;FINAL.c: 729:         while (SSP1STATbits.R_NOT_W == 1){
  3174  001A28  B4C7               	btfsc	199,2,c	;volatile
  3175  001A2A  EF19  F00D         	goto	u2131
  3176  001A2E  EF1B  F00D         	goto	u2130
  3177  001A32                     u2131:
  3178  001A32  EF14  F00D         	goto	l234
  3179  001A36                     u2130:
  3180  001A36                     
  3181                           ;FINAL.c: 733:         SSP1BUF = lsb;
  3182  001A36  C082  FFC9         	movff	escritura@lsb,4041	;volatile
  3183  001A3A                     l237:
  3184                           
  3185                           ;FINAL.c: 734:         while (SSP1STATbits.R_NOT_W == 1){
  3186  001A3A  B4C7               	btfsc	199,2,c	;volatile
  3187  001A3C  EF22  F00D         	goto	u2141
  3188  001A40  EF24  F00D         	goto	u2140
  3189  001A44                     u2141:
  3190  001A44  EF1D  F00D         	goto	l237
  3191  001A48                     u2140:
  3192  001A48                     
  3193                           ;FINAL.c: 738:         SSP1CON2bits.PEN = 1 ;
  3194  001A48  84C5               	bsf	197,2,c	;volatile
  3195  001A4A                     l240:
  3196                           
  3197                           ;FINAL.c: 739:         while(SSP1CON2bits.PEN == 1){
  3198  001A4A  B4C5               	btfsc	197,2,c	;volatile
  3199  001A4C  EF2A  F00D         	goto	u2151
  3200  001A50  EF2C  F00D         	goto	u2150
  3201  001A54                     u2151:
  3202  001A54  EF25  F00D         	goto	l240
  3203  001A58                     u2150:
  3204  001A58                     
  3205                           ;FINAL.c: 742:         _delay((unsigned long)((100)*(48000000/4000.0)));
  3206  001A58  0E07               	movlw	7
  3207  001A5A  6E5D               	movwf	(??_escritura+1)^0,c
  3208  001A5C  0E17               	movlw	23
  3209  001A5E  6E5C               	movwf	??_escritura^0,c
  3210  001A60  0E6A               	movlw	106
  3211  001A62                     u2777:
  3212  001A62  2EE8               	decfsz	wreg,f,c
  3213  001A64  D7FE               	bra	u2777
  3214  001A66  2E5C               	decfsz	??_escritura^0,f,c
  3215  001A68  D7FC               	bra	u2777
  3216  001A6A  2E5D               	decfsz	(??_escritura+1)^0,f,c
  3217  001A6C  D7FA               	bra	u2777
  3218  001A6E  D000               	nop2	
  3219  001A70                     
  3220                           ;FINAL.c: 744:       cleanDisp();
  3221  001A70  EC9F  F017         	call	_cleanDisp	;wreg free
  3222  001A74                     
  3223                           ;FINAL.c: 745:       direccion1();
  3224  001A74  ECEC  F017         	call	_direccion1	;wreg free
  3225  001A78                     
  3226                           ;FINAL.c: 746:       sprintf(vector,"New high score!");
  3227  001A78  0E73               	movlw	low escritura@vector
  3228  001A7A  0100               	movlb	0	; () banked
  3229  001A7C  6F60               	movwf	sprintf@s& (0+255),b
  3230  001A7E  0E00               	movlw	high escritura@vector
  3231  001A80  6F61               	movwf	(sprintf@s+1)& (0+255),b
  3232  001A82  0E12               	movlw	low STR_12
  3233  001A84  6F62               	movwf	sprintf@fmt& (0+255),b
  3234  001A86  0E0F               	movlw	high STR_12
  3235  001A88  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  3236  001A8A  EC84  F016         	call	_sprintf	;wreg free
  3237  001A8E                     
  3238                           ;FINAL.c: 747:       Texto(vector);
  3239  001A8E  0E73               	movlw	low escritura@vector
  3240  001A90  6E02               	movwf	Texto@A^0,c
  3241  001A92  0E00               	movlw	high escritura@vector
  3242  001A94  6E03               	movwf	(Texto@A+1)^0,c
  3243  001A96  ECC1  F015         	call	_Texto	;wreg free
  3244  001A9A                     
  3245                           ;FINAL.c: 749:       direccion2();
  3246  001A9A  ECE3  F017         	call	_direccion2	;wreg free
  3247  001A9E                     
  3248                           ;FINAL.c: 750:       sprintf(vector,"Score: %lu" , points);
  3249  001A9E  0E73               	movlw	low escritura@vector
  3250  001AA0  0100               	movlb	0	; () banked
  3251  001AA2  6F60               	movwf	sprintf@s& (0+255),b
  3252  001AA4  0E00               	movlw	high escritura@vector
  3253  001AA6  6F61               	movwf	(sprintf@s+1)& (0+255),b
  3254  001AA8  0E73               	movlw	low STR_13
  3255  001AAA  6F62               	movwf	sprintf@fmt& (0+255),b
  3256  001AAC  0E0F               	movlw	high STR_13
  3257  001AAE  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  3258  001AB0  C0CC  F064         	movff	_points,?_sprintf+4
  3259  001AB4  C0CD  F065         	movff	_points+1,?_sprintf+5
  3260  001AB8  EC84  F016         	call	_sprintf	;wreg free
  3261  001ABC                     
  3262                           ;FINAL.c: 751:       Texto(vector);
  3263  001ABC  0E73               	movlw	low escritura@vector
  3264  001ABE  6E02               	movwf	Texto@A^0,c
  3265  001AC0  0E00               	movlw	high escritura@vector
  3266  001AC2  6E03               	movwf	(Texto@A+1)^0,c
  3267  001AC4  ECC1  F015         	call	_Texto	;wreg free
  3268  001AC8                     
  3269                           ;FINAL.c: 753:       _delay((unsigned long)((1000)*(48000000/4000.0)));
  3270  001AC8  0E3D               	movlw	61
  3271  001ACA  6E5D               	movwf	(??_escritura+1)^0,c
  3272  001ACC  0EE1               	movlw	225
  3273  001ACE  6E5C               	movwf	??_escritura^0,c
  3274  001AD0  0E40               	movlw	64
  3275  001AD2                     u2787:
  3276  001AD2  2EE8               	decfsz	wreg,f,c
  3277  001AD4  D7FE               	bra	u2787
  3278  001AD6  2E5C               	decfsz	??_escritura^0,f,c
  3279  001AD8  D7FC               	bra	u2787
  3280  001ADA  2E5D               	decfsz	(??_escritura+1)^0,f,c
  3281  001ADC  D7FA               	bra	u2787
  3282  001ADE                     
  3283                           ;FINAL.c: 755:       a = 1;
  3284  001ADE  0E01               	movlw	1
  3285  001AE0  0100               	movlb	0	; () banked
  3286  001AE2  6F83               	movwf	escritura@a& (0+255),b
  3287  001AE4                     l2639:
  3288                           
  3289                           ; BSR set to: 0
  3290                           ;FINAL.c: 759:       if (a == 1){
  3291  001AE4  0583               	decf	escritura@a& (0+255),w,b
  3292  001AE6  A4D8               	btfss	status,2,c
  3293  001AE8  EF78  F00D         	goto	u2161
  3294  001AEC  EF7A  F00D         	goto	u2160
  3295  001AF0                     u2161:
  3296  001AF0  EFB1  F00D         	goto	l244
  3297  001AF4                     u2160:
  3298  001AF4                     
  3299                           ; BSR set to: 0
  3300                           ;FINAL.c: 760:       cleanDisp();
  3301  001AF4  EC9F  F017         	call	_cleanDisp	;wreg free
  3302                           
  3303                           ;FINAL.c: 761:       direccion1();
  3304  001AF8  ECEC  F017         	call	_direccion1	;wreg free
  3305  001AFC                     
  3306                           ;FINAL.c: 762:       sprintf(vector,"Highest score:");
  3307  001AFC  0E73               	movlw	low escritura@vector
  3308  001AFE  0100               	movlb	0	; () banked
  3309  001B00  6F60               	movwf	sprintf@s& (0+255),b
  3310  001B02  0E00               	movlw	high escritura@vector
  3311  001B04  6F61               	movwf	(sprintf@s+1)& (0+255),b
  3312  001B06  0E31               	movlw	low STR_14
  3313  001B08  6F62               	movwf	sprintf@fmt& (0+255),b
  3314  001B0A  0E0F               	movlw	high STR_14
  3315  001B0C  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  3316  001B0E  EC84  F016         	call	_sprintf	;wreg free
  3317  001B12                     
  3318                           ;FINAL.c: 763:       Texto(vector);
  3319  001B12  0E73               	movlw	low escritura@vector
  3320  001B14  6E02               	movwf	Texto@A^0,c
  3321  001B16  0E00               	movlw	high escritura@vector
  3322  001B18  6E03               	movwf	(Texto@A+1)^0,c
  3323  001B1A  ECC1  F015         	call	_Texto	;wreg free
  3324  001B1E                     
  3325                           ;FINAL.c: 765:       direccion2();
  3326  001B1E  ECE3  F017         	call	_direccion2	;wreg free
  3327  001B22                     
  3328                           ;FINAL.c: 766:       sprintf(vector,"%lu points", totalguardado);
  3329  001B22  0E73               	movlw	low escritura@vector
  3330  001B24  0100               	movlb	0	; () banked
  3331  001B26  6F60               	movwf	sprintf@s& (0+255),b
  3332  001B28  0E00               	movlw	high escritura@vector
  3333  001B2A  6F61               	movwf	(sprintf@s+1)& (0+255),b
  3334  001B2C  0E68               	movlw	low STR_15
  3335  001B2E  6F62               	movwf	sprintf@fmt& (0+255),b
  3336  001B30  0E0F               	movlw	high STR_15
  3337  001B32  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  3338  001B34  C084  F064         	movff	escritura@totalguardado,?_sprintf+4
  3339  001B38  C085  F065         	movff	escritura@totalguardado+1,?_sprintf+5
  3340  001B3C  EC84  F016         	call	_sprintf	;wreg free
  3341                           
  3342                           ;FINAL.c: 767:       Texto(vector);
  3343  001B40  0E73               	movlw	low escritura@vector
  3344  001B42  6E02               	movwf	Texto@A^0,c
  3345  001B44  0E00               	movlw	high escritura@vector
  3346  001B46  6E03               	movwf	(Texto@A+1)^0,c
  3347  001B48  ECC1  F015         	call	_Texto	;wreg free
  3348  001B4C                     
  3349                           ;FINAL.c: 769:       _delay((unsigned long)((1000)*(48000000/4000.0)));
  3350  001B4C  0E3D               	movlw	61
  3351  001B4E  6E5D               	movwf	(??_escritura+1)^0,c
  3352  001B50  0EE1               	movlw	225
  3353  001B52  6E5C               	movwf	??_escritura^0,c
  3354  001B54  0E40               	movlw	64
  3355  001B56                     u2797:
  3356  001B56  2EE8               	decfsz	wreg,f,c
  3357  001B58  D7FE               	bra	u2797
  3358  001B5A  2E5C               	decfsz	??_escritura^0,f,c
  3359  001B5C  D7FC               	bra	u2797
  3360  001B5E  2E5D               	decfsz	(??_escritura+1)^0,f,c
  3361  001B60  D7FA               	bra	u2797
  3362  001B62                     l244:
  3363  001B62  0012               	return		;funcret
  3364  001B64                     __end_of_escritura:
  3365                           	callstack 0
  3366                           
  3367 ;; *************** function ___wmul *****************
  3368 ;; Defined at:
  3369 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul16.c"
  3370 ;; Parameters:    Size  Location     Type
  3371 ;;  multiplier      2    0[COMRAM] unsigned int 
  3372 ;;  multiplicand    2    2[COMRAM] unsigned int 
  3373 ;; Auto vars:     Size  Location     Type
  3374 ;;  product         2    4[COMRAM] unsigned int 
  3375 ;; Return value:  Size  Location     Type
  3376 ;;                  2    0[COMRAM] unsigned int 
  3377 ;; Registers used:
  3378 ;;		wreg, status,2, status,0, prodl, prodh
  3379 ;; Tracked objects:
  3380 ;;		On entry : 0/0
  3381 ;;		On exit  : 0/0
  3382 ;;		Unchanged: 0/0
  3383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3384 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3385 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3387 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3388 ;;Total ram usage:        6 bytes
  3389 ;; Hardware stack levels used: 1
  3390 ;; Hardware stack levels required when called: 1
  3391 ;; This function calls:
  3392 ;;		Nothing
  3393 ;; This function is called by:
  3394 ;;		_main
  3395 ;;		_colision
  3396 ;;		_escritura
  3397 ;; This function uses a non-reentrant model
  3398 ;;
  3399                           
  3400                           	psect	text7
  3401  002EF4                     __ptext7:
  3402                           	callstack 0
  3403  002EF4                     ___wmul:
  3404                           	callstack 27
  3405  002EF4  5001               	movf	___wmul@multiplier^0,w,c
  3406  002EF6  0203               	mulwf	___wmul@multiplicand^0,c
  3407  002EF8  CFF3 F005          	movff	prodl,___wmul@product
  3408  002EFC  CFF4 F006          	movff	prodh,___wmul@product+1
  3409  002F00  5001               	movf	___wmul@multiplier^0,w,c
  3410  002F02  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  3411  002F04  50F3               	movf	243,w,c
  3412  002F06  2606               	addwf	(___wmul@product+1)^0,f,c
  3413  002F08  5002               	movf	(___wmul@multiplier+1)^0,w,c
  3414  002F0A  0203               	mulwf	___wmul@multiplicand^0,c
  3415  002F0C  50F3               	movf	243,w,c
  3416  002F0E  2606               	addwf	(___wmul@product+1)^0,f,c
  3417  002F10  C005  F001         	movff	___wmul@product,?___wmul
  3418  002F14  C006  F002         	movff	___wmul@product+1,?___wmul+1
  3419  002F18  0012               	return		;funcret
  3420  002F1A                     __end_of___wmul:
  3421                           	callstack 0
  3422                           
  3423 ;; *************** function ___lwdiv *****************
  3424 ;; Defined at:
  3425 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\lwdiv.c"
  3426 ;; Parameters:    Size  Location     Type
  3427 ;;  dividend        2    0[COMRAM] unsigned int 
  3428 ;;  divisor         2    2[COMRAM] unsigned int 
  3429 ;; Auto vars:     Size  Location     Type
  3430 ;;  quotient        2    4[COMRAM] unsigned int 
  3431 ;;  counter         1    6[COMRAM] unsigned char 
  3432 ;; Return value:  Size  Location     Type
  3433 ;;                  2    0[COMRAM] unsigned int 
  3434 ;; Registers used:
  3435 ;;		wreg, status,2, status,0
  3436 ;; Tracked objects:
  3437 ;;		On entry : 0/0
  3438 ;;		On exit  : 0/0
  3439 ;;		Unchanged: 0/0
  3440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3441 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3442 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3444 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3445 ;;Total ram usage:        7 bytes
  3446 ;; Hardware stack levels used: 1
  3447 ;; Hardware stack levels required when called: 1
  3448 ;; This function calls:
  3449 ;;		Nothing
  3450 ;; This function is called by:
  3451 ;;		_colision
  3452 ;;		_escritura
  3453 ;; This function uses a non-reentrant model
  3454 ;;
  3455                           
  3456                           	psect	text8
  3457  002C32                     __ptext8:
  3458                           	callstack 0
  3459  002C32                     ___lwdiv:
  3460                           	callstack 27
  3461  002C32  0E00               	movlw	0
  3462  002C34  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  3463  002C36  0E00               	movlw	0
  3464  002C38  6E05               	movwf	___lwdiv@quotient^0,c
  3465  002C3A  5003               	movf	___lwdiv@divisor^0,w,c
  3466  002C3C  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  3467  002C3E  B4D8               	btfsc	status,2,c
  3468  002C40  EF24  F016         	goto	u1941
  3469  002C44  EF26  F016         	goto	u1940
  3470  002C48                     u1941:
  3471  002C48  EF4E  F016         	goto	l845
  3472  002C4C                     u1940:
  3473  002C4C  0E01               	movlw	1
  3474  002C4E  6E07               	movwf	___lwdiv@counter^0,c
  3475  002C50  EF2E  F016         	goto	l2563
  3476  002C54                     l2561:
  3477  002C54  90D8               	bcf	status,0,c
  3478  002C56  3603               	rlcf	___lwdiv@divisor^0,f,c
  3479  002C58  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  3480  002C5A  2A07               	incf	___lwdiv@counter^0,f,c
  3481  002C5C                     l2563:
  3482  002C5C  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  3483  002C5E  EF33  F016         	goto	u1951
  3484  002C62  EF35  F016         	goto	u1950
  3485  002C66                     u1951:
  3486  002C66  EF2A  F016         	goto	l2561
  3487  002C6A                     u1950:
  3488  002C6A                     l2565:
  3489  002C6A  90D8               	bcf	status,0,c
  3490  002C6C  3605               	rlcf	___lwdiv@quotient^0,f,c
  3491  002C6E  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  3492  002C70  5003               	movf	___lwdiv@divisor^0,w,c
  3493  002C72  5C01               	subwf	___lwdiv@dividend^0,w,c
  3494  002C74  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  3495  002C76  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  3496  002C78  A0D8               	btfss	status,0,c
  3497  002C7A  EF41  F016         	goto	u1961
  3498  002C7E  EF43  F016         	goto	u1960
  3499  002C82                     u1961:
  3500  002C82  EF48  F016         	goto	l2573
  3501  002C86                     u1960:
  3502  002C86  5003               	movf	___lwdiv@divisor^0,w,c
  3503  002C88  5E01               	subwf	___lwdiv@dividend^0,f,c
  3504  002C8A  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  3505  002C8C  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  3506  002C8E  8005               	bsf	___lwdiv@quotient^0,0,c
  3507  002C90                     l2573:
  3508  002C90  90D8               	bcf	status,0,c
  3509  002C92  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  3510  002C94  3203               	rrcf	___lwdiv@divisor^0,f,c
  3511  002C96  2E07               	decfsz	___lwdiv@counter^0,f,c
  3512  002C98  EF35  F016         	goto	l2565
  3513  002C9C                     l845:
  3514  002C9C  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  3515  002CA0  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3516  002CA4  0012               	return		;funcret
  3517  002CA6                     __end_of___lwdiv:
  3518                           	callstack 0
  3519                           
  3520 ;; *************** function _clean_memory *****************
  3521 ;; Defined at:
  3522 ;;		line 1037 in file "FINAL.c"
  3523 ;; Parameters:    Size  Location     Type
  3524 ;;		None
  3525 ;; Auto vars:     Size  Location     Type
  3526 ;;  vector         16   19[BANK0 ] unsigned char [16]
  3527 ;;  a               1   37[BANK0 ] unsigned char 
  3528 ;;  dato2           1   36[BANK0 ] unsigned char 
  3529 ;;  dato1           1   35[BANK0 ] unsigned char 
  3530 ;; Return value:  Size  Location     Type
  3531 ;;                  1    wreg      void 
  3532 ;; Registers used:
  3533 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3534 ;; Tracked objects:
  3535 ;;		On entry : 0/0
  3536 ;;		On exit  : 0/0
  3537 ;;		Unchanged: 0/0
  3538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3540 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3541 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3542 ;;      Totals:         2      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3543 ;;Total ram usage:       21 bytes
  3544 ;; Hardware stack levels used: 1
  3545 ;; Hardware stack levels required when called: 9
  3546 ;; This function calls:
  3547 ;;		_Texto
  3548 ;;		_cleanDisp
  3549 ;;		_direccion1
  3550 ;;		_direccion2
  3551 ;;		_sprintf
  3552 ;; This function is called by:
  3553 ;;		_main
  3554 ;; This function uses a non-reentrant model
  3555 ;;
  3556                           
  3557                           	psect	text9
  3558  00200E                     __ptext9:
  3559                           	callstack 0
  3560  00200E                     _clean_memory:
  3561                           	callstack 21
  3562  00200E                     
  3563                           ;FINAL.c: 1039:       char vector[16],a, dato1, dato2;;FINAL.c: 1042:       sprintf(vect
      +                          or,"borrando memoria");
  3564  00200E  0E73               	movlw	low clean_memory@vector
  3565  002010  0100               	movlb	0	; () banked
  3566  002012  6F60               	movwf	sprintf@s& (0+255),b
  3567  002014  0E00               	movlw	high clean_memory@vector
  3568  002016  6F61               	movwf	(sprintf@s+1)& (0+255),b
  3569  002018  0E01               	movlw	low STR_16
  3570  00201A  6F62               	movwf	sprintf@fmt& (0+255),b
  3571  00201C  0E0F               	movlw	high STR_16
  3572  00201E  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  3573  002020  EC84  F016         	call	_sprintf	;wreg free
  3574  002024                     
  3575                           ;FINAL.c: 1043:       Texto(vector);
  3576  002024  0E73               	movlw	low clean_memory@vector
  3577  002026  6E02               	movwf	Texto@A^0,c
  3578  002028  0E00               	movlw	high clean_memory@vector
  3579  00202A  6E03               	movwf	(Texto@A+1)^0,c
  3580  00202C  ECC1  F015         	call	_Texto	;wreg free
  3581  002030                     
  3582                           ;FINAL.c: 1045:       LATCbits.LC6 = 0;
  3583  002030  9C8B               	bcf	139,6,c	;volatile
  3584  002032                     
  3585                           ;FINAL.c: 1047:         SSP1BUF = 0b00000110;
  3586  002032  0E06               	movlw	6
  3587  002034  6EC9               	movwf	201,c	;volatile
  3588  002036                     l304:
  3589  002036  A69E               	btfss	158,3,c	;volatile
  3590  002038  EF20  F010         	goto	u2171
  3591  00203C  EF22  F010         	goto	u2170
  3592  002040                     u2171:
  3593  002040  EF1B  F010         	goto	l304
  3594  002044                     u2170:
  3595  002044                     
  3596                           ;FINAL.c: 1050:         PIR1bits.SSP1IF = 0;
  3597  002044  969E               	bcf	158,3,c	;volatile
  3598                           
  3599                           ;FINAL.c: 1054:         LATCbits.LC6 = 1;
  3600  002046  8C8B               	bsf	139,6,c	;volatile
  3601  002048                     
  3602                           ;FINAL.c: 1056:         _delay((unsigned long)((1000)*(48000000/4000.0)));
  3603  002048  0E3D               	movlw	61
  3604  00204A  6E5D               	movwf	(??_clean_memory+1)^0,c
  3605  00204C  0EE1               	movlw	225
  3606  00204E  6E5C               	movwf	??_clean_memory^0,c
  3607  002050  0E40               	movlw	64
  3608  002052                     u2807:
  3609  002052  2EE8               	decfsz	wreg,f,c
  3610  002054  D7FE               	bra	u2807
  3611  002056  2E5C               	decfsz	??_clean_memory^0,f,c
  3612  002058  D7FC               	bra	u2807
  3613  00205A  2E5D               	decfsz	(??_clean_memory+1)^0,f,c
  3614  00205C  D7FA               	bra	u2807
  3615  00205E                     
  3616                           ;FINAL.c: 1068:         LATCbits.LC6 = 0;
  3617  00205E  9C8B               	bcf	139,6,c	;volatile
  3618  002060                     
  3619                           ;FINAL.c: 1071:         SSP1BUF = 0b00000010;
  3620  002060  0E02               	movlw	2
  3621  002062  6EC9               	movwf	201,c	;volatile
  3622  002064                     l307:
  3623  002064  A69E               	btfss	158,3,c	;volatile
  3624  002066  EF37  F010         	goto	u2181
  3625  00206A  EF39  F010         	goto	u2180
  3626  00206E                     u2181:
  3627  00206E  EF32  F010         	goto	l307
  3628  002072                     u2180:
  3629  002072                     
  3630                           ;FINAL.c: 1074:         PIR1bits.SSP1IF = 0;
  3631  002072  969E               	bcf	158,3,c	;volatile
  3632  002074                     
  3633                           ;FINAL.c: 1077:         SSP1BUF = 0b00000000;
  3634  002074  0E00               	movlw	0
  3635  002076  6EC9               	movwf	201,c	;volatile
  3636  002078                     l310:
  3637  002078  A69E               	btfss	158,3,c	;volatile
  3638  00207A  EF41  F010         	goto	u2191
  3639  00207E  EF43  F010         	goto	u2190
  3640  002082                     u2191:
  3641  002082  EF3C  F010         	goto	l310
  3642  002086                     u2190:
  3643  002086                     
  3644                           ;FINAL.c: 1080:         PIR1bits.SSP1IF = 0;
  3645  002086  969E               	bcf	158,3,c	;volatile
  3646  002088                     
  3647                           ;FINAL.c: 1082:         SSP1BUF = 0b00000001;
  3648  002088  0E01               	movlw	1
  3649  00208A  6EC9               	movwf	201,c	;volatile
  3650  00208C                     l313:
  3651  00208C  A69E               	btfss	158,3,c	;volatile
  3652  00208E  EF4B  F010         	goto	u2201
  3653  002092  EF4D  F010         	goto	u2200
  3654  002096                     u2201:
  3655  002096  EF46  F010         	goto	l313
  3656  00209A                     u2200:
  3657  00209A                     
  3658                           ;FINAL.c: 1085:         PIR1bits.SSP1IF = 0;
  3659  00209A  969E               	bcf	158,3,c	;volatile
  3660  00209C                     
  3661                           ;FINAL.c: 1087:         SSP1BUF = 0b11111010;
  3662  00209C  0EFA               	movlw	250
  3663  00209E  6EC9               	movwf	201,c	;volatile
  3664  0020A0                     l316:
  3665  0020A0  A69E               	btfss	158,3,c	;volatile
  3666  0020A2  EF55  F010         	goto	u2211
  3667  0020A6  EF57  F010         	goto	u2210
  3668  0020AA                     u2211:
  3669  0020AA  EF50  F010         	goto	l316
  3670  0020AE                     u2210:
  3671  0020AE                     
  3672                           ;FINAL.c: 1090:         PIR1bits.SSP1IF = 0;
  3673  0020AE  969E               	bcf	158,3,c	;volatile
  3674  0020B0                     
  3675                           ;FINAL.c: 1092:         SSP1BUF = 0b10101010;
  3676  0020B0  0EAA               	movlw	170
  3677  0020B2  6EC9               	movwf	201,c	;volatile
  3678  0020B4                     l319:
  3679  0020B4  A69E               	btfss	158,3,c	;volatile
  3680  0020B6  EF5F  F010         	goto	u2221
  3681  0020BA  EF61  F010         	goto	u2220
  3682  0020BE                     u2221:
  3683  0020BE  EF5A  F010         	goto	l319
  3684  0020C2                     u2220:
  3685  0020C2                     
  3686                           ;FINAL.c: 1095:         PIR1bits.SSP1IF = 0;
  3687  0020C2  969E               	bcf	158,3,c	;volatile
  3688                           
  3689                           ;FINAL.c: 1097:         LATCbits.LC6 = 1;
  3690  0020C4  8C8B               	bsf	139,6,c	;volatile
  3691  0020C6                     
  3692                           ;FINAL.c: 1101:         _delay((unsigned long)((1000)*(48000000/4000.0)));
  3693  0020C6  0E3D               	movlw	61
  3694  0020C8  6E5D               	movwf	(??_clean_memory+1)^0,c
  3695  0020CA  0EE1               	movlw	225
  3696  0020CC  6E5C               	movwf	??_clean_memory^0,c
  3697  0020CE  0E40               	movlw	64
  3698  0020D0                     u2817:
  3699  0020D0  2EE8               	decfsz	wreg,f,c
  3700  0020D2  D7FE               	bra	u2817
  3701  0020D4  2E5C               	decfsz	??_clean_memory^0,f,c
  3702  0020D6  D7FC               	bra	u2817
  3703  0020D8  2E5D               	decfsz	(??_clean_memory+1)^0,f,c
  3704  0020DA  D7FA               	bra	u2817
  3705  0020DC                     l2761:
  3706                           
  3707                           ;FINAL.c: 1106:         a = 1;
  3708  0020DC  0E01               	movlw	1
  3709  0020DE  0100               	movlb	0	; () banked
  3710  0020E0  6F85               	movwf	clean_memory@a& (0+255),b
  3711                           
  3712                           ;FINAL.c: 1108:         while( a == 0 ){
  3713  0020E2  EF8F  F010         	goto	l322
  3714  0020E6                     l323:
  3715                           
  3716                           ; BSR set to: 0
  3717                           ;FINAL.c: 1110:         LATCbits.LC6 = 0;
  3718  0020E6  9C8B               	bcf	139,6,c	;volatile
  3719  0020E8                     
  3720                           ; BSR set to: 0
  3721                           ;FINAL.c: 1112:         SSP1BUF = 0b00000101;
  3722  0020E8  0E05               	movlw	5
  3723  0020EA  6EC9               	movwf	201,c	;volatile
  3724  0020EC                     l324:
  3725  0020EC  A69E               	btfss	158,3,c	;volatile
  3726  0020EE  EF7B  F010         	goto	u2231
  3727  0020F2  EF7D  F010         	goto	u2230
  3728  0020F6                     u2231:
  3729  0020F6  EF76  F010         	goto	l324
  3730  0020FA                     u2230:
  3731  0020FA                     
  3732                           ;FINAL.c: 1116:         PIR1bits.SSP1IF = 0;
  3733  0020FA  969E               	bcf	158,3,c	;volatile
  3734  0020FC                     l327:
  3735  0020FC  A0C7               	btfss	199,0,c	;volatile
  3736  0020FE  EF83  F010         	goto	u2241
  3737  002102  EF85  F010         	goto	u2240
  3738  002106                     u2241:
  3739  002106  EF7E  F010         	goto	l327
  3740  00210A                     u2240:
  3741  00210A                     
  3742                           ;FINAL.c: 1121:         if ((SSP1BUF & 0b00000001) == 0b00000001){
  3743  00210A  A0C9               	btfss	201,0,c	;volatile
  3744  00210C  EF8A  F010         	goto	u2251
  3745  002110  EF8C  F010         	goto	u2250
  3746  002114                     u2251:
  3747  002114  EF6E  F010         	goto	l2761
  3748  002118                     u2250:
  3749  002118                     
  3750                           ;FINAL.c: 1123:             a = 0;
  3751  002118  0E00               	movlw	0
  3752  00211A  0100               	movlb	0	; () banked
  3753  00211C  6F85               	movwf	clean_memory@a& (0+255),b
  3754  00211E                     l322:
  3755                           
  3756                           ; BSR set to: 0
  3757                           ;FINAL.c: 1108:         while( a == 0 ){
  3758  00211E  5185               	movf	clean_memory@a& (0+255),w,b
  3759  002120  B4D8               	btfsc	status,2,c
  3760  002122  EF95  F010         	goto	u2261
  3761  002126  EF97  F010         	goto	u2260
  3762  00212A                     u2261:
  3763  00212A  EF73  F010         	goto	l323
  3764  00212E                     u2260:
  3765  00212E                     
  3766                           ; BSR set to: 0
  3767                           ;FINAL.c: 1137:         LATCbits.LC6 = 0;
  3768  00212E  9C8B               	bcf	139,6,c	;volatile
  3769  002130                     
  3770                           ; BSR set to: 0
  3771                           ;FINAL.c: 1139:         SSP1BUF = 0b00000011;
  3772  002130  0E03               	movlw	3
  3773  002132  6EC9               	movwf	201,c	;volatile
  3774  002134                     l333:
  3775  002134  A69E               	btfss	158,3,c	;volatile
  3776  002136  EF9F  F010         	goto	u2271
  3777  00213A  EFA1  F010         	goto	u2270
  3778  00213E                     u2271:
  3779  00213E  EF9A  F010         	goto	l333
  3780  002142                     u2270:
  3781  002142                     
  3782                           ;FINAL.c: 1142:         PIR1bits.SSP1IF = 0;
  3783  002142  969E               	bcf	158,3,c	;volatile
  3784  002144                     
  3785                           ;FINAL.c: 1144:         SSP1BUF = 0b00000000;
  3786  002144  0E00               	movlw	0
  3787  002146  6EC9               	movwf	201,c	;volatile
  3788  002148                     l336:
  3789  002148  A69E               	btfss	158,3,c	;volatile
  3790  00214A  EFA9  F010         	goto	u2281
  3791  00214E  EFAB  F010         	goto	u2280
  3792  002152                     u2281:
  3793  002152  EFA4  F010         	goto	l336
  3794  002156                     u2280:
  3795  002156                     
  3796                           ;FINAL.c: 1147:         PIR1bits.SSP1IF = 0;
  3797  002156  969E               	bcf	158,3,c	;volatile
  3798  002158                     
  3799                           ;FINAL.c: 1149:         SSP1BUF = 0b00000001;
  3800  002158  0E01               	movlw	1
  3801  00215A  6EC9               	movwf	201,c	;volatile
  3802  00215C                     l339:
  3803  00215C  A69E               	btfss	158,3,c	;volatile
  3804  00215E  EFB3  F010         	goto	u2291
  3805  002162  EFB5  F010         	goto	u2290
  3806  002166                     u2291:
  3807  002166  EFAE  F010         	goto	l339
  3808  00216A                     u2290:
  3809  00216A                     
  3810                           ;FINAL.c: 1152:         PIR1bits.SSP1IF = 0;
  3811  00216A  969E               	bcf	158,3,c	;volatile
  3812  00216C                     l342:
  3813  00216C  A69E               	btfss	158,3,c	;volatile
  3814  00216E  EFBB  F010         	goto	u2301
  3815  002172  EFBD  F010         	goto	u2300
  3816  002176                     u2301:
  3817  002176  EFB6  F010         	goto	l342
  3818  00217A                     u2300:
  3819  00217A                     
  3820                           ;FINAL.c: 1155:         PIR1bits.SSP1IF = 0;
  3821  00217A  969E               	bcf	158,3,c	;volatile
  3822                           
  3823                           ;FINAL.c: 1157:         dato1 = SSP1BUF;
  3824  00217C  CFC9 F083          	movff	4041,clean_memory@dato1	;volatile
  3825  002180                     l345:
  3826  002180  A69E               	btfss	158,3,c	;volatile
  3827  002182  EFC5  F010         	goto	u2311
  3828  002186  EFC7  F010         	goto	u2310
  3829  00218A                     u2311:
  3830  00218A  EFC0  F010         	goto	l345
  3831  00218E                     u2310:
  3832  00218E                     
  3833                           ;FINAL.c: 1160:         PIR1bits.SSP1IF = 0;
  3834  00218E  969E               	bcf	158,3,c	;volatile
  3835                           
  3836                           ;FINAL.c: 1162:         dato2 = SSP1BUF;
  3837  002190  CFC9 F084          	movff	4041,clean_memory@dato2	;volatile
  3838                           
  3839                           ;FINAL.c: 1164:         LATCbits.LC6 = 1;
  3840  002194  8C8B               	bsf	139,6,c	;volatile
  3841  002196                     
  3842                           ;FINAL.c: 1169:       cleanDisp();
  3843  002196  EC9F  F017         	call	_cleanDisp	;wreg free
  3844                           
  3845                           ;FINAL.c: 1170:       direccion1();
  3846  00219A  ECEC  F017         	call	_direccion1	;wreg free
  3847  00219E                     
  3848                           ;FINAL.c: 1171:       sprintf(vector,"%x", dato1);
  3849  00219E  0E73               	movlw	low clean_memory@vector
  3850  0021A0  0100               	movlb	0	; () banked
  3851  0021A2  6F60               	movwf	sprintf@s& (0+255),b
  3852  0021A4  0E00               	movlw	high clean_memory@vector
  3853  0021A6  6F61               	movwf	(sprintf@s+1)& (0+255),b
  3854  0021A8  0EBC               	movlw	low STR_17
  3855  0021AA  6F62               	movwf	sprintf@fmt& (0+255),b
  3856  0021AC  0E0F               	movlw	high STR_17
  3857  0021AE  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  3858  0021B0  C083  F064         	movff	clean_memory@dato1,?_sprintf+4
  3859  0021B4  6B65               	clrf	(?_sprintf+5)& (0+255),b
  3860  0021B6  EC84  F016         	call	_sprintf	;wreg free
  3861  0021BA                     
  3862                           ;FINAL.c: 1172:       Texto(vector);
  3863  0021BA  0E73               	movlw	low clean_memory@vector
  3864  0021BC  6E02               	movwf	Texto@A^0,c
  3865  0021BE  0E00               	movlw	high clean_memory@vector
  3866  0021C0  6E03               	movwf	(Texto@A+1)^0,c
  3867  0021C2  ECC1  F015         	call	_Texto	;wreg free
  3868  0021C6                     
  3869                           ;FINAL.c: 1174:       direccion2();
  3870  0021C6  ECE3  F017         	call	_direccion2	;wreg free
  3871  0021CA                     
  3872                           ;FINAL.c: 1175:       sprintf(vector,"%x", dato2);
  3873  0021CA  0E73               	movlw	low clean_memory@vector
  3874  0021CC  0100               	movlb	0	; () banked
  3875  0021CE  6F60               	movwf	sprintf@s& (0+255),b
  3876  0021D0  0E00               	movlw	high clean_memory@vector
  3877  0021D2  6F61               	movwf	(sprintf@s+1)& (0+255),b
  3878  0021D4  0EBC               	movlw	low STR_17
  3879  0021D6  6F62               	movwf	sprintf@fmt& (0+255),b
  3880  0021D8  0E0F               	movlw	high STR_17
  3881  0021DA  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  3882  0021DC  C084  F064         	movff	clean_memory@dato2,?_sprintf+4
  3883  0021E0  6B65               	clrf	(?_sprintf+5)& (0+255),b
  3884  0021E2  EC84  F016         	call	_sprintf	;wreg free
  3885                           
  3886                           ;FINAL.c: 1176:       Texto(vector);
  3887  0021E6  0E73               	movlw	low clean_memory@vector
  3888  0021E8  6E02               	movwf	Texto@A^0,c
  3889  0021EA  0E00               	movlw	high clean_memory@vector
  3890  0021EC  6E03               	movwf	(Texto@A+1)^0,c
  3891  0021EE  ECC1  F015         	call	_Texto	;wreg free
  3892  0021F2                     l348:
  3893  0021F2  EFF9  F010         	goto	l348
  3894  0021F6  0012               	return		;funcret
  3895  0021F8                     __end_of_clean_memory:
  3896                           	callstack 0
  3897                           
  3898 ;; *************** function _sprintf *****************
  3899 ;; Defined at:
  3900 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_sprintf.c"
  3901 ;; Parameters:    Size  Location     Type
  3902 ;;  s               2    0[BANK0 ] PTR unsigned char 
  3903 ;;		 -> clean_memory@vector(16), escritura@vector(12), colision@vector2(15), colision@vector(15), 
  3904 ;;		 -> main@vector(10), 
  3905 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  3906 ;;		 -> STR_18(3), STR_17(3), STR_16(17), STR_15(11), 
  3907 ;;		 -> STR_14(15), STR_13(11), STR_12(16), STR_11(10), 
  3908 ;;		 -> STR_10(15), STR_9(15), STR_8(14), STR_7(8), 
  3909 ;;		 -> STR_6(8), STR_5(8), STR_4(9), STR_3(4), 
  3910 ;;		 -> STR_2(11), STR_1(9), 
  3911 ;; Auto vars:     Size  Location     Type
  3912 ;;  f              11    8[BANK0 ] struct _IO_FILE
  3913 ;;  ap              2    6[BANK0 ] PTR void [1]
  3914 ;;		 -> ?_sprintf(2), 
  3915 ;;  ret             2    0        int 
  3916 ;; Return value:  Size  Location     Type
  3917 ;;                  2    0[BANK0 ] int 
  3918 ;; Registers used:
  3919 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3920 ;; Tracked objects:
  3921 ;;		On entry : 0/0
  3922 ;;		On exit  : 0/0
  3923 ;;		Unchanged: 0/0
  3924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3925 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3926 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3928 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3929 ;;Total ram usage:       19 bytes
  3930 ;; Hardware stack levels used: 1
  3931 ;; Hardware stack levels required when called: 8
  3932 ;; This function calls:
  3933 ;;		_vfprintf
  3934 ;; This function is called by:
  3935 ;;		_main
  3936 ;;		_colision
  3937 ;;		_escritura
  3938 ;;		_clean_memory
  3939 ;; This function uses a non-reentrant model
  3940 ;;
  3941                           
  3942                           	psect	text10
  3943  002D08                     __ptext10:
  3944                           	callstack 0
  3945  002D08                     _sprintf:
  3946                           	callstack 22
  3947  002D08  0E64               	movlw	low (?_sprintf+4)
  3948  002D0A  0100               	movlb	0	; () banked
  3949  002D0C  6F66               	movwf	sprintf@ap& (0+255),b
  3950  002D0E  0E00               	movlw	high (?_sprintf+4)
  3951  002D10  6F67               	movwf	(sprintf@ap+1)& (0+255),b
  3952  002D12  C060  F068         	movff	sprintf@s,sprintf@f
  3953  002D16  C061  F069         	movff	sprintf@s+1,sprintf@f+1
  3954  002D1A                     
  3955                           ; BSR set to: 0
  3956  002D1A  0E00               	movlw	0
  3957  002D1C  6F6C               	movwf	(sprintf@f+4)& (0+255),b
  3958  002D1E  0E00               	movlw	0
  3959  002D20  6F6B               	movwf	(sprintf@f+3)& (0+255),b
  3960  002D22                     
  3961                           ; BSR set to: 0
  3962  002D22  0E00               	movlw	0
  3963  002D24  6F72               	movwf	(sprintf@f+10)& (0+255),b
  3964  002D26  0E00               	movlw	0
  3965  002D28  6F71               	movwf	(sprintf@f+9)& (0+255),b
  3966  002D2A                     
  3967                           ; BSR set to: 0
  3968  002D2A  0E68               	movlw	low sprintf@f
  3969  002D2C  6E54               	movwf	vfprintf@fp^0,c
  3970  002D2E  0E00               	movlw	high sprintf@f
  3971  002D30  6E55               	movwf	(vfprintf@fp+1)^0,c
  3972  002D32  C062  F056         	movff	sprintf@fmt,vfprintf@fmt
  3973  002D36  C063  F057         	movff	sprintf@fmt+1,vfprintf@fmt+1
  3974  002D3A  0E66               	movlw	low sprintf@ap
  3975  002D3C  6E58               	movwf	vfprintf@ap^0,c
  3976  002D3E  0E00               	movlw	high sprintf@ap
  3977  002D40  6E59               	movwf	(vfprintf@ap+1)^0,c
  3978  002D42  EC53  F016         	call	_vfprintf	;wreg free
  3979  002D46  0100               	movlb	0	; () banked
  3980  002D48  516B               	movf	(sprintf@f+3)& (0+255),w,b
  3981  002D4A  2560               	addwf	sprintf@s& (0+255),w,b
  3982  002D4C  6ED9               	movwf	fsr2l,c
  3983  002D4E  516C               	movf	(sprintf@f+4)& (0+255),w,b
  3984  002D50  2161               	addwfc	(sprintf@s+1)& (0+255),w,b
  3985  002D52  6EDA               	movwf	fsr2h,c
  3986  002D54  0E00               	movlw	0
  3987  002D56  6EDF               	movwf	indf2,c
  3988  002D58                     
  3989                           ; BSR set to: 0
  3990  002D58  0012               	return		;funcret
  3991  002D5A                     __end_of_sprintf:
  3992                           	callstack 0
  3993                           
  3994 ;; *************** function _vfprintf *****************
  3995 ;; Defined at:
  3996 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  3997 ;; Parameters:    Size  Location     Type
  3998 ;;  fp              2   83[COMRAM] PTR struct _IO_FILE
  3999 ;;		 -> sprintf@f(11), 
  4000 ;;  fmt             2   85[COMRAM] PTR const unsigned char 
  4001 ;;		 -> STR_18(3), STR_17(3), STR_16(17), STR_15(11), 
  4002 ;;		 -> STR_14(15), STR_13(11), STR_12(16), STR_11(10), 
  4003 ;;		 -> STR_10(15), STR_9(15), STR_8(14), STR_7(8), 
  4004 ;;		 -> STR_6(8), STR_5(8), STR_4(9), STR_3(4), 
  4005 ;;		 -> STR_2(11), STR_1(9), 
  4006 ;;  ap              2   87[COMRAM] PTR PTR void 
  4007 ;;		 -> sprintf@ap(2), 
  4008 ;; Auto vars:     Size  Location     Type
  4009 ;;  cfmt            2   89[COMRAM] PTR unsigned char 
  4010 ;;		 -> STR_18(3), STR_17(3), STR_16(17), STR_15(11), 
  4011 ;;		 -> STR_14(15), STR_13(11), STR_12(16), STR_11(10), 
  4012 ;;		 -> STR_10(15), STR_9(15), STR_8(14), STR_7(8), 
  4013 ;;		 -> STR_6(8), STR_5(8), STR_4(9), STR_3(4), 
  4014 ;;		 -> STR_2(11), STR_1(9), 
  4015 ;; Return value:  Size  Location     Type
  4016 ;;                  2   83[COMRAM] int 
  4017 ;; Registers used:
  4018 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4019 ;; Tracked objects:
  4020 ;;		On entry : 0/0
  4021 ;;		On exit  : 0/0
  4022 ;;		Unchanged: 0/0
  4023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4024 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4025 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4027 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4028 ;;Total ram usage:        8 bytes
  4029 ;; Hardware stack levels used: 1
  4030 ;; Hardware stack levels required when called: 7
  4031 ;; This function calls:
  4032 ;;		_vfpfcnvrt
  4033 ;; This function is called by:
  4034 ;;		_sprintf
  4035 ;; This function uses a non-reentrant model
  4036 ;;
  4037                           
  4038                           	psect	text11
  4039  002CA6                     __ptext11:
  4040                           	callstack 0
  4041  002CA6                     _vfprintf:
  4042                           	callstack 22
  4043  002CA6                     
  4044                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  4045  002CA6  C056  F05A         	movff	vfprintf@fmt,vfprintf@cfmt
  4046  002CAA  C057  F05B         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  4047  002CAE                     
  4048                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  4049  002CAE  0E00               	movlw	0
  4050  002CB0  0100               	movlb	0	; () banked
  4051  002CB2  6FC5               	movwf	(_nout+1)& (0+255),b
  4052  002CB4  0E00               	movlw	0
  4053  002CB6  6FC4               	movwf	_nout& (0+255),b
  4054                           
  4055                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  4056  002CB8  EF71  F016         	goto	l2471
  4057  002CBC                     l2469:
  4058                           
  4059                           ; BSR set to: 0
  4060                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  4061  002CBC  C054  F03F         	movff	vfprintf@fp,vfpfcnvrt@fp
  4062  002CC0  C055  F040         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  4063  002CC4  0E5A               	movlw	low vfprintf@cfmt
  4064  002CC6  6E41               	movwf	vfpfcnvrt@fmt^0,c
  4065  002CC8  0E00               	movlw	high vfprintf@cfmt
  4066  002CCA  6E42               	movwf	(vfpfcnvrt@fmt+1)^0,c
  4067  002CCC  C058  F043         	movff	vfprintf@ap,vfpfcnvrt@ap
  4068  002CD0  C059  F044         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  4069  002CD4  EC27  F00A         	call	_vfpfcnvrt	;wreg free
  4070  002CD8  503F               	movf	?_vfpfcnvrt^0,w,c
  4071  002CDA  0100               	movlb	0	; () banked
  4072  002CDC  27C4               	addwf	_nout& (0+255),f,b
  4073  002CDE  5040               	movf	(?_vfpfcnvrt+1)^0,w,c
  4074  002CE0  23C5               	addwfc	(_nout+1)& (0+255),f,b
  4075  002CE2                     l2471:
  4076                           
  4077                           ; BSR set to: 0
  4078                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  4079  002CE2  C05A  FFF6         	movff	vfprintf@cfmt,tblptrl
  4080  002CE6  C05B  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  4081  002CEA                     	if	0	;tblptru may be non-zero
  4082  002CEA                     	endif
  4083  002CEA                     	if	0	;tblptru may be non-zero
  4084  002CEA                     	endif
  4085  002CEA  0008               	tblrd		*
  4086  002CEC  50F5               	movf	tablat,w,c
  4087  002CEE  0900               	iorlw	0
  4088  002CF0  A4D8               	btfss	status,2,c
  4089  002CF2  EF7D  F016         	goto	u1911
  4090  002CF6  EF7F  F016         	goto	u1910
  4091  002CFA                     u1911:
  4092  002CFA  EF5E  F016         	goto	l2469
  4093  002CFE                     u1910:
  4094  002CFE                     
  4095                           ; BSR set to: 0
  4096                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  4097  002CFE  C0C4  F054         	movff	_nout,?_vfprintf
  4098  002D02  C0C5  F055         	movff	_nout+1,?_vfprintf+1
  4099  002D06                     
  4100                           ; BSR set to: 0
  4101  002D06  0012               	return		;funcret
  4102  002D08                     __end_of_vfprintf:
  4103                           	callstack 0
  4104                           
  4105 ;; *************** function _vfpfcnvrt *****************
  4106 ;; Defined at:
  4107 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  4108 ;; Parameters:    Size  Location     Type
  4109 ;;  fp              2   62[COMRAM] PTR struct _IO_FILE
  4110 ;;		 -> sprintf@f(11), 
  4111 ;;  fmt             2   64[COMRAM] PTR PTR unsigned char 
  4112 ;;		 -> vfprintf@cfmt(2), 
  4113 ;;  ap              2   66[COMRAM] PTR PTR void 
  4114 ;;		 -> sprintf@ap(2), 
  4115 ;; Auto vars:     Size  Location     Type
  4116 ;;  llu             8   75[COMRAM] unsigned long long 
  4117 ;;  ll              8    0        long long 
  4118 ;;  f               4    0        long long 
  4119 ;;  vp              3    0        PTR void 
  4120 ;;  ct              3    0        unsigned char [3]
  4121 ;;  cp              3    0        PTR unsigned char 
  4122 ;;  i               2    0        int 
  4123 ;;  done            2    0        int 
  4124 ;;  c               1   74[COMRAM] unsigned char 
  4125 ;; Return value:  Size  Location     Type
  4126 ;;                  2   62[COMRAM] int 
  4127 ;; Registers used:
  4128 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4129 ;; Tracked objects:
  4130 ;;		On entry : 0/0
  4131 ;;		On exit  : 0/0
  4132 ;;		Unchanged: 0/0
  4133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4134 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4135 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4136 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4137 ;;      Totals:        21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4138 ;;Total ram usage:       21 bytes
  4139 ;; Hardware stack levels used: 1
  4140 ;; Hardware stack levels required when called: 6
  4141 ;; This function calls:
  4142 ;;		_fputc
  4143 ;;		_strncmp
  4144 ;;		_utoa
  4145 ;;		_xtoa
  4146 ;; This function is called by:
  4147 ;;		_vfprintf
  4148 ;; This function uses a non-reentrant model
  4149 ;;
  4150                           
  4151                           	psect	text12
  4152  00144E                     __ptext12:
  4153                           	callstack 0
  4154  00144E                     _vfpfcnvrt:
  4155                           	callstack 22
  4156  00144E                     
  4157                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.36\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          6\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  4158  00144E  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4159  001452  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4160  001456  CFDE FFF6          	movff	postinc2,tblptrl
  4161  00145A  CFDD FFF7          	movff	postdec2,tblptrh
  4162  00145E                     	if	0	;tblptru may be non-zero
  4163  00145E                     	endif
  4164  00145E                     	if	0	;tblptru may be non-zero
  4165  00145E                     	endif
  4166  00145E  0008               	tblrd		*
  4167  001460  50F5               	movf	tablat,w,c
  4168  001462  0A25               	xorlw	37
  4169  001464  A4D8               	btfss	status,2,c
  4170  001466  EF37  F00A         	goto	u1831
  4171  00146A  EF39  F00A         	goto	u1830
  4172  00146E                     u1831:
  4173  00146E  EF06  F00C         	goto	l2451
  4174  001472                     u1830:
  4175  001472                     
  4176                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  4177  001472  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4178  001476  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4179  00147A  2ADE               	incf	postinc2,f,c
  4180  00147C  0E00               	movlw	0
  4181  00147E  22DD               	addwfc	postdec2,f,c
  4182  001480                     
  4183                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  4184  001480  0E00               	movlw	0
  4185  001482  0100               	movlb	0	; () banked
  4186  001484  6FC7               	movwf	(_width+1)& (0+255),b
  4187  001486  0E00               	movlw	0
  4188  001488  6FC6               	movwf	_width& (0+255),b
  4189  00148A  C0C6  F0CA         	movff	_width,_flags
  4190  00148E  C0C7  F0CB         	movff	_width+1,_flags+1
  4191  001492                     
  4192                           ; BSR set to: 0
  4193                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  4194  001492  69C8               	setf	_prec& (0+255),b
  4195  001494  69C9               	setf	(_prec+1)& (0+255),b
  4196  001496                     
  4197                           ; BSR set to: 0
  4198                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1204:         if 
      +                          (*fmt[0] == 'u') {
  4199  001496  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4200  00149A  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4201  00149E  CFDE FFF6          	movff	postinc2,tblptrl
  4202  0014A2  CFDD FFF7          	movff	postdec2,tblptrh
  4203  0014A6                     	if	0	;tblptru may be non-zero
  4204  0014A6                     	endif
  4205  0014A6                     	if	0	;tblptru may be non-zero
  4206  0014A6                     	endif
  4207  0014A6  0008               	tblrd		*
  4208  0014A8  50F5               	movf	tablat,w,c
  4209  0014AA  0A75               	xorlw	117
  4210  0014AC  A4D8               	btfss	status,2,c
  4211  0014AE  EF5B  F00A         	goto	u1841
  4212  0014B2  EF5D  F00A         	goto	u1840
  4213  0014B6                     u1841:
  4214  0014B6  EF9E  F00A         	goto	l2399
  4215  0014BA                     u1840:
  4216  0014BA                     
  4217                           ; BSR set to: 0
  4218                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1206:            
      +                           ++*fmt;
  4219  0014BA  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4220  0014BE  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4221  0014C2  2ADE               	incf	postinc2,f,c
  4222  0014C4  0E00               	movlw	0
  4223  0014C6  22DD               	addwfc	postdec2,f,c
  4224                           
  4225                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1207:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  4226  0014C8  C043  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4227  0014CC  C044  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4228  0014D0  CFDF F045          	movff	indf2,??_vfpfcnvrt
  4229  0014D4  0E02               	movlw	2
  4230  0014D6  26DE               	addwf	postinc2,f,c
  4231  0014D8  CFDF F046          	movff	indf2,??_vfpfcnvrt+1
  4232  0014DC  0E00               	movlw	0
  4233  0014DE  22DD               	addwfc	postdec2,f,c
  4234  0014E0  C045  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4235  0014E4  C046  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4236  0014E8  CFDE F047          	movff	postinc2,??_vfpfcnvrt+2
  4237  0014EC  CFDD F048          	movff	postdec2,??_vfpfcnvrt+3
  4238  0014F0  C047  F04C         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  4239  0014F4  C048  F04D         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  4240  0014F8  6A4E               	clrf	(vfpfcnvrt@llu+2)^0,c
  4241  0014FA  6A4F               	clrf	(vfpfcnvrt@llu+3)^0,c
  4242  0014FC  6A50               	clrf	(vfpfcnvrt@llu+4)^0,c
  4243  0014FE  6A51               	clrf	(vfpfcnvrt@llu+5)^0,c
  4244  001500  6A52               	clrf	(vfpfcnvrt@llu+6)^0,c
  4245  001502  6A53               	clrf	(vfpfcnvrt@llu+7)^0,c
  4246  001504                     l2395:
  4247                           
  4248                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1209:            
      +                           return utoa(fp, llu);
  4249  001504  C03F  F01C         	movff	vfpfcnvrt@fp,utoa@fp
  4250  001508  C040  F01D         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  4251  00150C  C04C  F01E         	movff	vfpfcnvrt@llu,utoa@d
  4252  001510  C04D  F01F         	movff	vfpfcnvrt@llu+1,utoa@d+1
  4253  001514  C04E  F020         	movff	vfpfcnvrt@llu+2,utoa@d+2
  4254  001518  C04F  F021         	movff	vfpfcnvrt@llu+3,utoa@d+3
  4255  00151C  C050  F022         	movff	vfpfcnvrt@llu+4,utoa@d+4
  4256  001520  C051  F023         	movff	vfpfcnvrt@llu+5,utoa@d+5
  4257  001524  C052  F024         	movff	vfpfcnvrt@llu+6,utoa@d+6
  4258  001528  C053  F025         	movff	vfpfcnvrt@llu+7,utoa@d+7
  4259  00152C  EC05  F00F         	call	_utoa	;wreg free
  4260  001530  C01C  F03F         	movff	?_utoa,?_vfpfcnvrt
  4261  001534  C01D  F040         	movff	?_utoa+1,?_vfpfcnvrt+1
  4262  001538  EF21  F00C         	goto	l1116
  4263  00153C                     l2399:
  4264                           
  4265                           ; BSR set to: 0
  4266                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1214:         if 
      +                          (!strncmp(*fmt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
  4267  00153C  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4268  001540  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4269  001544  CFDE F001          	movff	postinc2,strncmp@_l
  4270  001548  CFDD F002          	movff	postdec2,strncmp@_l+1
  4271  00154C  0E7B               	movlw	low (STR_13+8)
  4272  00154E  6E03               	movwf	strncmp@_r^0,c
  4273  001550  0E0F               	movlw	high (STR_13+8)
  4274  001552  6E04               	movwf	(strncmp@_r+1)^0,c
  4275  001554  0E00               	movlw	0
  4276  001556  6E06               	movwf	(strncmp@n+1)^0,c
  4277  001558  0E02               	movlw	2
  4278  00155A  6E05               	movwf	strncmp@n^0,c
  4279  00155C  ECC9  F013         	call	_strncmp	;wreg free
  4280  001560  5001               	movf	?_strncmp^0,w,c
  4281  001562  1002               	iorwf	(?_strncmp+1)^0,w,c
  4282  001564  A4D8               	btfss	status,2,c
  4283  001566  EFB7  F00A         	goto	u1851
  4284  00156A  EFB9  F00A         	goto	u1850
  4285  00156E                     u1851:
  4286  00156E  EFE7  F00A         	goto	l2407
  4287  001572                     u1850:
  4288  001572                     
  4289                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1216:            
      +                           *fmt += ((sizeof("lu")/sizeof("lu"[0]))-1);
  4290  001572  0E02               	movlw	2
  4291  001574  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4292  001578  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4293  00157C  26DE               	addwf	postinc2,f,c
  4294  00157E  0E00               	movlw	0
  4295  001580  22DD               	addwfc	postdec2,f,c
  4296                           
  4297                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1217:            
      +                           llu = (unsigned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned 
      +                          long)0));
  4298  001582  C043  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4299  001586  C044  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4300  00158A  CFDF F045          	movff	indf2,??_vfpfcnvrt
  4301  00158E  0E04               	movlw	4
  4302  001590  26DE               	addwf	postinc2,f,c
  4303  001592  CFDF F046          	movff	indf2,??_vfpfcnvrt+1
  4304  001596  0E00               	movlw	0
  4305  001598  22DD               	addwfc	postdec2,f,c
  4306  00159A  C045  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4307  00159E  C046  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4308  0015A2  CFDE F047          	movff	postinc2,??_vfpfcnvrt+2
  4309  0015A6  CFDE F048          	movff	postinc2,??_vfpfcnvrt+3
  4310  0015AA  CFDE F049          	movff	postinc2,??_vfpfcnvrt+4
  4311  0015AE  CFDE F04A          	movff	postinc2,??_vfpfcnvrt+5
  4312  0015B2  5047               	movf	(??_vfpfcnvrt+2)^0,w,c
  4313  0015B4  6E4C               	movwf	vfpfcnvrt@llu^0,c
  4314  0015B6  5048               	movf	(??_vfpfcnvrt+3)^0,w,c
  4315  0015B8  6E4D               	movwf	(vfpfcnvrt@llu+1)^0,c
  4316  0015BA  5049               	movf	(??_vfpfcnvrt+4)^0,w,c
  4317  0015BC  6E4E               	movwf	(vfpfcnvrt@llu+2)^0,c
  4318  0015BE  504A               	movf	(??_vfpfcnvrt+5)^0,w,c
  4319  0015C0  6E4F               	movwf	(vfpfcnvrt@llu+3)^0,c
  4320  0015C2  6A50               	clrf	(vfpfcnvrt@llu+4)^0,c
  4321  0015C4  6A51               	clrf	(vfpfcnvrt@llu+5)^0,c
  4322  0015C6  6A52               	clrf	(vfpfcnvrt@llu+6)^0,c
  4323  0015C8  6A53               	clrf	(vfpfcnvrt@llu+7)^0,c
  4324  0015CA  EF82  F00A         	goto	l2395
  4325  0015CE                     l2407:
  4326                           
  4327                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1296:         if 
      +                          ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  4328  0015CE  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4329  0015D2  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4330  0015D6  CFDE FFF6          	movff	postinc2,tblptrl
  4331  0015DA  CFDD FFF7          	movff	postdec2,tblptrh
  4332  0015DE                     	if	0	;tblptru may be non-zero
  4333  0015DE                     	endif
  4334  0015DE                     	if	0	;tblptru may be non-zero
  4335  0015DE                     	endif
  4336  0015DE  0008               	tblrd		*
  4337  0015E0  50F5               	movf	tablat,w,c
  4338  0015E2  0A78               	xorlw	120
  4339  0015E4  B4D8               	btfsc	status,2,c
  4340  0015E6  EFF7  F00A         	goto	u1861
  4341  0015EA  EFF9  F00A         	goto	u1860
  4342  0015EE                     u1861:
  4343  0015EE  EF0B  F00B         	goto	l2411
  4344  0015F2                     u1860:
  4345  0015F2  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4346  0015F6  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4347  0015FA  CFDE FFF6          	movff	postinc2,tblptrl
  4348  0015FE  CFDD FFF7          	movff	postdec2,tblptrh
  4349  001602                     	if	0	;tblptru may be non-zero
  4350  001602                     	endif
  4351  001602                     	if	0	;tblptru may be non-zero
  4352  001602                     	endif
  4353  001602  0008               	tblrd		*
  4354  001604  50F5               	movf	tablat,w,c
  4355  001606  0A58               	xorlw	88
  4356  001608  A4D8               	btfss	status,2,c
  4357  00160A  EF09  F00B         	goto	u1871
  4358  00160E  EF0B  F00B         	goto	u1870
  4359  001612                     u1871:
  4360  001612  EF59  F00B         	goto	l2421
  4361  001616                     u1870:
  4362  001616                     l2411:
  4363                           
  4364                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1298:            
      +                           c = (*fmt)[0];
  4365  001616  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4366  00161A  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4367  00161E  CFDE FFF6          	movff	postinc2,tblptrl
  4368  001622  CFDD FFF7          	movff	postdec2,tblptrh
  4369  001626                     	if	0	;tblptru may be non-zero
  4370  001626                     	endif
  4371  001626                     	if	0	;tblptru may be non-zero
  4372  001626                     	endif
  4373  001626  0008               	tblrd		*
  4374  001628  CFF5 F04B          	movff	tablat,vfpfcnvrt@c
  4375  00162C                     
  4376                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1299:            
      +                           ++*fmt;
  4377  00162C  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4378  001630  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4379  001634  2ADE               	incf	postinc2,f,c
  4380  001636  0E00               	movlw	0
  4381  001638  22DD               	addwfc	postdec2,f,c
  4382  00163A                     
  4383                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1300:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  4384  00163A  C043  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4385  00163E  C044  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4386  001642  CFDF F045          	movff	indf2,??_vfpfcnvrt
  4387  001646  0E02               	movlw	2
  4388  001648  26DE               	addwf	postinc2,f,c
  4389  00164A  CFDF F046          	movff	indf2,??_vfpfcnvrt+1
  4390  00164E  0E00               	movlw	0
  4391  001650  22DD               	addwfc	postdec2,f,c
  4392  001652  C045  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4393  001656  C046  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4394  00165A  CFDE F047          	movff	postinc2,??_vfpfcnvrt+2
  4395  00165E  CFDD F048          	movff	postdec2,??_vfpfcnvrt+3
  4396  001662  C047  F04C         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  4397  001666  C048  F04D         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  4398  00166A  6A4E               	clrf	(vfpfcnvrt@llu+2)^0,c
  4399  00166C  6A4F               	clrf	(vfpfcnvrt@llu+3)^0,c
  4400  00166E  6A50               	clrf	(vfpfcnvrt@llu+4)^0,c
  4401  001670  6A51               	clrf	(vfpfcnvrt@llu+5)^0,c
  4402  001672  6A52               	clrf	(vfpfcnvrt@llu+6)^0,c
  4403  001674  6A53               	clrf	(vfpfcnvrt@llu+7)^0,c
  4404  001676                     l2417:
  4405                           
  4406                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1302:            
      +                           return xtoa(fp, llu, c);
  4407  001676  C03F  F01C         	movff	vfpfcnvrt@fp,xtoa@fp
  4408  00167A  C040  F01D         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  4409  00167E  C04C  F01E         	movff	vfpfcnvrt@llu,xtoa@d
  4410  001682  C04D  F01F         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  4411  001686  C04E  F020         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  4412  00168A  C04F  F021         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  4413  00168E  C050  F022         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  4414  001692  C051  F023         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  4415  001696  C052  F024         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  4416  00169A  C053  F025         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  4417  00169E  C04B  F026         	movff	vfpfcnvrt@c,xtoa@x
  4418  0016A2  ECB2  F00D         	call	_xtoa	;wreg free
  4419  0016A6  C01C  F03F         	movff	?_xtoa,?_vfpfcnvrt
  4420  0016AA  C01D  F040         	movff	?_xtoa+1,?_vfpfcnvrt+1
  4421  0016AE  EF21  F00C         	goto	l1116
  4422  0016B2                     l2421:
  4423                           
  4424                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1307:         if 
      +                          (!strncmp(*fmt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", ((size
      +                          of("lX")/sizeof("lX"[0]))-1))) {
  4425  0016B2  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4426  0016B6  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4427  0016BA  CFDE F001          	movff	postinc2,strncmp@_l
  4428  0016BE  CFDD F002          	movff	postdec2,strncmp@_l+1
  4429  0016C2  0EB9               	movlw	low STR_24
  4430  0016C4  6E03               	movwf	strncmp@_r^0,c
  4431  0016C6  0E0F               	movlw	high STR_24
  4432  0016C8  6E04               	movwf	(strncmp@_r+1)^0,c
  4433  0016CA  0E00               	movlw	0
  4434  0016CC  6E06               	movwf	(strncmp@n+1)^0,c
  4435  0016CE  0E02               	movlw	2
  4436  0016D0  6E05               	movwf	strncmp@n^0,c
  4437  0016D2  ECC9  F013         	call	_strncmp	;wreg free
  4438  0016D6  5001               	movf	?_strncmp^0,w,c
  4439  0016D8  1002               	iorwf	(?_strncmp+1)^0,w,c
  4440  0016DA  B4D8               	btfsc	status,2,c
  4441  0016DC  EF72  F00B         	goto	u1881
  4442  0016E0  EF74  F00B         	goto	u1880
  4443  0016E4                     u1881:
  4444  0016E4  EF8F  F00B         	goto	l2425
  4445  0016E8                     u1880:
  4446  0016E8  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4447  0016EC  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4448  0016F0  CFDE F001          	movff	postinc2,strncmp@_l
  4449  0016F4  CFDD F002          	movff	postdec2,strncmp@_l+1
  4450  0016F8  0EB6               	movlw	low STR_28
  4451  0016FA  6E03               	movwf	strncmp@_r^0,c
  4452  0016FC  0E0F               	movlw	high STR_28
  4453  0016FE  6E04               	movwf	(strncmp@_r+1)^0,c
  4454  001700  0E00               	movlw	0
  4455  001702  6E06               	movwf	(strncmp@n+1)^0,c
  4456  001704  0E02               	movlw	2
  4457  001706  6E05               	movwf	strncmp@n^0,c
  4458  001708  ECC9  F013         	call	_strncmp	;wreg free
  4459  00170C  5001               	movf	?_strncmp^0,w,c
  4460  00170E  1002               	iorwf	(?_strncmp+1)^0,w,c
  4461  001710  A4D8               	btfss	status,2,c
  4462  001712  EF8D  F00B         	goto	u1891
  4463  001716  EF8F  F00B         	goto	u1890
  4464  00171A                     u1891:
  4465  00171A  EFD0  F00B         	goto	l2435
  4466  00171E                     u1890:
  4467  00171E                     l2425:
  4468                           
  4469                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1308: ;C:\Program
      +                           Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1310:             c = (*fmt)
      +                          [1];
  4470  00171E  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4471  001722  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4472  001726  CFDE F045          	movff	postinc2,??_vfpfcnvrt
  4473  00172A  CFDD F046          	movff	postdec2,??_vfpfcnvrt+1
  4474  00172E  0E01               	movlw	1
  4475  001730  2645               	addwf	??_vfpfcnvrt^0,f,c
  4476  001732  0E00               	movlw	0
  4477  001734  2246               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  4478  001736  C045  FFF6         	movff	??_vfpfcnvrt,tblptrl
  4479  00173A  C046  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  4480  00173E                     	if	0	;tblptru may be non-zero
  4481  00173E                     	endif
  4482  00173E                     	if	0	;tblptru may be non-zero
  4483  00173E                     	endif
  4484  00173E  0008               	tblrd		*
  4485  001740  CFF5 F04B          	movff	tablat,vfpfcnvrt@c
  4486  001744                     
  4487                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1311:            
      +                           *fmt += ((sizeof("lx")/sizeof("lx"[0]))-1);
  4488  001744  0E02               	movlw	2
  4489  001746  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4490  00174A  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4491  00174E  26DE               	addwf	postinc2,f,c
  4492  001750  0E00               	movlw	0
  4493  001752  22DD               	addwfc	postdec2,f,c
  4494  001754                     
  4495                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1312:            
      +                           llu = (unsigned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned 
      +                          long)0));
  4496  001754  C043  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4497  001758  C044  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4498  00175C  CFDF F045          	movff	indf2,??_vfpfcnvrt
  4499  001760  0E04               	movlw	4
  4500  001762  26DE               	addwf	postinc2,f,c
  4501  001764  CFDF F046          	movff	indf2,??_vfpfcnvrt+1
  4502  001768  0E00               	movlw	0
  4503  00176A  22DD               	addwfc	postdec2,f,c
  4504  00176C  C045  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4505  001770  C046  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4506  001774  CFDE F047          	movff	postinc2,??_vfpfcnvrt+2
  4507  001778  CFDE F048          	movff	postinc2,??_vfpfcnvrt+3
  4508  00177C  CFDE F049          	movff	postinc2,??_vfpfcnvrt+4
  4509  001780  CFDE F04A          	movff	postinc2,??_vfpfcnvrt+5
  4510  001784  5047               	movf	(??_vfpfcnvrt+2)^0,w,c
  4511  001786  6E4C               	movwf	vfpfcnvrt@llu^0,c
  4512  001788  5048               	movf	(??_vfpfcnvrt+3)^0,w,c
  4513  00178A  6E4D               	movwf	(vfpfcnvrt@llu+1)^0,c
  4514  00178C  5049               	movf	(??_vfpfcnvrt+4)^0,w,c
  4515  00178E  6E4E               	movwf	(vfpfcnvrt@llu+2)^0,c
  4516  001790  504A               	movf	(??_vfpfcnvrt+5)^0,w,c
  4517  001792  6E4F               	movwf	(vfpfcnvrt@llu+3)^0,c
  4518  001794  6A50               	clrf	(vfpfcnvrt@llu+4)^0,c
  4519  001796  6A51               	clrf	(vfpfcnvrt@llu+5)^0,c
  4520  001798  6A52               	clrf	(vfpfcnvrt@llu+6)^0,c
  4521  00179A  6A53               	clrf	(vfpfcnvrt@llu+7)^0,c
  4522  00179C  EF3B  F00B         	goto	l2417
  4523  0017A0                     l2435:
  4524                           
  4525                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  4526  0017A0  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4527  0017A4  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4528  0017A8  CFDE FFF6          	movff	postinc2,tblptrl
  4529  0017AC  CFDD FFF7          	movff	postdec2,tblptrh
  4530  0017B0                     	if	0	;tblptru may be non-zero
  4531  0017B0                     	endif
  4532  0017B0                     	if	0	;tblptru may be non-zero
  4533  0017B0                     	endif
  4534  0017B0  0008               	tblrd		*
  4535  0017B2  50F5               	movf	tablat,w,c
  4536  0017B4  0A25               	xorlw	37
  4537  0017B6  A4D8               	btfss	status,2,c
  4538  0017B8  EFE0  F00B         	goto	u1901
  4539  0017BC  EFE2  F00B         	goto	u1900
  4540  0017C0                     u1901:
  4541  0017C0  EFF9  F00B         	goto	l2445
  4542  0017C4                     u1900:
  4543  0017C4                     
  4544                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  4545  0017C4  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4546  0017C8  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4547  0017CC  2ADE               	incf	postinc2,f,c
  4548  0017CE  0E00               	movlw	0
  4549  0017D0  22DD               	addwfc	postdec2,f,c
  4550  0017D2                     
  4551                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  4552  0017D2  0E00               	movlw	0
  4553  0017D4  6E02               	movwf	(fputc@c+1)^0,c
  4554  0017D6  0E25               	movlw	37
  4555  0017D8  6E01               	movwf	fputc@c^0,c
  4556  0017DA  C03F  F003         	movff	vfpfcnvrt@fp,fputc@fp
  4557  0017DE  C040  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4558  0017E2  ECA0  F014         	call	_fputc	;wreg free
  4559  0017E6                     l2441:
  4560                           
  4561                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  4562  0017E6  0E00               	movlw	0
  4563  0017E8  6E40               	movwf	(?_vfpfcnvrt+1)^0,c
  4564  0017EA  0E01               	movlw	1
  4565  0017EC  6E3F               	movwf	?_vfpfcnvrt^0,c
  4566  0017EE  EF21  F00C         	goto	l1116
  4567  0017F2                     l2445:
  4568                           
  4569                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  4570  0017F2  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4571  0017F6  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4572  0017FA  2ADE               	incf	postinc2,f,c
  4573  0017FC  0E00               	movlw	0
  4574  0017FE  22DD               	addwfc	postdec2,f,c
  4575  001800                     
  4576                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  4577  001800  0E00               	movlw	0
  4578  001802  6E40               	movwf	(?_vfpfcnvrt+1)^0,c
  4579  001804  0E00               	movlw	0
  4580  001806  6E3F               	movwf	?_vfpfcnvrt^0,c
  4581  001808  EF21  F00C         	goto	l1116
  4582  00180C                     l2451:
  4583                           
  4584                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  4585  00180C  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4586  001810  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4587  001814  CFDE FFF6          	movff	postinc2,tblptrl
  4588  001818  CFDD FFF7          	movff	postdec2,tblptrh
  4589  00181C                     	if	0	;tblptru may be non-zero
  4590  00181C                     	endif
  4591  00181C                     	if	0	;tblptru may be non-zero
  4592  00181C                     	endif
  4593  00181C  0008               	tblrd		*
  4594  00181E  50F5               	movf	tablat,w,c
  4595  001820  6E01               	movwf	fputc@c^0,c
  4596  001822  6A02               	clrf	(fputc@c+1)^0,c
  4597  001824  C03F  F003         	movff	vfpfcnvrt@fp,fputc@fp
  4598  001828  C040  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4599  00182C  ECA0  F014         	call	_fputc	;wreg free
  4600  001830                     
  4601                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  4602  001830  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4603  001834  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4604  001838  2ADE               	incf	postinc2,f,c
  4605  00183A  0E00               	movlw	0
  4606  00183C  22DD               	addwfc	postdec2,f,c
  4607  00183E  EFF3  F00B         	goto	l2441
  4608  001842                     l1116:
  4609  001842  0012               	return		;funcret
  4610  001844                     __end_of_vfpfcnvrt:
  4611                           	callstack 0
  4612                           
  4613 ;; *************** function _xtoa *****************
  4614 ;; Defined at:
  4615 ;;		line 645 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  4616 ;; Parameters:    Size  Location     Type
  4617 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  4618 ;;		 -> sprintf@f(11), 
  4619 ;;  d               8   29[COMRAM] unsigned long long 
  4620 ;;  x               1   37[COMRAM] unsigned char 
  4621 ;; Auto vars:     Size  Location     Type
  4622 ;;  n               8   50[COMRAM] unsigned long long 
  4623 ;;  c               2   60[COMRAM] int 
  4624 ;;  i               2   58[COMRAM] int 
  4625 ;;  w               2   48[COMRAM] int 
  4626 ;;  p               2   46[COMRAM] int 
  4627 ;; Return value:  Size  Location     Type
  4628 ;;                  2   27[COMRAM] int 
  4629 ;; Registers used:
  4630 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4631 ;; Tracked objects:
  4632 ;;		On entry : 0/0
  4633 ;;		On exit  : 0/0
  4634 ;;		Unchanged: 0/0
  4635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4636 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4637 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4638 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4639 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4640 ;;Total ram usage:       35 bytes
  4641 ;; Hardware stack levels used: 1
  4642 ;; Hardware stack levels required when called: 5
  4643 ;; This function calls:
  4644 ;;		_isalpha
  4645 ;;		_isupper
  4646 ;;		_pad
  4647 ;;		_toupper
  4648 ;; This function is called by:
  4649 ;;		_vfpfcnvrt
  4650 ;; This function uses a non-reentrant model
  4651 ;;
  4652                           
  4653                           	psect	text13
  4654  001B64                     __ptext13:
  4655                           	callstack 0
  4656  001B64                     _xtoa:
  4657                           	callstack 22
  4658  001B64                     
  4659                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 645: static int x
      +                          toa(FILE *fp, unsigned long long d, char x);C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 646: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\co
      +                          mmon\doprnt.c: 647:     int c, i, p, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources
      +                          \c99\common\doprnt.c: 648:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.3
      +                          6\pic\sources\c99\common\doprnt.c: 651:     if (!(prec < 0)) {
  4660  001B64  0100               	movlb	0	; () banked
  4661  001B66  BFC9               	btfsc	(_prec+1)& (0+255),7,b
  4662  001B68  EFB8  F00D         	goto	u1651
  4663  001B6C  EFBA  F00D         	goto	u1650
  4664  001B70                     u1651:
  4665  001B70  EFBB  F00D         	goto	l2301
  4666  001B74                     u1650:
  4667  001B74                     
  4668                           ; BSR set to: 0
  4669                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 652:         flag
      +                          s &= ~(1 << 1);
  4670  001B74  93CA               	bcf	_flags& (0+255),1,b
  4671  001B76                     l2301:
  4672                           
  4673                           ; BSR set to: 0
  4674                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 654:     p = (0 <
      +                           prec) ? prec : 1;
  4675  001B76  BFC9               	btfsc	(_prec+1)& (0+255),7,b
  4676  001B78  EFC8  F00D         	goto	u1660
  4677  001B7C  51C9               	movf	(_prec+1)& (0+255),w,b
  4678  001B7E  E106               	bnz	u1661
  4679  001B80  05C8               	decf	_prec& (0+255),w,b
  4680  001B82  B0D8               	btfsc	status,0,c
  4681  001B84  EFC6  F00D         	goto	u1661
  4682  001B88  EFC8  F00D         	goto	u1660
  4683  001B8C                     u1661:
  4684  001B8C  EFCE  F00D         	goto	l1090
  4685  001B90                     u1660:
  4686  001B90                     
  4687                           ; BSR set to: 0
  4688  001B90  0E00               	movlw	0
  4689  001B92  6E30               	movwf	(xtoa@p+1)^0,c
  4690  001B94  0E01               	movlw	1
  4691  001B96  6E2F               	movwf	xtoa@p^0,c
  4692  001B98  EFD2  F00D         	goto	l1092
  4693  001B9C                     l1090:
  4694                           
  4695                           ; BSR set to: 0
  4696  001B9C  C0C8  F02F         	movff	_prec,xtoa@p
  4697  001BA0  C0C9  F030         	movff	_prec+1,xtoa@p+1
  4698  001BA4                     l1092:
  4699                           
  4700                           ; BSR set to: 0
  4701                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 655:     w = widt
      +                          h;
  4702  001BA4  C0C6  F031         	movff	_width,xtoa@w
  4703  001BA8  C0C7  F032         	movff	_width+1,xtoa@w+1
  4704                           
  4705                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 656:     if (flag
      +                          s & (1 << 4)) {
  4706  001BAC  A9CA               	btfss	_flags& (0+255),4,b
  4707  001BAE  EFDB  F00D         	goto	u1671
  4708  001BB2  EFDD  F00D         	goto	u1670
  4709  001BB6                     u1671:
  4710  001BB6  EFE1  F00D         	goto	l2307
  4711  001BBA                     u1670:
  4712  001BBA                     
  4713                           ; BSR set to: 0
  4714                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 657:         w -=
      +                           2;
  4715  001BBA  0EFE               	movlw	254
  4716  001BBC  2631               	addwf	xtoa@w^0,f,c
  4717  001BBE  0EFF               	movlw	255
  4718  001BC0  2232               	addwfc	(xtoa@w+1)^0,f,c
  4719  001BC2                     l2307:
  4720                           
  4721                           ; BSR set to: 0
  4722                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 661:     n = d;
  4723  001BC2  C01E  F033         	movff	xtoa@d,xtoa@n
  4724  001BC6  C01F  F034         	movff	xtoa@d+1,xtoa@n+1
  4725  001BCA  C020  F035         	movff	xtoa@d+2,xtoa@n+2
  4726  001BCE  C021  F036         	movff	xtoa@d+3,xtoa@n+3
  4727  001BD2  C022  F037         	movff	xtoa@d+4,xtoa@n+4
  4728  001BD6  C023  F038         	movff	xtoa@d+5,xtoa@n+5
  4729  001BDA  C024  F039         	movff	xtoa@d+6,xtoa@n+6
  4730  001BDE  C025  F03A         	movff	xtoa@d+7,xtoa@n+7
  4731  001BE2                     
  4732                           ; BSR set to: 0
  4733                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 662:     i = size
      +                          of(dbuf) - 1;
  4734  001BE2  0E00               	movlw	0
  4735  001BE4  6E3C               	movwf	(xtoa@i+1)^0,c
  4736  001BE6  0E1F               	movlw	31
  4737  001BE8  6E3B               	movwf	xtoa@i^0,c
  4738  001BEA                     
  4739                           ; BSR set to: 0
  4740                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 663:     dbuf[i] 
      +                          = '\0';
  4741  001BEA  0E00               	movlw	0
  4742  001BEC  0103               	movlb	3	; () banked
  4743  001BEE  6F1F               	movwf	(_dbuf+31)& (0+255),b
  4744                           
  4745                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4746  001BF0  EF93  F00E         	goto	l2343
  4747  001BF4                     l2313:
  4748                           
  4749                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 665:         --i;
  4750  001BF4  063B               	decf	xtoa@i^0,f,c
  4751  001BF6  A0D8               	btfss	status,0,c
  4752  001BF8  063C               	decf	(xtoa@i+1)^0,f,c
  4753  001BFA                     
  4754                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 666:         c = 
      +                          n & 0x0f;
  4755  001BFA  0E0F               	movlw	15
  4756  001BFC  1433               	andwf	xtoa@n^0,w,c
  4757  001BFE  6E3D               	movwf	xtoa@c^0,c
  4758  001C00  6A3E               	clrf	(xtoa@c+1)^0,c
  4759  001C02                     
  4760                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 667:         c = 
      +                          (c < 10) ? (int)'0' + c : (int)'a' + (c - 10);
  4761  001C02  BE3E               	btfsc	(xtoa@c+1)^0,7,c
  4762  001C04  EF0D  F00E         	goto	u1681
  4763  001C08  503E               	movf	(xtoa@c+1)^0,w,c
  4764  001C0A  E109               	bnz	u1680
  4765  001C0C  0E0A               	movlw	10
  4766  001C0E  5C3D               	subwf	xtoa@c^0,w,c
  4767  001C10  A0D8               	btfss	status,0,c
  4768  001C12  EF0D  F00E         	goto	u1681
  4769  001C16  EF0F  F00E         	goto	u1680
  4770  001C1A                     u1681:
  4771  001C1A  EF17  F00E         	goto	l2321
  4772  001C1E                     u1680:
  4773  001C1E  0E57               	movlw	87
  4774  001C20  243D               	addwf	xtoa@c^0,w,c
  4775  001C22  6E3D               	movwf	xtoa@c^0,c
  4776  001C24  0E00               	movlw	0
  4777  001C26  203E               	addwfc	(xtoa@c+1)^0,w,c
  4778  001C28  6E3E               	movwf	(xtoa@c+1)^0,c
  4779  001C2A  EF1D  F00E         	goto	l2325
  4780  001C2E                     l2321:
  4781  001C2E  0E30               	movlw	48
  4782  001C30  243D               	addwf	xtoa@c^0,w,c
  4783  001C32  6E3D               	movwf	xtoa@c^0,c
  4784  001C34  0E00               	movlw	0
  4785  001C36  203E               	addwfc	(xtoa@c+1)^0,w,c
  4786  001C38  6E3E               	movwf	(xtoa@c+1)^0,c
  4787  001C3A                     l2325:
  4788  001C3A  0EBF               	movlw	191
  4789  001C3C  6E27               	movwf	??_xtoa^0,c
  4790  001C3E  0EFF               	movlw	255
  4791  001C40  6E28               	movwf	(??_xtoa+1)^0,c
  4792  001C42  5026               	movf	xtoa@x^0,w,c
  4793  001C44  6E29               	movwf	(??_xtoa+2)^0,c
  4794  001C46  6A2A               	clrf	(??_xtoa+3)^0,c
  4795  001C48  5027               	movf	??_xtoa^0,w,c
  4796  001C4A  2629               	addwf	(??_xtoa+2)^0,f,c
  4797  001C4C  5028               	movf	(??_xtoa+1)^0,w,c
  4798  001C4E  222A               	addwfc	(??_xtoa+3)^0,f,c
  4799  001C50  502A               	movf	(??_xtoa+3)^0,w,c
  4800  001C52  E107               	bnz	u1691
  4801  001C54  0E1A               	movlw	26
  4802  001C56  5C29               	subwf	(??_xtoa+2)^0,w,c
  4803  001C58  B0D8               	btfsc	status,0,c
  4804  001C5A  EF31  F00E         	goto	u1691
  4805  001C5E  EF33  F00E         	goto	u1690
  4806  001C62                     u1691:
  4807  001C62  EF56  F00E         	goto	l2335
  4808  001C66                     u1690:
  4809  001C66  0E9F               	movlw	159
  4810  001C68  6E27               	movwf	??_xtoa^0,c
  4811  001C6A  0EFF               	movlw	255
  4812  001C6C  6E28               	movwf	(??_xtoa+1)^0,c
  4813  001C6E  0E20               	movlw	32
  4814  001C70  103D               	iorwf	xtoa@c^0,w,c
  4815  001C72  6E29               	movwf	(??_xtoa+2)^0,c
  4816  001C74  0E00               	movlw	0
  4817  001C76  103E               	iorwf	(xtoa@c+1)^0,w,c
  4818  001C78  6E2A               	movwf	(??_xtoa+3)^0,c
  4819  001C7A  5027               	movf	??_xtoa^0,w,c
  4820  001C7C  2629               	addwf	(??_xtoa+2)^0,f,c
  4821  001C7E  5028               	movf	(??_xtoa+1)^0,w,c
  4822  001C80  222A               	addwfc	(??_xtoa+3)^0,f,c
  4823  001C82  502A               	movf	(??_xtoa+3)^0,w,c
  4824  001C84  E107               	bnz	u1701
  4825  001C86  0E1A               	movlw	26
  4826  001C88  5C29               	subwf	(??_xtoa+2)^0,w,c
  4827  001C8A  B0D8               	btfsc	status,0,c
  4828  001C8C  EF4A  F00E         	goto	u1701
  4829  001C90  EF4C  F00E         	goto	u1700
  4830  001C94                     u1701:
  4831  001C94  EF56  F00E         	goto	l2335
  4832  001C98                     u1700:
  4833  001C98                     
  4834                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 669:             
      +                          c = toupper(c);
  4835  001C98  C03D  F007         	movff	xtoa@c,toupper@c
  4836  001C9C  C03E  F008         	movff	xtoa@c+1,toupper@c+1
  4837  001CA0  ECAD  F016         	call	_toupper	;wreg free
  4838  001CA4  C007  F03D         	movff	?_toupper,xtoa@c
  4839  001CA8  C008  F03E         	movff	?_toupper+1,xtoa@c+1
  4840  001CAC                     l2335:
  4841                           
  4842                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 671:         dbuf
      +                          [i] = (char)c;
  4843  001CAC  0E00               	movlw	low _dbuf
  4844  001CAE  243B               	addwf	xtoa@i^0,w,c
  4845  001CB0  6ED9               	movwf	fsr2l,c
  4846  001CB2  0E03               	movlw	high _dbuf
  4847  001CB4  203C               	addwfc	(xtoa@i+1)^0,w,c
  4848  001CB6  6EDA               	movwf	fsr2h,c
  4849  001CB8  C03D  FFDF         	movff	xtoa@c,indf2
  4850  001CBC                     
  4851                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 672:         --p;
  4852  001CBC  062F               	decf	xtoa@p^0,f,c
  4853  001CBE  A0D8               	btfss	status,0,c
  4854  001CC0  0630               	decf	(xtoa@p+1)^0,f,c
  4855  001CC2                     
  4856                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 673:         --w;
  4857  001CC2  0631               	decf	xtoa@w^0,f,c
  4858  001CC4  A0D8               	btfss	status,0,c
  4859  001CC6  0632               	decf	(xtoa@w+1)^0,f,c
  4860  001CC8                     
  4861                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 674:         n = 
      +                          n >> 4;
  4862  001CC8  C033  F027         	movff	xtoa@n,??_xtoa
  4863  001CCC  C034  F028         	movff	xtoa@n+1,??_xtoa+1
  4864  001CD0  C035  F029         	movff	xtoa@n+2,??_xtoa+2
  4865  001CD4  C036  F02A         	movff	xtoa@n+3,??_xtoa+3
  4866  001CD8  C037  F02B         	movff	xtoa@n+4,??_xtoa+4
  4867  001CDC  C038  F02C         	movff	xtoa@n+5,??_xtoa+5
  4868  001CE0  C039  F02D         	movff	xtoa@n+6,??_xtoa+6
  4869  001CE4  C03A  F02E         	movff	xtoa@n+7,??_xtoa+7
  4870  001CE8  0E05               	movlw	5
  4871  001CEA  EF80  F00E         	goto	u1710
  4872  001CEE                     u1715:
  4873  001CEE  90D8               	bcf	status,0,c
  4874  001CF0  322E               	rrcf	(??_xtoa+7)^0,f,c
  4875  001CF2  322D               	rrcf	(??_xtoa+6)^0,f,c
  4876  001CF4  322C               	rrcf	(??_xtoa+5)^0,f,c
  4877  001CF6  322B               	rrcf	(??_xtoa+4)^0,f,c
  4878  001CF8  322A               	rrcf	(??_xtoa+3)^0,f,c
  4879  001CFA  3229               	rrcf	(??_xtoa+2)^0,f,c
  4880  001CFC  3228               	rrcf	(??_xtoa+1)^0,f,c
  4881  001CFE  3227               	rrcf	??_xtoa^0,f,c
  4882  001D00                     u1710:
  4883  001D00  2EE8               	decfsz	wreg,f,c
  4884  001D02  EF77  F00E         	goto	u1715
  4885  001D06  C027  F033         	movff	??_xtoa,xtoa@n
  4886  001D0A  C028  F034         	movff	??_xtoa+1,xtoa@n+1
  4887  001D0E  C029  F035         	movff	??_xtoa+2,xtoa@n+2
  4888  001D12  C02A  F036         	movff	??_xtoa+3,xtoa@n+3
  4889  001D16  C02B  F037         	movff	??_xtoa+4,xtoa@n+4
  4890  001D1A  C02C  F038         	movff	??_xtoa+5,xtoa@n+5
  4891  001D1E  C02D  F039         	movff	??_xtoa+6,xtoa@n+6
  4892  001D22  C02E  F03A         	movff	??_xtoa+7,xtoa@n+7
  4893  001D26                     l2343:
  4894                           
  4895                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4896  001D26  BE3C               	btfsc	(xtoa@i+1)^0,7,c
  4897  001D28  EF9F  F00E         	goto	u1721
  4898  001D2C  503C               	movf	(xtoa@i+1)^0,w,c
  4899  001D2E  E109               	bnz	u1720
  4900  001D30  0E02               	movlw	2
  4901  001D32  5C3B               	subwf	xtoa@i^0,w,c
  4902  001D34  A0D8               	btfss	status,0,c
  4903  001D36  EF9F  F00E         	goto	u1721
  4904  001D3A  EFA1  F00E         	goto	u1720
  4905  001D3E                     u1721:
  4906  001D3E  EFD2  F00E         	goto	l1109
  4907  001D42                     u1720:
  4908  001D42  5033               	movf	xtoa@n^0,w,c
  4909  001D44  1034               	iorwf	(xtoa@n+1)^0,w,c
  4910  001D46  1035               	iorwf	(xtoa@n+2)^0,w,c
  4911  001D48  1036               	iorwf	(xtoa@n+3)^0,w,c
  4912  001D4A  1037               	iorwf	(xtoa@n+4)^0,w,c
  4913  001D4C  1038               	iorwf	(xtoa@n+5)^0,w,c
  4914  001D4E  1039               	iorwf	(xtoa@n+6)^0,w,c
  4915  001D50  103A               	iorwf	(xtoa@n+7)^0,w,c
  4916  001D52  A4D8               	btfss	status,2,c
  4917  001D54  EFAE  F00E         	goto	u1731
  4918  001D58  EFB0  F00E         	goto	u1730
  4919  001D5C                     u1731:
  4920  001D5C  EFFA  F00D         	goto	l2313
  4921  001D60                     u1730:
  4922  001D60  BE30               	btfsc	(xtoa@p+1)^0,7,c
  4923  001D62  EFBD  F00E         	goto	u1740
  4924  001D66  5030               	movf	(xtoa@p+1)^0,w,c
  4925  001D68  E106               	bnz	u1741
  4926  001D6A  042F               	decf	xtoa@p^0,w,c
  4927  001D6C  B0D8               	btfsc	status,0,c
  4928  001D6E  EFBB  F00E         	goto	u1741
  4929  001D72  EFBD  F00E         	goto	u1740
  4930  001D76                     u1741:
  4931  001D76  EFFA  F00D         	goto	l2313
  4932  001D7A                     u1740:
  4933  001D7A  BE32               	btfsc	(xtoa@w+1)^0,7,c
  4934  001D7C  EFC8  F00E         	goto	u1751
  4935  001D80  5032               	movf	(xtoa@w+1)^0,w,c
  4936  001D82  E108               	bnz	u1750
  4937  001D84  0431               	decf	xtoa@w^0,w,c
  4938  001D86  A0D8               	btfss	status,0,c
  4939  001D88  EFC8  F00E         	goto	u1751
  4940  001D8C  EFCA  F00E         	goto	u1750
  4941  001D90                     u1751:
  4942  001D90  EFD2  F00E         	goto	l1109
  4943  001D94                     u1750:
  4944  001D94  0100               	movlb	0	; () banked
  4945  001D96  B3CA               	btfsc	_flags& (0+255),1,b
  4946  001D98  EFD0  F00E         	goto	u1761
  4947  001D9C  EFD2  F00E         	goto	u1760
  4948  001DA0                     u1761:
  4949  001DA0  EFFA  F00D         	goto	l2313
  4950  001DA4                     u1760:
  4951  001DA4                     l1109:
  4952                           
  4953                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 678:     if (flag
      +                          s & (1 << 4)) {
  4954  001DA4  0100               	movlb	0	; () banked
  4955  001DA6  A9CA               	btfss	_flags& (0+255),4,b
  4956  001DA8  EFD8  F00E         	goto	u1771
  4957  001DAC  EFDA  F00E         	goto	u1770
  4958  001DB0                     u1771:
  4959  001DB0  EFF0  F00E         	goto	l2359
  4960  001DB4                     u1770:
  4961  001DB4                     
  4962                           ; BSR set to: 0
  4963                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 679:         --i;
  4964  001DB4  063B               	decf	xtoa@i^0,f,c
  4965  001DB6  A0D8               	btfss	status,0,c
  4966  001DB8  063C               	decf	(xtoa@i+1)^0,f,c
  4967  001DBA                     
  4968                           ; BSR set to: 0
  4969                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 680:         dbuf
      +                          [i] = x;
  4970  001DBA  0E00               	movlw	low _dbuf
  4971  001DBC  243B               	addwf	xtoa@i^0,w,c
  4972  001DBE  6ED9               	movwf	fsr2l,c
  4973  001DC0  0E03               	movlw	high _dbuf
  4974  001DC2  203C               	addwfc	(xtoa@i+1)^0,w,c
  4975  001DC4  6EDA               	movwf	fsr2h,c
  4976  001DC6  C026  FFDF         	movff	xtoa@x,indf2
  4977  001DCA                     
  4978                           ; BSR set to: 0
  4979                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 681:         --i;
  4980  001DCA  063B               	decf	xtoa@i^0,f,c
  4981  001DCC  A0D8               	btfss	status,0,c
  4982  001DCE  063C               	decf	(xtoa@i+1)^0,f,c
  4983                           
  4984                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 682:         dbuf
      +                          [i] = '0';
  4985  001DD0  0E00               	movlw	low _dbuf
  4986  001DD2  243B               	addwf	xtoa@i^0,w,c
  4987  001DD4  6ED9               	movwf	fsr2l,c
  4988  001DD6  0E03               	movlw	high _dbuf
  4989  001DD8  203C               	addwfc	(xtoa@i+1)^0,w,c
  4990  001DDA  6EDA               	movwf	fsr2h,c
  4991  001DDC  0E30               	movlw	48
  4992  001DDE  6EDF               	movwf	indf2,c
  4993  001DE0                     l2359:
  4994                           
  4995                           ; BSR set to: 0
  4996                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 686:     return p
      +                          ad(fp, &dbuf[i], w);
  4997  001DE0  C01C  F011         	movff	xtoa@fp,pad@fp
  4998  001DE4  C01D  F012         	movff	xtoa@fp+1,pad@fp+1
  4999  001DE8  0E00               	movlw	low _dbuf
  5000  001DEA  243B               	addwf	xtoa@i^0,w,c
  5001  001DEC  6E13               	movwf	pad@buf^0,c
  5002  001DEE  0E03               	movlw	high _dbuf
  5003  001DF0  203C               	addwfc	(xtoa@i+1)^0,w,c
  5004  001DF2  6E14               	movwf	(pad@buf+1)^0,c
  5005  001DF4  C031  F015         	movff	xtoa@w,pad@p
  5006  001DF8  C032  F016         	movff	xtoa@w+1,pad@p+1
  5007  001DFC  EC05  F015         	call	_pad	;wreg free
  5008  001E00  C011  F01C         	movff	?_pad,?_xtoa
  5009  001E04  C012  F01D         	movff	?_pad+1,?_xtoa+1
  5010  001E08  0012               	return		;funcret
  5011  001E0A                     __end_of_xtoa:
  5012                           	callstack 0
  5013                           
  5014 ;; *************** function _toupper *****************
  5015 ;; Defined at:
  5016 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\toupper.c"
  5017 ;; Parameters:    Size  Location     Type
  5018 ;;  c               2    6[COMRAM] int 
  5019 ;; Auto vars:     Size  Location     Type
  5020 ;;		None
  5021 ;; Return value:  Size  Location     Type
  5022 ;;                  2    6[COMRAM] int 
  5023 ;; Registers used:
  5024 ;;		wreg, status,2, status,0
  5025 ;; Tracked objects:
  5026 ;;		On entry : 0/0
  5027 ;;		On exit  : 0/0
  5028 ;;		Unchanged: 0/0
  5029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5030 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5032 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5033 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5034 ;;Total ram usage:        6 bytes
  5035 ;; Hardware stack levels used: 1
  5036 ;; Hardware stack levels required when called: 2
  5037 ;; This function calls:
  5038 ;;		_islower
  5039 ;; This function is called by:
  5040 ;;		_xtoa
  5041 ;; This function uses a non-reentrant model
  5042 ;;
  5043                           
  5044                           	psect	text14
  5045  002D5A                     __ptext14:
  5046                           	callstack 0
  5047  002D5A                     _toupper:
  5048                           	callstack 24
  5049  002D5A  0E9F               	movlw	159
  5050  002D5C  6E09               	movwf	??_toupper^0,c
  5051  002D5E  0EFF               	movlw	255
  5052  002D60  6E0A               	movwf	(??_toupper+1)^0,c
  5053  002D62  C007  F00B         	movff	toupper@c,??_toupper+2
  5054  002D66  C008  F00C         	movff	toupper@c+1,??_toupper+3
  5055  002D6A  5009               	movf	??_toupper^0,w,c
  5056  002D6C  260B               	addwf	(??_toupper+2)^0,f,c
  5057  002D6E  500A               	movf	(??_toupper+1)^0,w,c
  5058  002D70  220C               	addwfc	(??_toupper+3)^0,f,c
  5059  002D72  500C               	movf	(??_toupper+3)^0,w,c
  5060  002D74  E107               	bnz	u1571
  5061  002D76  0E1A               	movlw	26
  5062  002D78  5C0B               	subwf	(??_toupper+2)^0,w,c
  5063  002D7A  B0D8               	btfsc	status,0,c
  5064  002D7C  EFC2  F016         	goto	u1571
  5065  002D80  EFC4  F016         	goto	u1570
  5066  002D84                     u1571:
  5067  002D84  EFCA  F016         	goto	l1185
  5068  002D88                     u1570:
  5069  002D88  0E5F               	movlw	95
  5070  002D8A  1407               	andwf	toupper@c^0,w,c
  5071  002D8C  6E07               	movwf	?_toupper^0,c
  5072  002D8E  6A08               	clrf	(?_toupper+1)^0,c
  5073  002D90  EFCE  F016         	goto	l1188
  5074  002D94                     l1185:
  5075  002D94  C007  F007         	movff	toupper@c,?_toupper
  5076  002D98  C008  F008         	movff	toupper@c+1,?_toupper+1
  5077  002D9C                     l1188:
  5078  002D9C  0012               	return		;funcret
  5079  002D9E                     __end_of_toupper:
  5080                           	callstack 0
  5081                           
  5082 ;; *************** function _islower *****************
  5083 ;; Defined at:
  5084 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\islower.c"
  5085 ;; Parameters:    Size  Location     Type
  5086 ;;  c               2    0[COMRAM] int 
  5087 ;; Auto vars:     Size  Location     Type
  5088 ;;		None
  5089 ;; Return value:  Size  Location     Type
  5090 ;;                  2    0[COMRAM] int 
  5091 ;; Registers used:
  5092 ;;		wreg, status,2, status,0
  5093 ;; Tracked objects:
  5094 ;;		On entry : 0/0
  5095 ;;		On exit  : 0/0
  5096 ;;		Unchanged: 0/0
  5097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5098 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5100 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5101 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5102 ;;Total ram usage:        6 bytes
  5103 ;; Hardware stack levels used: 1
  5104 ;; Hardware stack levels required when called: 1
  5105 ;; This function calls:
  5106 ;;		Nothing
  5107 ;; This function is called by:
  5108 ;;		_toupper
  5109 ;; This function uses a non-reentrant model
  5110 ;;
  5111                           
  5112                           	psect	text15
  5113  002E1E                     __ptext15:
  5114                           	callstack 0
  5115  002E1E                     _islower:
  5116                           	callstack 24
  5117  002E1E  0E9F               	movlw	159
  5118  002E20  6E03               	movwf	??_islower^0,c
  5119  002E22  0EFF               	movlw	255
  5120  002E24  6E04               	movwf	(??_islower+1)^0,c
  5121  002E26  C001  F005         	movff	islower@c,??_islower+2
  5122  002E2A  C002  F006         	movff	islower@c+1,??_islower+3
  5123  002E2E  5003               	movf	??_islower^0,w,c
  5124  002E30  2605               	addwf	(??_islower+2)^0,f,c
  5125  002E32  5004               	movf	(??_islower+1)^0,w,c
  5126  002E34  2206               	addwfc	(??_islower+3)^0,f,c
  5127  002E36  5006               	movf	(??_islower+3)^0,w,c
  5128  002E38  E10A               	bnz	u1400
  5129  002E3A  0E1A               	movlw	26
  5130  002E3C  5C05               	subwf	(??_islower+2)^0,w,c
  5131  002E3E  A0D8               	btfss	status,0,c
  5132  002E40  EF24  F017         	goto	u1401
  5133  002E44  EF27  F017         	goto	u1400
  5134  002E48                     u1401:
  5135  002E48  0E01               	movlw	1
  5136  002E4A  EF28  F017         	goto	u1410
  5137  002E4E                     u1400:
  5138  002E4E  0E00               	movlw	0
  5139  002E50                     u1410:
  5140  002E50  6E01               	movwf	?_islower^0,c
  5141  002E52  6A02               	clrf	(?_islower+1)^0,c
  5142  002E54  0012               	return		;funcret
  5143  002E56                     __end_of_islower:
  5144                           	callstack 0
  5145                           
  5146 ;; *************** function _isupper *****************
  5147 ;; Defined at:
  5148 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isupper.c"
  5149 ;; Parameters:    Size  Location     Type
  5150 ;;  c               2    0[COMRAM] int 
  5151 ;; Auto vars:     Size  Location     Type
  5152 ;;		None
  5153 ;; Return value:  Size  Location     Type
  5154 ;;                  2    0[COMRAM] int 
  5155 ;; Registers used:
  5156 ;;		wreg, status,2, status,0
  5157 ;; Tracked objects:
  5158 ;;		On entry : 0/0
  5159 ;;		On exit  : 0/0
  5160 ;;		Unchanged: 0/0
  5161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5162 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5164 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5165 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5166 ;;Total ram usage:        6 bytes
  5167 ;; Hardware stack levels used: 1
  5168 ;; Hardware stack levels required when called: 1
  5169 ;; This function calls:
  5170 ;;		Nothing
  5171 ;; This function is called by:
  5172 ;;		_xtoa
  5173 ;; This function uses a non-reentrant model
  5174 ;;
  5175                           
  5176                           	psect	text16
  5177  002E56                     __ptext16:
  5178                           	callstack 0
  5179  002E56                     _isupper:
  5180                           	callstack 25
  5181  002E56  0EBF               	movlw	191
  5182  002E58  6E03               	movwf	??_isupper^0,c
  5183  002E5A  0EFF               	movlw	255
  5184  002E5C  6E04               	movwf	(??_isupper+1)^0,c
  5185  002E5E  C001  F005         	movff	isupper@c,??_isupper+2
  5186  002E62  C002  F006         	movff	isupper@c+1,??_isupper+3
  5187  002E66  5003               	movf	??_isupper^0,w,c
  5188  002E68  2605               	addwf	(??_isupper+2)^0,f,c
  5189  002E6A  5004               	movf	(??_isupper+1)^0,w,c
  5190  002E6C  2206               	addwfc	(??_isupper+3)^0,f,c
  5191  002E6E  5006               	movf	(??_isupper+3)^0,w,c
  5192  002E70  E10A               	bnz	u1530
  5193  002E72  0E1A               	movlw	26
  5194  002E74  5C05               	subwf	(??_isupper+2)^0,w,c
  5195  002E76  A0D8               	btfss	status,0,c
  5196  002E78  EF40  F017         	goto	u1531
  5197  002E7C  EF43  F017         	goto	u1530
  5198  002E80                     u1531:
  5199  002E80  0E01               	movlw	1
  5200  002E82  EF44  F017         	goto	u1540
  5201  002E86                     u1530:
  5202  002E86  0E00               	movlw	0
  5203  002E88                     u1540:
  5204  002E88  6E01               	movwf	?_isupper^0,c
  5205  002E8A  6A02               	clrf	(?_isupper+1)^0,c
  5206  002E8C  0012               	return		;funcret
  5207  002E8E                     __end_of_isupper:
  5208                           	callstack 0
  5209                           
  5210 ;; *************** function _isalpha *****************
  5211 ;; Defined at:
  5212 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isalpha.c"
  5213 ;; Parameters:    Size  Location     Type
  5214 ;;  c               2    0[COMRAM] int 
  5215 ;; Auto vars:     Size  Location     Type
  5216 ;;		None
  5217 ;; Return value:  Size  Location     Type
  5218 ;;                  2    0[COMRAM] int 
  5219 ;; Registers used:
  5220 ;;		wreg, status,2, status,0
  5221 ;; Tracked objects:
  5222 ;;		On entry : 0/0
  5223 ;;		On exit  : 0/0
  5224 ;;		Unchanged: 0/0
  5225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5226 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5228 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5229 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5230 ;;Total ram usage:        6 bytes
  5231 ;; Hardware stack levels used: 1
  5232 ;; Hardware stack levels required when called: 1
  5233 ;; This function calls:
  5234 ;;		Nothing
  5235 ;; This function is called by:
  5236 ;;		_xtoa
  5237 ;; This function uses a non-reentrant model
  5238 ;;
  5239                           
  5240                           	psect	text17
  5241  002DE2                     __ptext17:
  5242                           	callstack 0
  5243  002DE2                     _isalpha:
  5244                           	callstack 25
  5245  002DE2  0E9F               	movlw	159
  5246  002DE4  6E03               	movwf	??_isalpha^0,c
  5247  002DE6  0EFF               	movlw	255
  5248  002DE8  6E04               	movwf	(??_isalpha+1)^0,c
  5249  002DEA  0E20               	movlw	32
  5250  002DEC  1001               	iorwf	isalpha@c^0,w,c
  5251  002DEE  6E05               	movwf	(??_isalpha+2)^0,c
  5252  002DF0  0E00               	movlw	0
  5253  002DF2  1002               	iorwf	(isalpha@c+1)^0,w,c
  5254  002DF4  6E06               	movwf	(??_isalpha+3)^0,c
  5255  002DF6  5003               	movf	??_isalpha^0,w,c
  5256  002DF8  2605               	addwf	(??_isalpha+2)^0,f,c
  5257  002DFA  5004               	movf	(??_isalpha+1)^0,w,c
  5258  002DFC  2206               	addwfc	(??_isalpha+3)^0,f,c
  5259  002DFE  5006               	movf	(??_isalpha+3)^0,w,c
  5260  002E00  E10A               	bnz	u1550
  5261  002E02  0E1A               	movlw	26
  5262  002E04  5C05               	subwf	(??_isalpha+2)^0,w,c
  5263  002E06  A0D8               	btfss	status,0,c
  5264  002E08  EF08  F017         	goto	u1551
  5265  002E0C  EF0B  F017         	goto	u1550
  5266  002E10                     u1551:
  5267  002E10  0E01               	movlw	1
  5268  002E12  EF0C  F017         	goto	u1560
  5269  002E16                     u1550:
  5270  002E16  0E00               	movlw	0
  5271  002E18                     u1560:
  5272  002E18  6E01               	movwf	?_isalpha^0,c
  5273  002E1A  6A02               	clrf	(?_isalpha+1)^0,c
  5274  002E1C  0012               	return		;funcret
  5275  002E1E                     __end_of_isalpha:
  5276                           	callstack 0
  5277                           
  5278 ;; *************** function _utoa *****************
  5279 ;; Defined at:
  5280 ;;		line 615 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  5281 ;; Parameters:    Size  Location     Type
  5282 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  5283 ;;		 -> sprintf@f(11), 
  5284 ;;  d               8   29[COMRAM] unsigned long long 
  5285 ;; Auto vars:     Size  Location     Type
  5286 ;;  n               8   49[COMRAM] unsigned long long 
  5287 ;;  i               2   57[COMRAM] int 
  5288 ;;  w               2   47[COMRAM] int 
  5289 ;;  p               2   45[COMRAM] int 
  5290 ;; Return value:  Size  Location     Type
  5291 ;;                  2   27[COMRAM] int 
  5292 ;; Registers used:
  5293 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5294 ;; Tracked objects:
  5295 ;;		On entry : 0/0
  5296 ;;		On exit  : 0/0
  5297 ;;		Unchanged: 0/0
  5298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5299 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5300 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5301 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5302 ;;      Totals:        32       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5303 ;;Total ram usage:       32 bytes
  5304 ;; Hardware stack levels used: 1
  5305 ;; Hardware stack levels required when called: 5
  5306 ;; This function calls:
  5307 ;;		___lodiv
  5308 ;;		___lomod
  5309 ;;		_pad
  5310 ;; This function is called by:
  5311 ;;		_vfpfcnvrt
  5312 ;; This function uses a non-reentrant model
  5313 ;;
  5314                           
  5315                           	psect	text18
  5316  001E0A                     __ptext18:
  5317                           	callstack 0
  5318  001E0A                     _utoa:
  5319                           	callstack 22
  5320  001E0A                     
  5321                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 615: static int u
      +                          toa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99
      +                          \common\doprnt.c: 616: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\dop
      +                          rnt.c: 617:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common
      +                          \doprnt.c: 618:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.36\pic\sourc
      +                          es\c99\common\doprnt.c: 621:     if (!(prec < 0)) {
  5322  001E0A  0100               	movlb	0	; () banked
  5323  001E0C  BFC9               	btfsc	(_prec+1)& (0+255),7,b
  5324  001E0E  EF0B  F00F         	goto	u1581
  5325  001E12  EF0D  F00F         	goto	u1580
  5326  001E16                     u1581:
  5327  001E16  EF0E  F00F         	goto	l2265
  5328  001E1A                     u1580:
  5329  001E1A                     
  5330                           ; BSR set to: 0
  5331                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 622:         flag
      +                          s &= ~(1 << 1);
  5332  001E1A  93CA               	bcf	_flags& (0+255),1,b
  5333  001E1C                     l2265:
  5334                           
  5335                           ; BSR set to: 0
  5336                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 624:     p = (0 <
      +                           prec) ? prec : 1;
  5337  001E1C  BFC9               	btfsc	(_prec+1)& (0+255),7,b
  5338  001E1E  EF1B  F00F         	goto	u1590
  5339  001E22  51C9               	movf	(_prec+1)& (0+255),w,b
  5340  001E24  E106               	bnz	u1591
  5341  001E26  05C8               	decf	_prec& (0+255),w,b
  5342  001E28  B0D8               	btfsc	status,0,c
  5343  001E2A  EF19  F00F         	goto	u1591
  5344  001E2E  EF1B  F00F         	goto	u1590
  5345  001E32                     u1591:
  5346  001E32  EF21  F00F         	goto	l1075
  5347  001E36                     u1590:
  5348  001E36                     
  5349                           ; BSR set to: 0
  5350  001E36  0E00               	movlw	0
  5351  001E38  6E2F               	movwf	(utoa@p+1)^0,c
  5352  001E3A  0E01               	movlw	1
  5353  001E3C  6E2E               	movwf	utoa@p^0,c
  5354  001E3E  EF25  F00F         	goto	l1077
  5355  001E42                     l1075:
  5356                           
  5357                           ; BSR set to: 0
  5358  001E42  C0C8  F02E         	movff	_prec,utoa@p
  5359  001E46  C0C9  F02F         	movff	_prec+1,utoa@p+1
  5360  001E4A                     l1077:
  5361                           
  5362                           ; BSR set to: 0
  5363                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 625:     w = widt
      +                          h;
  5364  001E4A  C0C6  F030         	movff	_width,utoa@w
  5365  001E4E  C0C7  F031         	movff	_width+1,utoa@w+1
  5366                           
  5367                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 628:     n = d;
  5368  001E52  C01E  F032         	movff	utoa@d,utoa@n
  5369  001E56  C01F  F033         	movff	utoa@d+1,utoa@n+1
  5370  001E5A  C020  F034         	movff	utoa@d+2,utoa@n+2
  5371  001E5E  C021  F035         	movff	utoa@d+3,utoa@n+3
  5372  001E62  C022  F036         	movff	utoa@d+4,utoa@n+4
  5373  001E66  C023  F037         	movff	utoa@d+5,utoa@n+5
  5374  001E6A  C024  F038         	movff	utoa@d+6,utoa@n+6
  5375  001E6E  C025  F039         	movff	utoa@d+7,utoa@n+7
  5376  001E72                     
  5377                           ; BSR set to: 0
  5378                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 629:     i = size
      +                          of(dbuf) - 1;
  5379  001E72  0E00               	movlw	0
  5380  001E74  6E3B               	movwf	(utoa@i+1)^0,c
  5381  001E76  0E1F               	movlw	31
  5382  001E78  6E3A               	movwf	utoa@i^0,c
  5383  001E7A                     
  5384                           ; BSR set to: 0
  5385                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 630:     dbuf[i] 
      +                          = '\0';
  5386  001E7A  0E00               	movlw	0
  5387  001E7C  0103               	movlb	3	; () banked
  5388  001E7E  6F1F               	movwf	(_dbuf+31)& (0+255),b
  5389                           
  5390                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5391  001E80  EFB8  F00F         	goto	l2283
  5392  001E84                     l2273:
  5393                           
  5394                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 632:         --i;
  5395  001E84  063A               	decf	utoa@i^0,f,c
  5396  001E86  A0D8               	btfss	status,0,c
  5397  001E88  063B               	decf	(utoa@i+1)^0,f,c
  5398  001E8A                     
  5399                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 633:         dbuf
      +                          [i] = '0' + (n % 10);
  5400  001E8A  0E00               	movlw	low _dbuf
  5401  001E8C  243A               	addwf	utoa@i^0,w,c
  5402  001E8E  6ED9               	movwf	fsr2l,c
  5403  001E90  0E03               	movlw	high _dbuf
  5404  001E92  203B               	addwfc	(utoa@i+1)^0,w,c
  5405  001E94  6EDA               	movwf	fsr2h,c
  5406  001E96  C032  F001         	movff	utoa@n,___lomod@dividend
  5407  001E9A  C033  F002         	movff	utoa@n+1,___lomod@dividend+1
  5408  001E9E  C034  F003         	movff	utoa@n+2,___lomod@dividend+2
  5409  001EA2  C035  F004         	movff	utoa@n+3,___lomod@dividend+3
  5410  001EA6  C036  F005         	movff	utoa@n+4,___lomod@dividend+4
  5411  001EAA  C037  F006         	movff	utoa@n+5,___lomod@dividend+5
  5412  001EAE  C038  F007         	movff	utoa@n+6,___lomod@dividend+6
  5413  001EB2  C039  F008         	movff	utoa@n+7,___lomod@dividend+7
  5414  001EB6  0E0A               	movlw	10
  5415  001EB8  6E09               	movwf	___lomod@divisor^0,c
  5416  001EBA  0E00               	movlw	0
  5417  001EBC  6E0A               	movwf	(___lomod@divisor+1)^0,c
  5418  001EBE  0E00               	movlw	0
  5419  001EC0  6E0B               	movwf	(___lomod@divisor+2)^0,c
  5420  001EC2  0E00               	movlw	0
  5421  001EC4  6E0C               	movwf	(___lomod@divisor+3)^0,c
  5422  001EC6  0E00               	movlw	0
  5423  001EC8  6E0D               	movwf	(___lomod@divisor+4)^0,c
  5424  001ECA  0E00               	movlw	0
  5425  001ECC  6E0E               	movwf	(___lomod@divisor+5)^0,c
  5426  001ECE  0E00               	movlw	0
  5427  001ED0  6E0F               	movwf	(___lomod@divisor+6)^0,c
  5428  001ED2  0E00               	movlw	0
  5429  001ED4  6E10               	movwf	(___lomod@divisor+7)^0,c
  5430  001ED6  EC38  F014         	call	___lomod	;wreg free
  5431  001EDA  C001  F026         	movff	?___lomod,??_utoa
  5432  001EDE  C002  F027         	movff	?___lomod+1,??_utoa+1
  5433  001EE2  C003  F028         	movff	?___lomod+2,??_utoa+2
  5434  001EE6  C004  F029         	movff	?___lomod+3,??_utoa+3
  5435  001EEA  C005  F02A         	movff	?___lomod+4,??_utoa+4
  5436  001EEE  C006  F02B         	movff	?___lomod+5,??_utoa+5
  5437  001EF2  C007  F02C         	movff	?___lomod+6,??_utoa+6
  5438  001EF6  C008  F02D         	movff	?___lomod+7,??_utoa+7
  5439  001EFA  5026               	movf	??_utoa^0,w,c
  5440  001EFC  0F30               	addlw	48
  5441  001EFE  6EDF               	movwf	indf2,c
  5442  001F00                     
  5443                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 634:         --p;
  5444  001F00  062E               	decf	utoa@p^0,f,c
  5445  001F02  A0D8               	btfss	status,0,c
  5446  001F04  062F               	decf	(utoa@p+1)^0,f,c
  5447  001F06                     
  5448                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 635:         --w;
  5449  001F06  0630               	decf	utoa@w^0,f,c
  5450  001F08  A0D8               	btfss	status,0,c
  5451  001F0A  0631               	decf	(utoa@w+1)^0,f,c
  5452  001F0C                     
  5453                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 636:         n = 
      +                          n / 10;
  5454  001F0C  C032  F001         	movff	utoa@n,___lodiv@dividend
  5455  001F10  C033  F002         	movff	utoa@n+1,___lodiv@dividend+1
  5456  001F14  C034  F003         	movff	utoa@n+2,___lodiv@dividend+2
  5457  001F18  C035  F004         	movff	utoa@n+3,___lodiv@dividend+3
  5458  001F1C  C036  F005         	movff	utoa@n+4,___lodiv@dividend+4
  5459  001F20  C037  F006         	movff	utoa@n+5,___lodiv@dividend+5
  5460  001F24  C038  F007         	movff	utoa@n+6,___lodiv@dividend+6
  5461  001F28  C039  F008         	movff	utoa@n+7,___lodiv@dividend+7
  5462  001F2C  0E0A               	movlw	10
  5463  001F2E  6E09               	movwf	___lodiv@divisor^0,c
  5464  001F30  0E00               	movlw	0
  5465  001F32  6E0A               	movwf	(___lodiv@divisor+1)^0,c
  5466  001F34  0E00               	movlw	0
  5467  001F36  6E0B               	movwf	(___lodiv@divisor+2)^0,c
  5468  001F38  0E00               	movlw	0
  5469  001F3A  6E0C               	movwf	(___lodiv@divisor+3)^0,c
  5470  001F3C  0E00               	movlw	0
  5471  001F3E  6E0D               	movwf	(___lodiv@divisor+4)^0,c
  5472  001F40  0E00               	movlw	0
  5473  001F42  6E0E               	movwf	(___lodiv@divisor+5)^0,c
  5474  001F44  0E00               	movlw	0
  5475  001F46  6E0F               	movwf	(___lodiv@divisor+6)^0,c
  5476  001F48  0E00               	movlw	0
  5477  001F4A  6E10               	movwf	(___lodiv@divisor+7)^0,c
  5478  001F4C  EC51  F013         	call	___lodiv	;wreg free
  5479  001F50  C001  F032         	movff	?___lodiv,utoa@n
  5480  001F54  C002  F033         	movff	?___lodiv+1,utoa@n+1
  5481  001F58  C003  F034         	movff	?___lodiv+2,utoa@n+2
  5482  001F5C  C004  F035         	movff	?___lodiv+3,utoa@n+3
  5483  001F60  C005  F036         	movff	?___lodiv+4,utoa@n+4
  5484  001F64  C006  F037         	movff	?___lodiv+5,utoa@n+5
  5485  001F68  C007  F038         	movff	?___lodiv+6,utoa@n+6
  5486  001F6C  C008  F039         	movff	?___lodiv+7,utoa@n+7
  5487  001F70                     l2283:
  5488                           
  5489                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5490  001F70  503A               	movf	utoa@i^0,w,c
  5491  001F72  103B               	iorwf	(utoa@i+1)^0,w,c
  5492  001F74  B4D8               	btfsc	status,2,c
  5493  001F76  EFBF  F00F         	goto	u1601
  5494  001F7A  EFC1  F00F         	goto	u1600
  5495  001F7E                     u1601:
  5496  001F7E  EFF2  F00F         	goto	l2293
  5497  001F82                     u1600:
  5498  001F82  5032               	movf	utoa@n^0,w,c
  5499  001F84  1033               	iorwf	(utoa@n+1)^0,w,c
  5500  001F86  1034               	iorwf	(utoa@n+2)^0,w,c
  5501  001F88  1035               	iorwf	(utoa@n+3)^0,w,c
  5502  001F8A  1036               	iorwf	(utoa@n+4)^0,w,c
  5503  001F8C  1037               	iorwf	(utoa@n+5)^0,w,c
  5504  001F8E  1038               	iorwf	(utoa@n+6)^0,w,c
  5505  001F90  1039               	iorwf	(utoa@n+7)^0,w,c
  5506  001F92  A4D8               	btfss	status,2,c
  5507  001F94  EFCE  F00F         	goto	u1611
  5508  001F98  EFD0  F00F         	goto	u1610
  5509  001F9C                     u1611:
  5510  001F9C  EF42  F00F         	goto	l2273
  5511  001FA0                     u1610:
  5512  001FA0  BE2F               	btfsc	(utoa@p+1)^0,7,c
  5513  001FA2  EFDD  F00F         	goto	u1620
  5514  001FA6  502F               	movf	(utoa@p+1)^0,w,c
  5515  001FA8  E106               	bnz	u1621
  5516  001FAA  042E               	decf	utoa@p^0,w,c
  5517  001FAC  B0D8               	btfsc	status,0,c
  5518  001FAE  EFDB  F00F         	goto	u1621
  5519  001FB2  EFDD  F00F         	goto	u1620
  5520  001FB6                     u1621:
  5521  001FB6  EF42  F00F         	goto	l2273
  5522  001FBA                     u1620:
  5523  001FBA  BE31               	btfsc	(utoa@w+1)^0,7,c
  5524  001FBC  EFE8  F00F         	goto	u1631
  5525  001FC0  5031               	movf	(utoa@w+1)^0,w,c
  5526  001FC2  E108               	bnz	u1630
  5527  001FC4  0430               	decf	utoa@w^0,w,c
  5528  001FC6  A0D8               	btfss	status,0,c
  5529  001FC8  EFE8  F00F         	goto	u1631
  5530  001FCC  EFEA  F00F         	goto	u1630
  5531  001FD0                     u1631:
  5532  001FD0  EFF2  F00F         	goto	l2293
  5533  001FD4                     u1630:
  5534  001FD4  0100               	movlb	0	; () banked
  5535  001FD6  B3CA               	btfsc	_flags& (0+255),1,b
  5536  001FD8  EFF0  F00F         	goto	u1641
  5537  001FDC  EFF2  F00F         	goto	u1640
  5538  001FE0                     u1641:
  5539  001FE0  EF42  F00F         	goto	l2273
  5540  001FE4                     u1640:
  5541  001FE4                     l2293:
  5542                           
  5543                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 640:     return p
      +                          ad(fp, &dbuf[i], w);
  5544  001FE4  C01C  F011         	movff	utoa@fp,pad@fp
  5545  001FE8  C01D  F012         	movff	utoa@fp+1,pad@fp+1
  5546  001FEC  0E00               	movlw	low _dbuf
  5547  001FEE  243A               	addwf	utoa@i^0,w,c
  5548  001FF0  6E13               	movwf	pad@buf^0,c
  5549  001FF2  0E03               	movlw	high _dbuf
  5550  001FF4  203B               	addwfc	(utoa@i+1)^0,w,c
  5551  001FF6  6E14               	movwf	(pad@buf+1)^0,c
  5552  001FF8  C030  F015         	movff	utoa@w,pad@p
  5553  001FFC  C031  F016         	movff	utoa@w+1,pad@p+1
  5554  002000  EC05  F015         	call	_pad	;wreg free
  5555  002004  C011  F01C         	movff	?_pad,?_utoa
  5556  002008  C012  F01D         	movff	?_pad+1,?_utoa+1
  5557  00200C  0012               	return		;funcret
  5558  00200E                     __end_of_utoa:
  5559                           	callstack 0
  5560                           
  5561 ;; *************** function _pad *****************
  5562 ;; Defined at:
  5563 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  5564 ;; Parameters:    Size  Location     Type
  5565 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  5566 ;;		 -> sprintf@f(11), 
  5567 ;;  buf             2   18[COMRAM] PTR unsigned char 
  5568 ;;		 -> dbuf(32), 
  5569 ;;  p               2   20[COMRAM] int 
  5570 ;; Auto vars:     Size  Location     Type
  5571 ;;  w               2   25[COMRAM] int 
  5572 ;;  i               2   23[COMRAM] int 
  5573 ;; Return value:  Size  Location     Type
  5574 ;;                  2   16[COMRAM] int 
  5575 ;; Registers used:
  5576 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5577 ;; Tracked objects:
  5578 ;;		On entry : 0/0
  5579 ;;		On exit  : 0/0
  5580 ;;		Unchanged: 0/0
  5581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5582 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5583 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5584 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5585 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5586 ;;Total ram usage:       11 bytes
  5587 ;; Hardware stack levels used: 1
  5588 ;; Hardware stack levels required when called: 4
  5589 ;; This function calls:
  5590 ;;		_fputc
  5591 ;;		_fputs
  5592 ;;		_strlen
  5593 ;; This function is called by:
  5594 ;;		_utoa
  5595 ;;		_xtoa
  5596 ;; This function uses a non-reentrant model
  5597 ;;
  5598                           
  5599                           	psect	text19
  5600  002A0A                     __ptext19:
  5601                           	callstack 0
  5602  002A0A                     _pad:
  5603                           	callstack 22
  5604  002A0A                     
  5605                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  5606  002A0A  0100               	movlb	0	; () banked
  5607  002A0C  A1CA               	btfss	_flags& (0+255),0,b
  5608  002A0E  EF0B  F015         	goto	u1491
  5609  002A12  EF0D  F015         	goto	u1490
  5610  002A16                     u1491:
  5611  002A16  EF17  F015         	goto	l2225
  5612  002A1A                     u1490:
  5613  002A1A                     
  5614                           ; BSR set to: 0
  5615                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  5616  002A1A  C013  F00A         	movff	pad@buf,fputs@s
  5617  002A1E  C014  F00B         	movff	pad@buf+1,fputs@s+1
  5618  002A22  C011  F00C         	movff	pad@fp,fputs@fp
  5619  002A26  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  5620  002A2A  ECCF  F016         	call	_fputs	;wreg free
  5621  002A2E                     l2225:
  5622                           
  5623                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  5624  002A2E  BE16               	btfsc	(pad@p+1)^0,7,c
  5625  002A30  EF1C  F015         	goto	u1501
  5626  002A34  EF1E  F015         	goto	u1500
  5627  002A38                     u1501:
  5628  002A38  EF24  F015         	goto	l2229
  5629  002A3C                     u1500:
  5630  002A3C  C015  F01A         	movff	pad@p,pad@w
  5631  002A40  C016  F01B         	movff	pad@p+1,pad@w+1
  5632  002A44  EF28  F015         	goto	l1065
  5633  002A48                     l2229:
  5634  002A48  0E00               	movlw	0
  5635  002A4A  6E1B               	movwf	(pad@w+1)^0,c
  5636  002A4C  0E00               	movlw	0
  5637  002A4E  6E1A               	movwf	pad@w^0,c
  5638  002A50                     l1065:
  5639                           
  5640                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  5641  002A50  0E00               	movlw	0
  5642  002A52  6E19               	movwf	(pad@i+1)^0,c
  5643  002A54  0E00               	movlw	0
  5644  002A56  6E18               	movwf	pad@i^0,c
  5645                           
  5646                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  5647  002A58  EF3A  F015         	goto	l2235
  5648  002A5C                     l2231:
  5649                           
  5650                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  5651  002A5C  0E00               	movlw	0
  5652  002A5E  6E02               	movwf	(fputc@c+1)^0,c
  5653  002A60  0E20               	movlw	32
  5654  002A62  6E01               	movwf	fputc@c^0,c
  5655  002A64  C011  F003         	movff	pad@fp,fputc@fp
  5656  002A68  C012  F004         	movff	pad@fp+1,fputc@fp+1
  5657  002A6C  ECA0  F014         	call	_fputc	;wreg free
  5658  002A70                     
  5659                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 86:         ++i;
  5660  002A70  4A18               	infsnz	pad@i^0,f,c
  5661  002A72  2A19               	incf	(pad@i+1)^0,f,c
  5662  002A74                     l2235:
  5663                           
  5664                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  5665  002A74  501A               	movf	pad@w^0,w,c
  5666  002A76  5C18               	subwf	pad@i^0,w,c
  5667  002A78  5019               	movf	(pad@i+1)^0,w,c
  5668  002A7A  0A80               	xorlw	128
  5669  002A7C  6E17               	movwf	??_pad^0,c
  5670  002A7E  501B               	movf	(pad@w+1)^0,w,c
  5671  002A80  0A80               	xorlw	128
  5672  002A82  5817               	subwfb	??_pad^0,w,c
  5673  002A84  A0D8               	btfss	status,0,c
  5674  002A86  EF47  F015         	goto	u1511
  5675  002A8A  EF49  F015         	goto	u1510
  5676  002A8E                     u1511:
  5677  002A8E  EF2E  F015         	goto	l2231
  5678  002A92                     u1510:
  5679  002A92                     
  5680                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  5681  002A92  0100               	movlb	0	; () banked
  5682  002A94  B1CA               	btfsc	_flags& (0+255),0,b
  5683  002A96  EF4F  F015         	goto	u1521
  5684  002A9A  EF51  F015         	goto	u1520
  5685  002A9E                     u1521:
  5686  002A9E  EF5B  F015         	goto	l2239
  5687  002AA2                     u1520:
  5688  002AA2                     
  5689                           ; BSR set to: 0
  5690                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  5691  002AA2  C013  F00A         	movff	pad@buf,fputs@s
  5692  002AA6  C014  F00B         	movff	pad@buf+1,fputs@s+1
  5693  002AAA  C011  F00C         	movff	pad@fp,fputs@fp
  5694  002AAE  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  5695  002AB2  ECCF  F016         	call	_fputs	;wreg free
  5696  002AB6                     l2239:
  5697                           
  5698                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  5699  002AB6  C013  F001         	movff	pad@buf,strlen@s
  5700  002ABA  C014  F002         	movff	pad@buf+1,strlen@s+1
  5701  002ABE  EC47  F017         	call	_strlen	;wreg free
  5702  002AC2  501A               	movf	pad@w^0,w,c
  5703  002AC4  2401               	addwf	?_strlen^0,w,c
  5704  002AC6  6E11               	movwf	?_pad^0,c
  5705  002AC8  501B               	movf	(pad@w+1)^0,w,c
  5706  002ACA  2002               	addwfc	(?_strlen+1)^0,w,c
  5707  002ACC  6E12               	movwf	(?_pad+1)^0,c
  5708  002ACE  0012               	return		;funcret
  5709  002AD0                     __end_of_pad:
  5710                           	callstack 0
  5711                           
  5712 ;; *************** function _strlen *****************
  5713 ;; Defined at:
  5714 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strlen.c"
  5715 ;; Parameters:    Size  Location     Type
  5716 ;;  s               2    0[COMRAM] PTR const unsigned char 
  5717 ;;		 -> dbuf(32), 
  5718 ;; Auto vars:     Size  Location     Type
  5719 ;;  a               2    2[COMRAM] PTR const unsigned char 
  5720 ;;		 -> dbuf(32), 
  5721 ;; Return value:  Size  Location     Type
  5722 ;;                  2    0[COMRAM] unsigned int 
  5723 ;; Registers used:
  5724 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5725 ;; Tracked objects:
  5726 ;;		On entry : 0/0
  5727 ;;		On exit  : 0/0
  5728 ;;		Unchanged: 0/0
  5729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5730 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5731 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5733 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5734 ;;Total ram usage:        4 bytes
  5735 ;; Hardware stack levels used: 1
  5736 ;; Hardware stack levels required when called: 1
  5737 ;; This function calls:
  5738 ;;		Nothing
  5739 ;; This function is called by:
  5740 ;;		_pad
  5741 ;; This function uses a non-reentrant model
  5742 ;;
  5743                           
  5744                           	psect	text20
  5745  002E8E                     __ptext20:
  5746                           	callstack 0
  5747  002E8E                     _strlen:
  5748                           	callstack 24
  5749  002E8E  C001  F003         	movff	strlen@s,strlen@a
  5750  002E92  C002  F004         	movff	strlen@s+1,strlen@a+1
  5751  002E96  EF4F  F017         	goto	l2173
  5752  002E9A                     l2171:
  5753  002E9A  4A01               	infsnz	strlen@s^0,f,c
  5754  002E9C  2A02               	incf	(strlen@s+1)^0,f,c
  5755  002E9E                     l2173:
  5756  002E9E  C001  FFD9         	movff	strlen@s,fsr2l
  5757  002EA2  C002  FFDA         	movff	strlen@s+1,fsr2h
  5758  002EA6  50DF               	movf	indf2,w,c
  5759  002EA8  A4D8               	btfss	status,2,c
  5760  002EAA  EF59  F017         	goto	u1391
  5761  002EAE  EF5B  F017         	goto	u1390
  5762  002EB2                     u1391:
  5763  002EB2  EF4D  F017         	goto	l2171
  5764  002EB6                     u1390:
  5765  002EB6  5003               	movf	strlen@a^0,w,c
  5766  002EB8  5C01               	subwf	strlen@s^0,w,c
  5767  002EBA  6E01               	movwf	?_strlen^0,c
  5768  002EBC  5004               	movf	(strlen@a+1)^0,w,c
  5769  002EBE  5802               	subwfb	(strlen@s+1)^0,w,c
  5770  002EC0  6E02               	movwf	(?_strlen+1)^0,c
  5771  002EC2  0012               	return		;funcret
  5772  002EC4                     __end_of_strlen:
  5773                           	callstack 0
  5774                           
  5775 ;; *************** function _fputs *****************
  5776 ;; Defined at:
  5777 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputs.c"
  5778 ;; Parameters:    Size  Location     Type
  5779 ;;  s               2    9[COMRAM] PTR const unsigned char 
  5780 ;;		 -> dbuf(32), 
  5781 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  5782 ;;		 -> sprintf@f(11), 
  5783 ;; Auto vars:     Size  Location     Type
  5784 ;;  i               2   14[COMRAM] int 
  5785 ;;  c               1   13[COMRAM] unsigned char 
  5786 ;; Return value:  Size  Location     Type
  5787 ;;                  2    9[COMRAM] int 
  5788 ;; Registers used:
  5789 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5790 ;; Tracked objects:
  5791 ;;		On entry : 0/0
  5792 ;;		On exit  : 0/0
  5793 ;;		Unchanged: 0/0
  5794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5795 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5796 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5798 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5799 ;;Total ram usage:        7 bytes
  5800 ;; Hardware stack levels used: 1
  5801 ;; Hardware stack levels required when called: 3
  5802 ;; This function calls:
  5803 ;;		_fputc
  5804 ;; This function is called by:
  5805 ;;		_pad
  5806 ;; This function uses a non-reentrant model
  5807 ;;
  5808                           
  5809                           	psect	text21
  5810  002D9E                     __ptext21:
  5811                           	callstack 0
  5812  002D9E                     _fputs:
  5813                           	callstack 22
  5814  002D9E  0E00               	movlw	0
  5815  002DA0  6E10               	movwf	(fputs@i+1)^0,c
  5816  002DA2  0E00               	movlw	0
  5817  002DA4  6E0F               	movwf	fputs@i^0,c
  5818  002DA6  EFE0  F016         	goto	l2167
  5819  002DAA                     l2163:
  5820  002DAA  C00E  F001         	movff	fputs@c,fputc@c
  5821  002DAE  6A02               	clrf	(fputc@c+1)^0,c
  5822  002DB0  C00C  F003         	movff	fputs@fp,fputc@fp
  5823  002DB4  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  5824  002DB8  ECA0  F014         	call	_fputc	;wreg free
  5825  002DBC  4A0F               	infsnz	fputs@i^0,f,c
  5826  002DBE  2A10               	incf	(fputs@i+1)^0,f,c
  5827  002DC0                     l2167:
  5828  002DC0  500F               	movf	fputs@i^0,w,c
  5829  002DC2  240A               	addwf	fputs@s^0,w,c
  5830  002DC4  6ED9               	movwf	fsr2l,c
  5831  002DC6  5010               	movf	(fputs@i+1)^0,w,c
  5832  002DC8  200B               	addwfc	(fputs@s+1)^0,w,c
  5833  002DCA  6EDA               	movwf	fsr2h,c
  5834  002DCC  50DF               	movf	indf2,w,c
  5835  002DCE  6E0E               	movwf	fputs@c^0,c
  5836  002DD0  500E               	movf	fputs@c^0,w,c
  5837  002DD2  A4D8               	btfss	status,2,c
  5838  002DD4  EFEE  F016         	goto	u1381
  5839  002DD8  EFF0  F016         	goto	u1380
  5840  002DDC                     u1381:
  5841  002DDC  EFD5  F016         	goto	l2163
  5842  002DE0                     u1380:
  5843  002DE0  0012               	return		;funcret
  5844  002DE2                     __end_of_fputs:
  5845                           	callstack 0
  5846                           
  5847 ;; *************** function _fputc *****************
  5848 ;; Defined at:
  5849 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputc.c"
  5850 ;; Parameters:    Size  Location     Type
  5851 ;;  c               2    0[COMRAM] int 
  5852 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  5853 ;;		 -> sprintf@f(11), 
  5854 ;; Auto vars:     Size  Location     Type
  5855 ;;		None
  5856 ;; Return value:  Size  Location     Type
  5857 ;;                  2    0[COMRAM] int 
  5858 ;; Registers used:
  5859 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5860 ;; Tracked objects:
  5861 ;;		On entry : 0/0
  5862 ;;		On exit  : 0/0
  5863 ;;		Unchanged: 0/0
  5864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5865 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5867 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5868 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5869 ;;Total ram usage:        9 bytes
  5870 ;; Hardware stack levels used: 1
  5871 ;; Hardware stack levels required when called: 2
  5872 ;; This function calls:
  5873 ;;		_putch
  5874 ;; This function is called by:
  5875 ;;		_pad
  5876 ;;		_vfpfcnvrt
  5877 ;;		_fputs
  5878 ;; This function uses a non-reentrant model
  5879 ;;
  5880                           
  5881                           	psect	text22
  5882  002940                     __ptext22:
  5883                           	callstack 0
  5884  002940                     _fputc:
  5885                           	callstack 22
  5886  002940  5003               	movf	fputc@fp^0,w,c
  5887  002942  1004               	iorwf	(fputc@fp+1)^0,w,c
  5888  002944  B4D8               	btfsc	status,2,c
  5889  002946  EFA7  F014         	goto	u1341
  5890  00294A  EFA9  F014         	goto	u1340
  5891  00294E                     u1341:
  5892  00294E  EFB2  F014         	goto	l2151
  5893  002952                     u1340:
  5894  002952  5003               	movf	fputc@fp^0,w,c
  5895  002954  1004               	iorwf	(fputc@fp+1)^0,w,c
  5896  002956  A4D8               	btfss	status,2,c
  5897  002958  EFB0  F014         	goto	u1351
  5898  00295C  EFB2  F014         	goto	u1350
  5899  002960                     u1351:
  5900  002960  EFB7  F014         	goto	l2153
  5901  002964                     u1350:
  5902  002964                     l2151:
  5903  002964  5001               	movf	fputc@c^0,w,c
  5904  002966  EC06  F018         	call	_putch
  5905  00296A  EF04  F015         	goto	l1154
  5906  00296E                     l2153:
  5907  00296E  EE20 F009          	lfsr	2,9
  5908  002972  5003               	movf	fputc@fp^0,w,c
  5909  002974  26D9               	addwf	fsr2l,f,c
  5910  002976  5004               	movf	(fputc@fp+1)^0,w,c
  5911  002978  22DA               	addwfc	fsr2h,f,c
  5912  00297A  50DE               	movf	postinc2,w,c
  5913  00297C  10DE               	iorwf	postinc2,w,c
  5914  00297E  B4D8               	btfsc	status,2,c
  5915  002980  EFC4  F014         	goto	u1361
  5916  002984  EFC6  F014         	goto	u1360
  5917  002988                     u1361:
  5918  002988  EFE1  F014         	goto	l2157
  5919  00298C                     u1360:
  5920  00298C  EE20 F009          	lfsr	2,9
  5921  002990  5003               	movf	fputc@fp^0,w,c
  5922  002992  26D9               	addwf	fsr2l,f,c
  5923  002994  5004               	movf	(fputc@fp+1)^0,w,c
  5924  002996  22DA               	addwfc	fsr2h,f,c
  5925  002998  EE10 F003          	lfsr	1,3
  5926  00299C  5003               	movf	fputc@fp^0,w,c
  5927  00299E  26E1               	addwf	fsr1l,f,c
  5928  0029A0  5004               	movf	(fputc@fp+1)^0,w,c
  5929  0029A2  22E2               	addwfc	fsr1h,f,c
  5930  0029A4  50DE               	movf	postinc2,w,c
  5931  0029A6  5CE6               	subwf	postinc1,w,c
  5932  0029A8  50E6               	movf	postinc1,w,c
  5933  0029AA  0A80               	xorlw	128
  5934  0029AC  6E09               	movwf	(??_fputc+4)^0,c
  5935  0029AE  50DE               	movf	postinc2,w,c
  5936  0029B0  0A80               	xorlw	128
  5937  0029B2  5809               	subwfb	(??_fputc+4)^0,w,c
  5938  0029B4  B0D8               	btfsc	status,0,c
  5939  0029B6  EFDF  F014         	goto	u1371
  5940  0029BA  EFE1  F014         	goto	u1370
  5941  0029BE                     u1371:
  5942  0029BE  EF04  F015         	goto	l1154
  5943  0029C2                     u1370:
  5944  0029C2                     l2157:
  5945  0029C2  EE20 F003          	lfsr	2,3
  5946  0029C6  5003               	movf	fputc@fp^0,w,c
  5947  0029C8  26D9               	addwf	fsr2l,f,c
  5948  0029CA  5004               	movf	(fputc@fp+1)^0,w,c
  5949  0029CC  22DA               	addwfc	fsr2h,f,c
  5950  0029CE  CFDE F005          	movff	postinc2,??_fputc
  5951  0029D2  CFDD F006          	movff	postdec2,??_fputc+1
  5952  0029D6  C003  FFD9         	movff	fputc@fp,fsr2l
  5953  0029DA  C004  FFDA         	movff	fputc@fp+1,fsr2h
  5954  0029DE  CFDE F007          	movff	postinc2,??_fputc+2
  5955  0029E2  CFDD F008          	movff	postdec2,??_fputc+3
  5956  0029E6  5005               	movf	??_fputc^0,w,c
  5957  0029E8  2407               	addwf	(??_fputc+2)^0,w,c
  5958  0029EA  6ED9               	movwf	fsr2l,c
  5959  0029EC  5006               	movf	(??_fputc+1)^0,w,c
  5960  0029EE  2008               	addwfc	(??_fputc+3)^0,w,c
  5961  0029F0  6EDA               	movwf	fsr2h,c
  5962  0029F2  C001  FFDF         	movff	fputc@c,indf2
  5963  0029F6  EE20 F003          	lfsr	2,3
  5964  0029FA  5003               	movf	fputc@fp^0,w,c
  5965  0029FC  26D9               	addwf	fsr2l,f,c
  5966  0029FE  5004               	movf	(fputc@fp+1)^0,w,c
  5967  002A00  22DA               	addwfc	fsr2h,f,c
  5968  002A02  2ADE               	incf	postinc2,f,c
  5969  002A04  0E00               	movlw	0
  5970  002A06  22DD               	addwfc	postdec2,f,c
  5971  002A08                     l1154:
  5972  002A08  0012               	return		;funcret
  5973  002A0A                     __end_of_fputc:
  5974                           	callstack 0
  5975                           
  5976 ;; *************** function _putch *****************
  5977 ;; Defined at:
  5978 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\putch.c"
  5979 ;; Parameters:    Size  Location     Type
  5980 ;;  c               1    wreg     unsigned char 
  5981 ;; Auto vars:     Size  Location     Type
  5982 ;;  c               1    0[COMRAM] unsigned char 
  5983 ;; Return value:  Size  Location     Type
  5984 ;;                  1    wreg      void 
  5985 ;; Registers used:
  5986 ;;		wreg
  5987 ;; Tracked objects:
  5988 ;;		On entry : 0/0
  5989 ;;		On exit  : 0/0
  5990 ;;		Unchanged: 0/0
  5991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5995 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5996 ;;Total ram usage:        0 bytes
  5997 ;; Hardware stack levels used: 1
  5998 ;; Hardware stack levels required when called: 1
  5999 ;; This function calls:
  6000 ;;		Nothing
  6001 ;; This function is called by:
  6002 ;;		_fputc
  6003 ;; This function uses a non-reentrant model
  6004 ;;
  6005                           
  6006                           	psect	text23
  6007  00300C                     __ptext23:
  6008                           	callstack 0
  6009  00300C                     _putch:
  6010                           	callstack 22
  6011  00300C  0012               	return		;funcret
  6012  00300E                     __end_of_putch:
  6013                           	callstack 0
  6014                           
  6015 ;; *************** function ___lomod *****************
  6016 ;; Defined at:
  6017 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\lomod.c"
  6018 ;; Parameters:    Size  Location     Type
  6019 ;;  dividend        8    0[COMRAM] unsigned long long 
  6020 ;;  divisor         8    8[COMRAM] unsigned long long 
  6021 ;; Auto vars:     Size  Location     Type
  6022 ;;  counter         1   16[COMRAM] unsigned char 
  6023 ;; Return value:  Size  Location     Type
  6024 ;;                  8    0[COMRAM] unsigned long long 
  6025 ;; Registers used:
  6026 ;;		wreg, status,2, status,0
  6027 ;; Tracked objects:
  6028 ;;		On entry : 0/0
  6029 ;;		On exit  : 0/0
  6030 ;;		Unchanged: 0/0
  6031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6032 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6033 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6035 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6036 ;;Total ram usage:       17 bytes
  6037 ;; Hardware stack levels used: 1
  6038 ;; Hardware stack levels required when called: 1
  6039 ;; This function calls:
  6040 ;;		Nothing
  6041 ;; This function is called by:
  6042 ;;		_utoa
  6043 ;; This function uses a non-reentrant model
  6044 ;;
  6045                           
  6046                           	psect	text24
  6047  002870                     __ptext24:
  6048                           	callstack 0
  6049  002870                     ___lomod:
  6050                           	callstack 25
  6051  002870  5009               	movf	___lomod@divisor^0,w,c
  6052  002872  100A               	iorwf	(___lomod@divisor+1)^0,w,c
  6053  002874  100B               	iorwf	(___lomod@divisor+2)^0,w,c
  6054  002876  100C               	iorwf	(___lomod@divisor+3)^0,w,c
  6055  002878  100D               	iorwf	(___lomod@divisor+4)^0,w,c
  6056  00287A  100E               	iorwf	(___lomod@divisor+5)^0,w,c
  6057  00287C  100F               	iorwf	(___lomod@divisor+6)^0,w,c
  6058  00287E  1010               	iorwf	(___lomod@divisor+7)^0,w,c
  6059  002880  B4D8               	btfsc	status,2,c
  6060  002882  EF45  F014         	goto	u1461
  6061  002886  EF47  F014         	goto	u1460
  6062  00288A                     u1461:
  6063  00288A  EF8F  F014         	goto	l802
  6064  00288E                     u1460:
  6065  00288E  0E01               	movlw	1
  6066  002890  6E11               	movwf	___lomod@counter^0,c
  6067  002892  EF55  F014         	goto	l2211
  6068  002896                     l2209:
  6069  002896  90D8               	bcf	status,0,c
  6070  002898  3609               	rlcf	___lomod@divisor^0,f,c
  6071  00289A  360A               	rlcf	(___lomod@divisor+1)^0,f,c
  6072  00289C  360B               	rlcf	(___lomod@divisor+2)^0,f,c
  6073  00289E  360C               	rlcf	(___lomod@divisor+3)^0,f,c
  6074  0028A0  360D               	rlcf	(___lomod@divisor+4)^0,f,c
  6075  0028A2  360E               	rlcf	(___lomod@divisor+5)^0,f,c
  6076  0028A4  360F               	rlcf	(___lomod@divisor+6)^0,f,c
  6077  0028A6  3610               	rlcf	(___lomod@divisor+7)^0,f,c
  6078  0028A8  2A11               	incf	___lomod@counter^0,f,c
  6079  0028AA                     l2211:
  6080  0028AA  AE10               	btfss	(___lomod@divisor+7)^0,7,c
  6081  0028AC  EF5A  F014         	goto	u1471
  6082  0028B0  EF5C  F014         	goto	u1470
  6083  0028B4                     u1471:
  6084  0028B4  EF4B  F014         	goto	l2209
  6085  0028B8                     u1470:
  6086  0028B8                     l2213:
  6087  0028B8  5009               	movf	___lomod@divisor^0,w,c
  6088  0028BA  5C01               	subwf	___lomod@dividend^0,w,c
  6089  0028BC  500A               	movf	(___lomod@divisor+1)^0,w,c
  6090  0028BE  5802               	subwfb	(___lomod@dividend+1)^0,w,c
  6091  0028C0  500B               	movf	(___lomod@divisor+2)^0,w,c
  6092  0028C2  5803               	subwfb	(___lomod@dividend+2)^0,w,c
  6093  0028C4  500C               	movf	(___lomod@divisor+3)^0,w,c
  6094  0028C6  5804               	subwfb	(___lomod@dividend+3)^0,w,c
  6095  0028C8  500D               	movf	(___lomod@divisor+4)^0,w,c
  6096  0028CA  5805               	subwfb	(___lomod@dividend+4)^0,w,c
  6097  0028CC  500E               	movf	(___lomod@divisor+5)^0,w,c
  6098  0028CE  5806               	subwfb	(___lomod@dividend+5)^0,w,c
  6099  0028D0  500F               	movf	(___lomod@divisor+6)^0,w,c
  6100  0028D2  5807               	subwfb	(___lomod@dividend+6)^0,w,c
  6101  0028D4  5010               	movf	(___lomod@divisor+7)^0,w,c
  6102  0028D6  5808               	subwfb	(___lomod@dividend+7)^0,w,c
  6103  0028D8  A0D8               	btfss	status,0,c
  6104  0028DA  EF71  F014         	goto	u1481
  6105  0028DE  EF73  F014         	goto	u1480
  6106  0028E2                     u1481:
  6107  0028E2  EF83  F014         	goto	l2217
  6108  0028E6                     u1480:
  6109  0028E6  5009               	movf	___lomod@divisor^0,w,c
  6110  0028E8  5E01               	subwf	___lomod@dividend^0,f,c
  6111  0028EA  500A               	movf	(___lomod@divisor+1)^0,w,c
  6112  0028EC  5A02               	subwfb	(___lomod@dividend+1)^0,f,c
  6113  0028EE  500B               	movf	(___lomod@divisor+2)^0,w,c
  6114  0028F0  5A03               	subwfb	(___lomod@dividend+2)^0,f,c
  6115  0028F2  500C               	movf	(___lomod@divisor+3)^0,w,c
  6116  0028F4  5A04               	subwfb	(___lomod@dividend+3)^0,f,c
  6117  0028F6  500D               	movf	(___lomod@divisor+4)^0,w,c
  6118  0028F8  5A05               	subwfb	(___lomod@dividend+4)^0,f,c
  6119  0028FA  500E               	movf	(___lomod@divisor+5)^0,w,c
  6120  0028FC  5A06               	subwfb	(___lomod@dividend+5)^0,f,c
  6121  0028FE  500F               	movf	(___lomod@divisor+6)^0,w,c
  6122  002900  5A07               	subwfb	(___lomod@dividend+6)^0,f,c
  6123  002902  5010               	movf	(___lomod@divisor+7)^0,w,c
  6124  002904  5A08               	subwfb	(___lomod@dividend+7)^0,f,c
  6125  002906                     l2217:
  6126  002906  90D8               	bcf	status,0,c
  6127  002908  3210               	rrcf	(___lomod@divisor+7)^0,f,c
  6128  00290A  320F               	rrcf	(___lomod@divisor+6)^0,f,c
  6129  00290C  320E               	rrcf	(___lomod@divisor+5)^0,f,c
  6130  00290E  320D               	rrcf	(___lomod@divisor+4)^0,f,c
  6131  002910  320C               	rrcf	(___lomod@divisor+3)^0,f,c
  6132  002912  320B               	rrcf	(___lomod@divisor+2)^0,f,c
  6133  002914  320A               	rrcf	(___lomod@divisor+1)^0,f,c
  6134  002916  3209               	rrcf	___lomod@divisor^0,f,c
  6135  002918  2E11               	decfsz	___lomod@counter^0,f,c
  6136  00291A  EF5C  F014         	goto	l2213
  6137  00291E                     l802:
  6138  00291E  C001  F001         	movff	___lomod@dividend,?___lomod
  6139  002922  C002  F002         	movff	___lomod@dividend+1,?___lomod+1
  6140  002926  C003  F003         	movff	___lomod@dividend+2,?___lomod+2
  6141  00292A  C004  F004         	movff	___lomod@dividend+3,?___lomod+3
  6142  00292E  C005  F005         	movff	___lomod@dividend+4,?___lomod+4
  6143  002932  C006  F006         	movff	___lomod@dividend+5,?___lomod+5
  6144  002936  C007  F007         	movff	___lomod@dividend+6,?___lomod+6
  6145  00293A  C008  F008         	movff	___lomod@dividend+7,?___lomod+7
  6146  00293E  0012               	return		;funcret
  6147  002940                     __end_of___lomod:
  6148                           	callstack 0
  6149                           
  6150 ;; *************** function ___lodiv *****************
  6151 ;; Defined at:
  6152 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\lodiv.c"
  6153 ;; Parameters:    Size  Location     Type
  6154 ;;  dividend        8    0[COMRAM] unsigned long long 
  6155 ;;  divisor         8    8[COMRAM] unsigned long long 
  6156 ;; Auto vars:     Size  Location     Type
  6157 ;;  quotient        8   16[COMRAM] unsigned long long 
  6158 ;;  counter         1   24[COMRAM] unsigned char 
  6159 ;; Return value:  Size  Location     Type
  6160 ;;                  8    0[COMRAM] unsigned long long 
  6161 ;; Registers used:
  6162 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6163 ;; Tracked objects:
  6164 ;;		On entry : 0/0
  6165 ;;		On exit  : 0/0
  6166 ;;		Unchanged: 0/0
  6167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6168 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6169 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6171 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6172 ;;Total ram usage:       25 bytes
  6173 ;; Hardware stack levels used: 1
  6174 ;; Hardware stack levels required when called: 1
  6175 ;; This function calls:
  6176 ;;		Nothing
  6177 ;; This function is called by:
  6178 ;;		_utoa
  6179 ;; This function uses a non-reentrant model
  6180 ;;
  6181                           
  6182                           	psect	text25
  6183  0026A2                     __ptext25:
  6184                           	callstack 0
  6185  0026A2                     ___lodiv:
  6186                           	callstack 25
  6187  0026A2  EE20  F011         	lfsr	2,___lodiv@quotient
  6188  0026A6  0E07               	movlw	7
  6189  0026A8                     u1421:
  6190  0026A8  6ADE               	clrf	postinc2,c
  6191  0026AA  06E8               	decf	wreg,f,c
  6192  0026AC  E2FD               	bc	u1421
  6193  0026AE  5009               	movf	___lodiv@divisor^0,w,c
  6194  0026B0  100A               	iorwf	(___lodiv@divisor+1)^0,w,c
  6195  0026B2  100B               	iorwf	(___lodiv@divisor+2)^0,w,c
  6196  0026B4  100C               	iorwf	(___lodiv@divisor+3)^0,w,c
  6197  0026B6  100D               	iorwf	(___lodiv@divisor+4)^0,w,c
  6198  0026B8  100E               	iorwf	(___lodiv@divisor+5)^0,w,c
  6199  0026BA  100F               	iorwf	(___lodiv@divisor+6)^0,w,c
  6200  0026BC  1010               	iorwf	(___lodiv@divisor+7)^0,w,c
  6201  0026BE  B4D8               	btfsc	status,2,c
  6202  0026C0  EF64  F013         	goto	u1431
  6203  0026C4  EF66  F013         	goto	u1430
  6204  0026C8                     u1431:
  6205  0026C8  EFB8  F013         	goto	l792
  6206  0026CC                     u1430:
  6207  0026CC  0E01               	movlw	1
  6208  0026CE  6E19               	movwf	___lodiv@counter^0,c
  6209  0026D0  EF74  F013         	goto	l2191
  6210  0026D4                     l2189:
  6211  0026D4  90D8               	bcf	status,0,c
  6212  0026D6  3609               	rlcf	___lodiv@divisor^0,f,c
  6213  0026D8  360A               	rlcf	(___lodiv@divisor+1)^0,f,c
  6214  0026DA  360B               	rlcf	(___lodiv@divisor+2)^0,f,c
  6215  0026DC  360C               	rlcf	(___lodiv@divisor+3)^0,f,c
  6216  0026DE  360D               	rlcf	(___lodiv@divisor+4)^0,f,c
  6217  0026E0  360E               	rlcf	(___lodiv@divisor+5)^0,f,c
  6218  0026E2  360F               	rlcf	(___lodiv@divisor+6)^0,f,c
  6219  0026E4  3610               	rlcf	(___lodiv@divisor+7)^0,f,c
  6220  0026E6  2A19               	incf	___lodiv@counter^0,f,c
  6221  0026E8                     l2191:
  6222  0026E8  AE10               	btfss	(___lodiv@divisor+7)^0,7,c
  6223  0026EA  EF79  F013         	goto	u1441
  6224  0026EE  EF7B  F013         	goto	u1440
  6225  0026F2                     u1441:
  6226  0026F2  EF6A  F013         	goto	l2189
  6227  0026F6                     u1440:
  6228  0026F6                     l2193:
  6229  0026F6  90D8               	bcf	status,0,c
  6230  0026F8  3611               	rlcf	___lodiv@quotient^0,f,c
  6231  0026FA  3612               	rlcf	(___lodiv@quotient+1)^0,f,c
  6232  0026FC  3613               	rlcf	(___lodiv@quotient+2)^0,f,c
  6233  0026FE  3614               	rlcf	(___lodiv@quotient+3)^0,f,c
  6234  002700  3615               	rlcf	(___lodiv@quotient+4)^0,f,c
  6235  002702  3616               	rlcf	(___lodiv@quotient+5)^0,f,c
  6236  002704  3617               	rlcf	(___lodiv@quotient+6)^0,f,c
  6237  002706  3618               	rlcf	(___lodiv@quotient+7)^0,f,c
  6238  002708  5009               	movf	___lodiv@divisor^0,w,c
  6239  00270A  5C01               	subwf	___lodiv@dividend^0,w,c
  6240  00270C  500A               	movf	(___lodiv@divisor+1)^0,w,c
  6241  00270E  5802               	subwfb	(___lodiv@dividend+1)^0,w,c
  6242  002710  500B               	movf	(___lodiv@divisor+2)^0,w,c
  6243  002712  5803               	subwfb	(___lodiv@dividend+2)^0,w,c
  6244  002714  500C               	movf	(___lodiv@divisor+3)^0,w,c
  6245  002716  5804               	subwfb	(___lodiv@dividend+3)^0,w,c
  6246  002718  500D               	movf	(___lodiv@divisor+4)^0,w,c
  6247  00271A  5805               	subwfb	(___lodiv@dividend+4)^0,w,c
  6248  00271C  500E               	movf	(___lodiv@divisor+5)^0,w,c
  6249  00271E  5806               	subwfb	(___lodiv@dividend+5)^0,w,c
  6250  002720  500F               	movf	(___lodiv@divisor+6)^0,w,c
  6251  002722  5807               	subwfb	(___lodiv@dividend+6)^0,w,c
  6252  002724  5010               	movf	(___lodiv@divisor+7)^0,w,c
  6253  002726  5808               	subwfb	(___lodiv@dividend+7)^0,w,c
  6254  002728  A0D8               	btfss	status,0,c
  6255  00272A  EF99  F013         	goto	u1451
  6256  00272E  EF9B  F013         	goto	u1450
  6257  002732                     u1451:
  6258  002732  EFAC  F013         	goto	l2201
  6259  002736                     u1450:
  6260  002736  5009               	movf	___lodiv@divisor^0,w,c
  6261  002738  5E01               	subwf	___lodiv@dividend^0,f,c
  6262  00273A  500A               	movf	(___lodiv@divisor+1)^0,w,c
  6263  00273C  5A02               	subwfb	(___lodiv@dividend+1)^0,f,c
  6264  00273E  500B               	movf	(___lodiv@divisor+2)^0,w,c
  6265  002740  5A03               	subwfb	(___lodiv@dividend+2)^0,f,c
  6266  002742  500C               	movf	(___lodiv@divisor+3)^0,w,c
  6267  002744  5A04               	subwfb	(___lodiv@dividend+3)^0,f,c
  6268  002746  500D               	movf	(___lodiv@divisor+4)^0,w,c
  6269  002748  5A05               	subwfb	(___lodiv@dividend+4)^0,f,c
  6270  00274A  500E               	movf	(___lodiv@divisor+5)^0,w,c
  6271  00274C  5A06               	subwfb	(___lodiv@dividend+5)^0,f,c
  6272  00274E  500F               	movf	(___lodiv@divisor+6)^0,w,c
  6273  002750  5A07               	subwfb	(___lodiv@dividend+6)^0,f,c
  6274  002752  5010               	movf	(___lodiv@divisor+7)^0,w,c
  6275  002754  5A08               	subwfb	(___lodiv@dividend+7)^0,f,c
  6276  002756  8011               	bsf	___lodiv@quotient^0,0,c
  6277  002758                     l2201:
  6278  002758  90D8               	bcf	status,0,c
  6279  00275A  3210               	rrcf	(___lodiv@divisor+7)^0,f,c
  6280  00275C  320F               	rrcf	(___lodiv@divisor+6)^0,f,c
  6281  00275E  320E               	rrcf	(___lodiv@divisor+5)^0,f,c
  6282  002760  320D               	rrcf	(___lodiv@divisor+4)^0,f,c
  6283  002762  320C               	rrcf	(___lodiv@divisor+3)^0,f,c
  6284  002764  320B               	rrcf	(___lodiv@divisor+2)^0,f,c
  6285  002766  320A               	rrcf	(___lodiv@divisor+1)^0,f,c
  6286  002768  3209               	rrcf	___lodiv@divisor^0,f,c
  6287  00276A  2E19               	decfsz	___lodiv@counter^0,f,c
  6288  00276C  EF7B  F013         	goto	l2193
  6289  002770                     l792:
  6290  002770  C011  F001         	movff	___lodiv@quotient,?___lodiv
  6291  002774  C012  F002         	movff	___lodiv@quotient+1,?___lodiv+1
  6292  002778  C013  F003         	movff	___lodiv@quotient+2,?___lodiv+2
  6293  00277C  C014  F004         	movff	___lodiv@quotient+3,?___lodiv+3
  6294  002780  C015  F005         	movff	___lodiv@quotient+4,?___lodiv+4
  6295  002784  C016  F006         	movff	___lodiv@quotient+5,?___lodiv+5
  6296  002788  C017  F007         	movff	___lodiv@quotient+6,?___lodiv+6
  6297  00278C  C018  F008         	movff	___lodiv@quotient+7,?___lodiv+7
  6298  002790  0012               	return		;funcret
  6299  002792                     __end_of___lodiv:
  6300                           	callstack 0
  6301                           
  6302 ;; *************** function _strncmp *****************
  6303 ;; Defined at:
  6304 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strncmp.c"
  6305 ;; Parameters:    Size  Location     Type
  6306 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  6307 ;;		 -> STR_18(3), STR_17(3), STR_16(17), STR_15(11), 
  6308 ;;		 -> STR_14(15), STR_13(11), STR_12(16), STR_11(10), 
  6309 ;;		 -> STR_10(15), STR_9(15), STR_8(14), STR_7(8), 
  6310 ;;		 -> STR_6(8), STR_5(8), STR_4(9), STR_3(4), 
  6311 ;;		 -> STR_2(11), STR_1(9), 
  6312 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  6313 ;;		 -> STR_30(3), STR_26(3), STR_21(3), 
  6314 ;;  n               2    4[COMRAM] unsigned int 
  6315 ;; Auto vars:     Size  Location     Type
  6316 ;;  r               2    9[COMRAM] PTR const unsigned char 
  6317 ;;		 -> STR_30(3), STR_26(3), STR_21(3), 
  6318 ;;  l               2    7[COMRAM] PTR const unsigned char 
  6319 ;;		 -> STR_18(3), STR_17(3), STR_16(17), STR_15(11), 
  6320 ;;		 -> STR_14(15), STR_13(11), STR_12(16), STR_11(10), 
  6321 ;;		 -> STR_10(15), STR_9(15), STR_8(14), STR_7(8), 
  6322 ;;		 -> STR_6(8), STR_5(8), STR_4(9), STR_3(4), 
  6323 ;;		 -> STR_2(11), STR_1(9), 
  6324 ;; Return value:  Size  Location     Type
  6325 ;;                  2    0[COMRAM] int 
  6326 ;; Registers used:
  6327 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  6328 ;; Tracked objects:
  6329 ;;		On entry : 0/0
  6330 ;;		On exit  : 0/0
  6331 ;;		Unchanged: 0/0
  6332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6333 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6334 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6335 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6336 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6337 ;;Total ram usage:       11 bytes
  6338 ;; Hardware stack levels used: 1
  6339 ;; Hardware stack levels required when called: 1
  6340 ;; This function calls:
  6341 ;;		Nothing
  6342 ;; This function is called by:
  6343 ;;		_vfpfcnvrt
  6344 ;; This function uses a non-reentrant model
  6345 ;;
  6346                           
  6347                           	psect	text26
  6348  002792                     __ptext26:
  6349                           	callstack 0
  6350  002792                     _strncmp:
  6351                           	callstack 26
  6352  002792  C001  F008         	movff	strncmp@_l,strncmp@l
  6353  002796  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  6354  00279A  C003  F00A         	movff	strncmp@_r,strncmp@r
  6355  00279E  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  6356  0027A2  0605               	decf	strncmp@n^0,f,c
  6357  0027A4  A0D8               	btfss	status,0,c
  6358  0027A6  0606               	decf	(strncmp@n+1)^0,f,c
  6359  0027A8  2805               	incf	strncmp@n^0,w,c
  6360  0027AA  E106               	bnz	u1781
  6361  0027AC  2806               	incf	(strncmp@n+1)^0,w,c
  6362  0027AE  A4D8               	btfss	status,2,c
  6363  0027B0  EFDC  F013         	goto	u1781
  6364  0027B4  EFDE  F013         	goto	u1780
  6365  0027B8                     u1781:
  6366  0027B8  EFEB  F013         	goto	l2371
  6367  0027BC                     u1780:
  6368  0027BC  0E00               	movlw	0
  6369  0027BE  6E02               	movwf	(?_strncmp+1)^0,c
  6370  0027C0  0E00               	movlw	0
  6371  0027C2  6E01               	movwf	?_strncmp^0,c
  6372  0027C4  EF37  F014         	goto	l1175
  6373  0027C8                     l2369:
  6374  0027C8  4A08               	infsnz	strncmp@l^0,f,c
  6375  0027CA  2A09               	incf	(strncmp@l+1)^0,f,c
  6376  0027CC  4A0A               	infsnz	strncmp@r^0,f,c
  6377  0027CE  2A0B               	incf	(strncmp@r+1)^0,f,c
  6378  0027D0  0605               	decf	strncmp@n^0,f,c
  6379  0027D2  A0D8               	btfss	status,0,c
  6380  0027D4  0606               	decf	(strncmp@n+1)^0,f,c
  6381  0027D6                     l2371:
  6382  0027D6  C008  FFF6         	movff	strncmp@l,tblptrl
  6383  0027DA  C009  FFF7         	movff	strncmp@l+1,tblptrh
  6384  0027DE                     	if	0	;tblptru may be non-zero
  6385  0027DE                     	endif
  6386  0027DE                     	if	0	;tblptru may be non-zero
  6387  0027DE                     	endif
  6388  0027DE  0008               	tblrd		*
  6389  0027E0  50F5               	movf	tablat,w,c
  6390  0027E2  0900               	iorlw	0
  6391  0027E4  B4D8               	btfsc	status,2,c
  6392  0027E6  EFF7  F013         	goto	u1791
  6393  0027EA  EFF9  F013         	goto	u1790
  6394  0027EE                     u1791:
  6395  0027EE  EF25  F014         	goto	l2379
  6396  0027F2                     u1790:
  6397  0027F2  C00A  FFF6         	movff	strncmp@r,tblptrl
  6398  0027F6  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  6399  0027FA                     	if	0	;tblptru may be non-zero
  6400  0027FA                     	endif
  6401  0027FA                     	if	0	;tblptru may be non-zero
  6402  0027FA                     	endif
  6403  0027FA  0008               	tblrd		*
  6404  0027FC  50F5               	movf	tablat,w,c
  6405  0027FE  0900               	iorlw	0
  6406  002800  B4D8               	btfsc	status,2,c
  6407  002802  EF05  F014         	goto	u1801
  6408  002806  EF07  F014         	goto	u1800
  6409  00280A                     u1801:
  6410  00280A  EF25  F014         	goto	l2379
  6411  00280E                     u1800:
  6412  00280E  5005               	movf	strncmp@n^0,w,c
  6413  002810  1006               	iorwf	(strncmp@n+1)^0,w,c
  6414  002812  B4D8               	btfsc	status,2,c
  6415  002814  EF0E  F014         	goto	u1811
  6416  002818  EF10  F014         	goto	u1810
  6417  00281C                     u1811:
  6418  00281C  EF25  F014         	goto	l2379
  6419  002820                     u1810:
  6420  002820  C008  FFF6         	movff	strncmp@l,tblptrl
  6421  002824  C009  FFF7         	movff	strncmp@l+1,tblptrh
  6422  002828                     	if	0	;tblptru may be non-zero
  6423  002828                     	endif
  6424  002828                     	if	0	;tblptru may be non-zero
  6425  002828                     	endif
  6426  002828  0008               	tblrd		*
  6427  00282A  CFF5 F007          	movff	tablat,??_strncmp
  6428  00282E  C00A  FFF6         	movff	strncmp@r,tblptrl
  6429  002832  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  6430  002836                     	if	0	;tblptru may be non-zero
  6431  002836                     	endif
  6432  002836                     	if	0	;tblptru may be non-zero
  6433  002836                     	endif
  6434  002836  0008               	tblrd		*
  6435  002838  50F5               	movf	tablat,w,c
  6436  00283A  1807               	xorwf	??_strncmp^0,w,c
  6437  00283C  B4D8               	btfsc	status,2,c
  6438  00283E  EF23  F014         	goto	u1821
  6439  002842  EF25  F014         	goto	u1820
  6440  002846                     u1821:
  6441  002846  EFE4  F013         	goto	l2369
  6442  00284A                     u1820:
  6443  00284A                     l2379:
  6444  00284A  C008  FFF6         	movff	strncmp@l,tblptrl
  6445  00284E  C009  FFF7         	movff	strncmp@l+1,tblptrh
  6446  002852                     	if	0	;tblptru may be non-zero
  6447  002852                     	endif
  6448  002852                     	if	0	;tblptru may be non-zero
  6449  002852                     	endif
  6450  002852  0008               	tblrd		*
  6451  002854  CFF5 F007          	movff	tablat,??_strncmp
  6452  002858  C00A  FFF6         	movff	strncmp@r,tblptrl
  6453  00285C  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  6454  002860                     	if	0	;tblptru may be non-zero
  6455  002860                     	endif
  6456  002860                     	if	0	;tblptru may be non-zero
  6457  002860                     	endif
  6458  002860  0008               	tblrd		*
  6459  002862  50F5               	movf	tablat,w,c
  6460  002864  5C07               	subwf	??_strncmp^0,w,c
  6461  002866  6E01               	movwf	?_strncmp^0,c
  6462  002868  6A02               	clrf	(?_strncmp+1)^0,c
  6463  00286A  A0D8               	btfss	status,0,c
  6464  00286C  0602               	decf	(?_strncmp+1)^0,f,c
  6465  00286E                     l1175:
  6466  00286E  0012               	return		;funcret
  6467  002870                     __end_of_strncmp:
  6468                           	callstack 0
  6469                           
  6470 ;; *************** function _direccion2 *****************
  6471 ;; Defined at:
  6472 ;;		line 960 in file "FINAL.c"
  6473 ;; Parameters:    Size  Location     Type
  6474 ;;		None
  6475 ;; Auto vars:     Size  Location     Type
  6476 ;;		None
  6477 ;; Return value:  Size  Location     Type
  6478 ;;                  1    wreg      void 
  6479 ;; Registers used:
  6480 ;;		wreg, status,2, cstack
  6481 ;; Tracked objects:
  6482 ;;		On entry : 0/0
  6483 ;;		On exit  : 0/0
  6484 ;;		Unchanged: 0/0
  6485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6489 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6490 ;;Total ram usage:        0 bytes
  6491 ;; Hardware stack levels used: 1
  6492 ;; Hardware stack levels required when called: 2
  6493 ;; This function calls:
  6494 ;;		_pulso
  6495 ;; This function is called by:
  6496 ;;		_colision
  6497 ;;		_escritura
  6498 ;;		_clean_memory
  6499 ;; This function uses a non-reentrant model
  6500 ;;
  6501                           
  6502                           	psect	text27
  6503  002FC6                     __ptext27:
  6504                           	callstack 0
  6505  002FC6                     _direccion2:
  6506                           	callstack 26
  6507  002FC6                     
  6508                           ;FINAL.c: 963:         PORTB= 0b00001100;
  6509  002FC6  0E0C               	movlw	12
  6510  002FC8  6E81               	movwf	129,c	;volatile
  6511  002FCA                     
  6512                           ;FINAL.c: 964:         pulso();
  6513  002FCA  ECCF  F017         	call	_pulso	;wreg free
  6514  002FCE                     
  6515                           ;FINAL.c: 965:         PORTB= 0b00000000;
  6516  002FCE  0E00               	movlw	0
  6517  002FD0  6E81               	movwf	129,c	;volatile
  6518                           
  6519                           ;FINAL.c: 966:         pulso();
  6520  002FD2  ECCF  F017         	call	_pulso	;wreg free
  6521  002FD6  0012               	return		;funcret
  6522  002FD8                     __end_of_direccion2:
  6523                           	callstack 0
  6524                           
  6525 ;; *************** function _direccion1 *****************
  6526 ;; Defined at:
  6527 ;;		line 951 in file "FINAL.c"
  6528 ;; Parameters:    Size  Location     Type
  6529 ;;		None
  6530 ;; Auto vars:     Size  Location     Type
  6531 ;;		None
  6532 ;; Return value:  Size  Location     Type
  6533 ;;                  1    wreg      void 
  6534 ;; Registers used:
  6535 ;;		wreg, status,2, cstack
  6536 ;; Tracked objects:
  6537 ;;		On entry : 0/0
  6538 ;;		On exit  : 0/0
  6539 ;;		Unchanged: 0/0
  6540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6542 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6544 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6545 ;;Total ram usage:        0 bytes
  6546 ;; Hardware stack levels used: 1
  6547 ;; Hardware stack levels required when called: 2
  6548 ;; This function calls:
  6549 ;;		_pulso
  6550 ;; This function is called by:
  6551 ;;		_main
  6552 ;;		_colision
  6553 ;;		_escritura
  6554 ;;		_clean_memory
  6555 ;; This function uses a non-reentrant model
  6556 ;;
  6557                           
  6558                           	psect	text28
  6559  002FD8                     __ptext28:
  6560                           	callstack 0
  6561  002FD8                     _direccion1:
  6562                           	callstack 28
  6563  002FD8                     
  6564                           ;FINAL.c: 954:         PORTB= 0b00001000;
  6565  002FD8  0E08               	movlw	8
  6566  002FDA  6E81               	movwf	129,c	;volatile
  6567  002FDC                     
  6568                           ;FINAL.c: 955:         pulso();
  6569  002FDC  ECCF  F017         	call	_pulso	;wreg free
  6570  002FE0                     
  6571                           ;FINAL.c: 956:         PORTB= 0b00000000;
  6572  002FE0  0E00               	movlw	0
  6573  002FE2  6E81               	movwf	129,c	;volatile
  6574                           
  6575                           ;FINAL.c: 957:         pulso();
  6576  002FE4  ECCF  F017         	call	_pulso	;wreg free
  6577  002FE8  0012               	return		;funcret
  6578  002FEA                     __end_of_direccion1:
  6579                           	callstack 0
  6580                           
  6581 ;; *************** function _cleanDisp *****************
  6582 ;; Defined at:
  6583 ;;		line 863 in file "FINAL.c"
  6584 ;; Parameters:    Size  Location     Type
  6585 ;;		None
  6586 ;; Auto vars:     Size  Location     Type
  6587 ;;		None
  6588 ;; Return value:  Size  Location     Type
  6589 ;;                  1    wreg      void 
  6590 ;; Registers used:
  6591 ;;		wreg, status,2, cstack
  6592 ;; Tracked objects:
  6593 ;;		On entry : 0/0
  6594 ;;		On exit  : 0/0
  6595 ;;		Unchanged: 0/0
  6596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6599 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6600 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6601 ;;Total ram usage:        1 bytes
  6602 ;; Hardware stack levels used: 1
  6603 ;; Hardware stack levels required when called: 2
  6604 ;; This function calls:
  6605 ;;		_pulso
  6606 ;; This function is called by:
  6607 ;;		_main
  6608 ;;		_colision
  6609 ;;		_escritura
  6610 ;;		_clean_memory
  6611 ;; This function uses a non-reentrant model
  6612 ;;
  6613                           
  6614                           	psect	text29
  6615  002F3E                     __ptext29:
  6616                           	callstack 0
  6617  002F3E                     _cleanDisp:
  6618                           	callstack 26
  6619  002F3E                     
  6620                           ;FINAL.c: 865:  _delay((unsigned long)((10)*(48000000/4000.0)));
  6621  002F3E  0E9C               	movlw	156
  6622  002F40  6E02               	movwf	??_cleanDisp^0,c
  6623  002F42  0ED7               	movlw	215
  6624  002F44                     u2827:
  6625  002F44  2EE8               	decfsz	wreg,f,c
  6626  002F46  D7FE               	bra	u2827
  6627  002F48  2E02               	decfsz	??_cleanDisp^0,f,c
  6628  002F4A  D7FC               	bra	u2827
  6629  002F4C  F000               	nop	
  6630  002F4E                     
  6631                           ;FINAL.c: 866:     PORTB = 0b00000000;
  6632  002F4E  0E00               	movlw	0
  6633  002F50  6E81               	movwf	129,c	;volatile
  6634  002F52                     
  6635                           ;FINAL.c: 867:     pulso();
  6636  002F52  ECCF  F017         	call	_pulso	;wreg free
  6637  002F56                     
  6638                           ;FINAL.c: 868:     PORTB = 0b00000001;
  6639  002F56  0E01               	movlw	1
  6640  002F58  6E81               	movwf	129,c	;volatile
  6641  002F5A                     
  6642                           ;FINAL.c: 869:     pulso();
  6643  002F5A  ECCF  F017         	call	_pulso	;wreg free
  6644  002F5E  0012               	return		;funcret
  6645  002F60                     __end_of_cleanDisp:
  6646                           	callstack 0
  6647                           
  6648 ;; *************** function _Texto *****************
  6649 ;; Defined at:
  6650 ;;		line 784 in file "FINAL.c"
  6651 ;; Parameters:    Size  Location     Type
  6652 ;;  A               2    1[COMRAM] PTR unsigned char 
  6653 ;;		 -> clean_memory@vector(16), escritura@vector(12), colision@vector2(15), colision@vector(15), 
  6654 ;;		 -> main@vector(10), 
  6655 ;; Auto vars:     Size  Location     Type
  6656 ;;  i               1   10[COMRAM] unsigned char 
  6657 ;;  MSB             1    9[COMRAM] unsigned char 
  6658 ;;  aux             1    8[COMRAM] unsigned char 
  6659 ;;  total2          1    7[COMRAM] unsigned char 
  6660 ;;  total1          1    6[COMRAM] unsigned char 
  6661 ;;  LSB             1    5[COMRAM] unsigned char 
  6662 ;; Return value:  Size  Location     Type
  6663 ;;                  1    wreg      unsigned char 
  6664 ;; Registers used:
  6665 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6666 ;; Tracked objects:
  6667 ;;		On entry : 0/0
  6668 ;;		On exit  : 0/0
  6669 ;;		Unchanged: 0/0
  6670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6671 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6672 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6673 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6674 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6675 ;;Total ram usage:       10 bytes
  6676 ;; Hardware stack levels used: 1
  6677 ;; Hardware stack levels required when called: 2
  6678 ;; This function calls:
  6679 ;;		_pulso
  6680 ;; This function is called by:
  6681 ;;		_main
  6682 ;;		_colision
  6683 ;;		_escritura
  6684 ;;		_clean_memory
  6685 ;; This function uses a non-reentrant model
  6686 ;;
  6687                           
  6688                           	psect	text30
  6689  002B82                     __ptext30:
  6690                           	callstack 0
  6691  002B82                     _Texto:
  6692                           	callstack 26
  6693  002B82                     
  6694                           ;FINAL.c: 786:         char i, aux, MSB, LSB, total1, total2;;FINAL.c: 788:         for 
      +                          (i = 0; i < 16; i++ ){
  6695  002B82  0E00               	movlw	0
  6696  002B84  6E0B               	movwf	Texto@i^0,c
  6697  002B86                     l2497:
  6698                           
  6699                           ;FINAL.c: 791:             if(A[i] == 0b00000000){
  6700  002B86  500B               	movf	Texto@i^0,w,c
  6701  002B88  2402               	addwf	Texto@A^0,w,c
  6702  002B8A  6ED9               	movwf	fsr2l,c
  6703  002B8C  0E00               	movlw	0
  6704  002B8E  2003               	addwfc	(Texto@A+1)^0,w,c
  6705  002B90  6EDA               	movwf	fsr2h,c
  6706  002B92  50DF               	movf	indf2,w,c
  6707  002B94  A4D8               	btfss	status,2,c
  6708  002B96  EFCF  F015         	goto	u1921
  6709  002B9A  EFD1  F015         	goto	u1920
  6710  002B9E                     u1921:
  6711  002B9E  EFD3  F015         	goto	l2503
  6712  002BA2                     u1920:
  6713  002BA2  EF13  F016         	goto	l2531
  6714  002BA6                     l2503:
  6715                           
  6716                           ;FINAL.c: 797:             aux = A[i];
  6717  002BA6  500B               	movf	Texto@i^0,w,c
  6718  002BA8  2402               	addwf	Texto@A^0,w,c
  6719  002BAA  6ED9               	movwf	fsr2l,c
  6720  002BAC  0E00               	movlw	0
  6721  002BAE  2003               	addwfc	(Texto@A+1)^0,w,c
  6722  002BB0  6EDA               	movwf	fsr2h,c
  6723  002BB2  50DF               	movf	indf2,w,c
  6724  002BB4  6E09               	movwf	Texto@aux^0,c
  6725  002BB6                     
  6726                           ;FINAL.c: 799:         MSB = 0b11110000 & aux;
  6727  002BB6  5009               	movf	Texto@aux^0,w,c
  6728  002BB8  0BF0               	andlw	240
  6729  002BBA  6E0A               	movwf	Texto@MSB^0,c
  6730  002BBC                     
  6731                           ;FINAL.c: 800:         LSB = 0b00001111 & aux;
  6732  002BBC  5009               	movf	Texto@aux^0,w,c
  6733  002BBE  0B0F               	andlw	15
  6734  002BC0  6E06               	movwf	Texto@LSB^0,c
  6735  002BC2                     
  6736                           ;FINAL.c: 802:         MSB = MSB>>4;
  6737  002BC2  380A               	swapf	Texto@MSB^0,w,c
  6738  002BC4  0B0F               	andlw	15
  6739  002BC6  6E0A               	movwf	Texto@MSB^0,c
  6740  002BC8                     
  6741                           ;FINAL.c: 804:         total1 = MSB + 0b10000000;
  6742  002BC8  500A               	movf	Texto@MSB^0,w,c
  6743  002BCA  0F80               	addlw	128
  6744  002BCC  6E07               	movwf	Texto@total1^0,c
  6745  002BCE                     
  6746                           ;FINAL.c: 805:         total2 = LSB + 0b10000000;
  6747  002BCE  5006               	movf	Texto@LSB^0,w,c
  6748  002BD0  0F80               	addlw	128
  6749  002BD2  6E08               	movwf	Texto@total2^0,c
  6750  002BD4                     
  6751                           ;FINAL.c: 807:         PORTB = total1;
  6752  002BD4  C007  FF81         	movff	Texto@total1,3969	;volatile
  6753  002BD8                     
  6754                           ;FINAL.c: 808:         pulso();
  6755  002BD8  ECCF  F017         	call	_pulso	;wreg free
  6756  002BDC                     
  6757                           ;FINAL.c: 809:         _delay((unsigned long)((30)*(48000000/4000.0)));
  6758  002BDC  0E02               	movlw	2
  6759  002BDE  6E05               	movwf	(??_Texto+1)^0,c
  6760  002BE0  0ED4               	movlw	212
  6761  002BE2  6E04               	movwf	??_Texto^0,c
  6762  002BE4  0E85               	movlw	133
  6763  002BE6                     u2837:
  6764  002BE6  2EE8               	decfsz	wreg,f,c
  6765  002BE8  D7FE               	bra	u2837
  6766  002BEA  2E04               	decfsz	??_Texto^0,f,c
  6767  002BEC  D7FC               	bra	u2837
  6768  002BEE  2E05               	decfsz	(??_Texto+1)^0,f,c
  6769  002BF0  D7FA               	bra	u2837
  6770  002BF2  F000               	nop	
  6771  002BF4                     
  6772                           ;FINAL.c: 810:         PORTB = total2;
  6773  002BF4  C008  FF81         	movff	Texto@total2,3969	;volatile
  6774  002BF8                     
  6775                           ;FINAL.c: 811:         pulso();
  6776  002BF8  ECCF  F017         	call	_pulso	;wreg free
  6777  002BFC                     
  6778                           ;FINAL.c: 812:       _delay((unsigned long)((30)*(48000000/4000.0)));
  6779  002BFC  0E02               	movlw	2
  6780  002BFE  6E05               	movwf	(??_Texto+1)^0,c
  6781  002C00  0ED4               	movlw	212
  6782  002C02  6E04               	movwf	??_Texto^0,c
  6783  002C04  0E85               	movlw	133
  6784  002C06                     u2847:
  6785  002C06  2EE8               	decfsz	wreg,f,c
  6786  002C08  D7FE               	bra	u2847
  6787  002C0A  2E04               	decfsz	??_Texto^0,f,c
  6788  002C0C  D7FC               	bra	u2847
  6789  002C0E  2E05               	decfsz	(??_Texto+1)^0,f,c
  6790  002C10  D7FA               	bra	u2847
  6791  002C12  F000               	nop	
  6792  002C14                     
  6793                           ;FINAL.c: 815:         }
  6794  002C14  2A0B               	incf	Texto@i^0,f,c
  6795  002C16  0E0F               	movlw	15
  6796  002C18  640B               	cpfsgt	Texto@i^0,c
  6797  002C1A  EF11  F016         	goto	u1931
  6798  002C1E  EF13  F016         	goto	u1930
  6799  002C22                     u1931:
  6800  002C22  EFC3  F015         	goto	l2497
  6801  002C26                     u1930:
  6802  002C26                     l2531:
  6803                           
  6804                           ;FINAL.c: 816:         flag = 1 ;
  6805  002C26  0E00               	movlw	0
  6806  002C28  0100               	movlb	0	; () banked
  6807  002C2A  6FED               	movwf	(_flag+1)& (0+255),b
  6808  002C2C  0E01               	movlw	1
  6809  002C2E  6FEC               	movwf	_flag& (0+255),b
  6810  002C30                     
  6811                           ; BSR set to: 0
  6812  002C30  0012               	return		;funcret
  6813  002C32                     __end_of_Texto:
  6814                           	callstack 0
  6815                           
  6816 ;; *************** function _pulso *****************
  6817 ;; Defined at:
  6818 ;;		line 925 in file "FINAL.c"
  6819 ;; Parameters:    Size  Location     Type
  6820 ;;		None
  6821 ;; Auto vars:     Size  Location     Type
  6822 ;;		None
  6823 ;; Return value:  Size  Location     Type
  6824 ;;                  1    wreg      void 
  6825 ;; Registers used:
  6826 ;;		wreg
  6827 ;; Tracked objects:
  6828 ;;		On entry : 0/0
  6829 ;;		On exit  : 0/0
  6830 ;;		Unchanged: 0/0
  6831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6832 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6834 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6835 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6836 ;;Total ram usage:        1 bytes
  6837 ;; Hardware stack levels used: 1
  6838 ;; Hardware stack levels required when called: 1
  6839 ;; This function calls:
  6840 ;;		Nothing
  6841 ;; This function is called by:
  6842 ;;		_main
  6843 ;;		_Texto
  6844 ;;		_cleanDisp
  6845 ;;		_inicializacion
  6846 ;;		_direccion1
  6847 ;;		_direccion2
  6848 ;; This function uses a non-reentrant model
  6849 ;;
  6850                           
  6851                           	psect	text31
  6852  002F9E                     __ptext31:
  6853                           	callstack 0
  6854  002F9E                     _pulso:
  6855                           	callstack 29
  6856  002F9E                     
  6857                           ;FINAL.c: 927:      PORTAbits.RA5 = 1;
  6858  002F9E  8A80               	bsf	128,5,c	;volatile
  6859  002FA0                     
  6860                           ;FINAL.c: 928:      _delay((unsigned long)((10)*(48000000/4000.0)));
  6861  002FA0  0E9C               	movlw	156
  6862  002FA2  6E01               	movwf	??_pulso^0,c
  6863  002FA4  0ED7               	movlw	215
  6864  002FA6                     u2857:
  6865  002FA6  2EE8               	decfsz	wreg,f,c
  6866  002FA8  D7FE               	bra	u2857
  6867  002FAA  2E01               	decfsz	??_pulso^0,f,c
  6868  002FAC  D7FC               	bra	u2857
  6869  002FAE  F000               	nop	
  6870  002FB0                     
  6871                           ;FINAL.c: 929:      PORTAbits.RA5 = 0;
  6872  002FB0  9A80               	bcf	128,5,c	;volatile
  6873  002FB2  0012               	return		;funcret
  6874  002FB4                     __end_of_pulso:
  6875                           	callstack 0
  6876                           
  6877 ;; *************** function _car_pos *****************
  6878 ;; Defined at:
  6879 ;;		line 535 in file "FINAL.c"
  6880 ;; Parameters:    Size  Location     Type
  6881 ;;		None
  6882 ;; Auto vars:     Size  Location     Type
  6883 ;;  pos            16    0[COMRAM] int [8]
  6884 ;; Return value:  Size  Location     Type
  6885 ;;                  2   36[None  ] int 
  6886 ;; Registers used:
  6887 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6888 ;; Tracked objects:
  6889 ;;		On entry : 0/0
  6890 ;;		On exit  : 0/0
  6891 ;;		Unchanged: 0/0
  6892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6893 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6894 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6896 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6897 ;;Total ram usage:       16 bytes
  6898 ;; Hardware stack levels used: 1
  6899 ;; Hardware stack levels required when called: 1
  6900 ;; This function calls:
  6901 ;;		Nothing
  6902 ;; This function is called by:
  6903 ;;		_main
  6904 ;; This function uses a non-reentrant model
  6905 ;;
  6906                           
  6907                           	psect	text32
  6908  002EC4                     __ptext32:
  6909                           	callstack 0
  6910  002EC4                     _car_pos:
  6911                           	callstack 29
  6912  002EC4                     
  6913                           ;FINAL.c: 538:    int pos [8] = {0b10000000,0b01000000,0b00100000,0b00010000,0b00001000,
      +                          0b00000100,0b00000010,0b00000001};
  6914  002EC4  EE20  F0EE         	lfsr	2,car_pos@F7150
  6915  002EC8  EE10  F001         	lfsr	1,car_pos@pos
  6916  002ECC  0E0F               	movlw	15
  6917  002ECE                     u2321:
  6918  002ECE  CFDB FFE3          	movff	plusw2,plusw1
  6919  002ED2  06E8               	decf	wreg,f,c
  6920  002ED4  E2FC               	bc	u2321
  6921  002ED6                     
  6922                           ;FINAL.c: 539:    posicion = pos[place];
  6923  002ED6  90D8               	bcf	status,0,c
  6924  002ED8  0100               	movlb	0	; () banked
  6925  002EDA  35FE               	rlcf	_place& (0+255),w,b
  6926  002EDC  6ED9               	movwf	fsr2l,c
  6927  002EDE  35FF               	rlcf	(_place+1)& (0+255),w,b
  6928  002EE0  6EDA               	movwf	fsr2h,c
  6929  002EE2  0E01               	movlw	low car_pos@pos
  6930  002EE4  26D9               	addwf	fsr2l,f,c
  6931  002EE6  0E00               	movlw	high car_pos@pos
  6932  002EE8  22DA               	addwfc	fsr2h,f,c
  6933  002EEA  CFDE F0E2          	movff	postinc2,_posicion
  6934  002EEE  CFDD F0E3          	movff	postdec2,_posicion+1
  6935  002EF2                     
  6936                           ; BSR set to: 0
  6937  002EF2  0012               	return		;funcret
  6938  002EF4                     __end_of_car_pos:
  6939                           	callstack 0
  6940                           
  6941 ;; *************** function _InitINT *****************
  6942 ;; Defined at:
  6943 ;;		line 838 in file "FINAL.c"
  6944 ;; Parameters:    Size  Location     Type
  6945 ;;		None
  6946 ;; Auto vars:     Size  Location     Type
  6947 ;;		None
  6948 ;; Return value:  Size  Location     Type
  6949 ;;                  1    wreg      void 
  6950 ;; Registers used:
  6951 ;;		wreg, status,2
  6952 ;; Tracked objects:
  6953 ;;		On entry : 0/0
  6954 ;;		On exit  : 0/0
  6955 ;;		Unchanged: 0/0
  6956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6960 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6961 ;;Total ram usage:        0 bytes
  6962 ;; Hardware stack levels used: 1
  6963 ;; Hardware stack levels required when called: 1
  6964 ;; This function calls:
  6965 ;;		Nothing
  6966 ;; This function is called by:
  6967 ;;		_main
  6968 ;; This function uses a non-reentrant model
  6969 ;;
  6970                           
  6971                           	psect	text33
  6972  002F60                     __ptext33:
  6973                           	callstack 0
  6974  002F60                     _InitINT:
  6975                           	callstack 29
  6976  002F60                     
  6977                           ;FINAL.c: 841:     INTCONbits.GIE = 1;
  6978  002F60  8EF2               	bsf	242,7,c	;volatile
  6979                           
  6980                           ;FINAL.c: 842:     INTCON3bits.INT1IE = 1;
  6981  002F62  86F0               	bsf	240,3,c	;volatile
  6982                           
  6983                           ;FINAL.c: 843:     INTCON3bits.INT2IE = 1;
  6984  002F64  88F0               	bsf	240,4,c	;volatile
  6985                           
  6986                           ;FINAL.c: 844:     INTCON2bits.INTEDG1 = 1;
  6987  002F66  8AF1               	bsf	241,5,c	;volatile
  6988                           
  6989                           ;FINAL.c: 845:     INTCON2bits.INTEDG2 = 1;
  6990  002F68  88F1               	bsf	241,4,c	;volatile
  6991                           
  6992                           ;FINAL.c: 846:     INTCON3bits.INT1IF = 0;
  6993  002F6A  90F0               	bcf	240,0,c	;volatile
  6994                           
  6995                           ;FINAL.c: 847:     INTCON3bits.INT2IF = 0;
  6996  002F6C  92F0               	bcf	240,1,c	;volatile
  6997                           
  6998                           ;FINAL.c: 848:     INTCONbits.PEIE = 1;
  6999  002F6E  8CF2               	bsf	242,6,c	;volatile
  7000                           
  7001                           ;FINAL.c: 849:     RCONbits.IPEN = 0;
  7002  002F70  9ED0               	bcf	208,7,c	;volatile
  7003                           
  7004                           ;FINAL.c: 852:     INTCONbits.TMR0IE = 1;
  7005  002F72  8AF2               	bsf	242,5,c	;volatile
  7006                           
  7007                           ;FINAL.c: 854:     INTCONbits.TMR0IF = 0;
  7008  002F74  94F2               	bcf	242,2,c	;volatile
  7009                           
  7010                           ;FINAL.c: 857:     T0CONbits.T0CS = 0;
  7011  002F76  9AD5               	bcf	213,5,c	;volatile
  7012                           
  7013                           ;FINAL.c: 858:     T0CONbits.T08BIT = 0;
  7014  002F78  9CD5               	bcf	213,6,c	;volatile
  7015                           
  7016                           ;FINAL.c: 859:     T0CONbits.PSA = 0;
  7017  002F7A  96D5               	bcf	213,3,c	;volatile
  7018  002F7C                     
  7019                           ;FINAL.c: 860:     T0CONbits.T0PS = 0b111;
  7020  002F7C  0E07               	movlw	7
  7021  002F7E  12D5               	iorwf	213,f,c	;volatile
  7022  002F80  0012               	return		;funcret
  7023  002F82                     __end_of_InitINT:
  7024                           	callstack 0
  7025                           
  7026 ;; *************** function _InitEntradasSalidas *****************
  7027 ;; Defined at:
  7028 ;;		line 820 in file "FINAL.c"
  7029 ;; Parameters:    Size  Location     Type
  7030 ;;		None
  7031 ;; Auto vars:     Size  Location     Type
  7032 ;;		None
  7033 ;; Return value:  Size  Location     Type
  7034 ;;                  1    wreg      void 
  7035 ;; Registers used:
  7036 ;;		wreg, status,2
  7037 ;; Tracked objects:
  7038 ;;		On entry : 0/0
  7039 ;;		On exit  : 0/0
  7040 ;;		Unchanged: 0/0
  7041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7045 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7046 ;;Total ram usage:        0 bytes
  7047 ;; Hardware stack levels used: 1
  7048 ;; Hardware stack levels required when called: 1
  7049 ;; This function calls:
  7050 ;;		Nothing
  7051 ;; This function is called by:
  7052 ;;		_main
  7053 ;; This function uses a non-reentrant model
  7054 ;;
  7055                           
  7056                           	psect	text34
  7057  002F82                     __ptext34:
  7058                           	callstack 0
  7059  002F82                     _InitEntradasSalidas:
  7060                           	callstack 29
  7061  002F82                     
  7062                           ;FINAL.c: 822:     ANCON0 = 0xFF;
  7063  002F82  010F               	movlb	15	; () banked
  7064  002F84  6948               	setf	72,b	;volatile
  7065  002F86                     
  7066                           ; BSR set to: 15
  7067                           ;FINAL.c: 823:     ANCON1 = 0x1F;
  7068  002F86  0E1F               	movlw	31
  7069  002F88  6F49               	movwf	73,b	;volatile
  7070                           
  7071                           ;FINAL.c: 827:     TRISA = 0b11011111;
  7072  002F8A  0EDF               	movlw	223
  7073  002F8C  6E92               	movwf	146,c	;volatile
  7074                           
  7075                           ;FINAL.c: 828:     TRISB = 0b00100000;
  7076  002F8E  0E20               	movlw	32
  7077  002F90  6E93               	movwf	147,c	;volatile
  7078                           
  7079                           ;FINAL.c: 830:     TRISC = 0b00000000;
  7080  002F92  0E00               	movlw	0
  7081  002F94  6E94               	movwf	148,c	;volatile
  7082                           
  7083                           ;FINAL.c: 831:     TRISD = 0b00000000;
  7084  002F96  0E00               	movlw	0
  7085  002F98  6E95               	movwf	149,c	;volatile
  7086  002F9A                     
  7087                           ; BSR set to: 15
  7088                           ;FINAL.c: 834:     LATCbits.LC6 = 1;
  7089  002F9A  8C8B               	bsf	139,6,c	;volatile
  7090  002F9C                     
  7091                           ; BSR set to: 15
  7092  002F9C  0012               	return		;funcret
  7093  002F9E                     __end_of_InitEntradasSalidas:
  7094                           	callstack 0
  7095                           
  7096 ;; *************** function _rutinainterrupciones *****************
  7097 ;; Defined at:
  7098 ;;		line 61 in file "FINAL.c"
  7099 ;; Parameters:    Size  Location     Type
  7100 ;;		None
  7101 ;; Auto vars:     Size  Location     Type
  7102 ;;		None
  7103 ;; Return value:  Size  Location     Type
  7104 ;;                  1    wreg      void 
  7105 ;; Registers used:
  7106 ;;		wreg, status,2, status,0
  7107 ;; Tracked objects:
  7108 ;;		On entry : 0/0
  7109 ;;		On exit  : 0/0
  7110 ;;		Unchanged: 0/0
  7111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7113 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7115 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7116 ;;Total ram usage:        0 bytes
  7117 ;; Hardware stack levels used: 1
  7118 ;; This function calls:
  7119 ;;		Nothing
  7120 ;; This function is called by:
  7121 ;;		Interrupt level 2
  7122 ;; This function uses a non-reentrant model
  7123 ;;
  7124                           
  7125                           	psect	intcode
  7126  000008                     __pintcode:
  7127                           	callstack 0
  7128  000008                     _rutinainterrupciones:
  7129                           	callstack 20
  7130                           
  7131                           ; BSR set to: 15
  7132                           ;incstack = 0
  7133  000008  825E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  7134  00000A                     
  7135                           ;FINAL.c: 63:     if(INTCON3bits.INT1IF){
  7136  00000A  A0F0               	btfss	240,0,c	;volatile
  7137  00000C  EF0A  F000         	goto	i2u237_41
  7138  000010  EF0C  F000         	goto	i2u237_40
  7139  000014                     i2u237_41:
  7140  000014  EF1D  F000         	goto	i2l2849
  7141  000018                     i2u237_40:
  7142  000018                     
  7143                           ;FINAL.c: 67:         INTCON3bits.INT1IF = 0;
  7144  000018  90F0               	bcf	240,0,c	;volatile
  7145  00001A                     
  7146                           ;FINAL.c: 68:         place++;
  7147  00001A  0100               	movlb	0	; () banked
  7148  00001C  4BFE               	infsnz	_place& (0+255),f,b
  7149  00001E  2BFF               	incf	(_place+1)& (0+255),f,b
  7150  000020                     
  7151                           ; BSR set to: 0
  7152                           ;FINAL.c: 70:         if(enter_colision == 1){
  7153  000020  05D6               	decf	_enter_colision& (0+255),w,b
  7154  000022  11D7               	iorwf	(_enter_colision+1)& (0+255),w,b
  7155  000024  A4D8               	btfss	status,2,c
  7156  000026  EF17  F000         	goto	i2u238_41
  7157  00002A  EF19  F000         	goto	i2u238_40
  7158  00002E                     i2u238_41:
  7159  00002E  EF1D  F000         	goto	i2l2849
  7160  000032                     i2u238_40:
  7161  000032                     
  7162                           ; BSR set to: 0
  7163                           ;FINAL.c: 72:             exit_colision = 1;
  7164  000032  0E00               	movlw	0
  7165  000034  6FD5               	movwf	(_exit_colision+1)& (0+255),b
  7166  000036  0E01               	movlw	1
  7167  000038  6FD4               	movwf	_exit_colision& (0+255),b
  7168  00003A                     i2l2849:
  7169                           
  7170                           ;FINAL.c: 82:     if(INTCON3bits.INT2IF){
  7171  00003A  A2F0               	btfss	240,1,c	;volatile
  7172  00003C  EF22  F000         	goto	i2u239_41
  7173  000040  EF24  F000         	goto	i2u239_40
  7174  000044                     i2u239_41:
  7175  000044  EF36  F000         	goto	i2l2859
  7176  000048                     i2u239_40:
  7177  000048                     
  7178                           ;FINAL.c: 86:         INTCON3bits.INT2IF = 0;
  7179  000048  92F0               	bcf	240,1,c	;volatile
  7180  00004A                     
  7181                           ;FINAL.c: 87:         place--;
  7182  00004A  0100               	movlb	0	; () banked
  7183  00004C  07FE               	decf	_place& (0+255),f,b
  7184  00004E  A0D8               	btfss	status,0,c
  7185  000050  07FF               	decf	(_place+1)& (0+255),f,b
  7186  000052                     
  7187                           ; BSR set to: 0
  7188                           ;FINAL.c: 89:         if(enter_colision == 1){
  7189  000052  05D6               	decf	_enter_colision& (0+255),w,b
  7190  000054  11D7               	iorwf	(_enter_colision+1)& (0+255),w,b
  7191  000056  A4D8               	btfss	status,2,c
  7192  000058  EF30  F000         	goto	i2u240_41
  7193  00005C  EF32  F000         	goto	i2u240_40
  7194  000060                     i2u240_41:
  7195  000060  EF36  F000         	goto	i2l2859
  7196  000064                     i2u240_40:
  7197  000064                     
  7198                           ; BSR set to: 0
  7199                           ;FINAL.c: 91:             exit_colision = 1;
  7200  000064  0E00               	movlw	0
  7201  000066  6FD5               	movwf	(_exit_colision+1)& (0+255),b
  7202  000068  0E01               	movlw	1
  7203  00006A  6FD4               	movwf	_exit_colision& (0+255),b
  7204  00006C                     i2l2859:
  7205                           
  7206                           ;FINAL.c: 103:     if(INTCONbits.TMR0IF){
  7207  00006C  A4F2               	btfss	242,2,c	;volatile
  7208  00006E  EF3B  F000         	goto	i2u241_41
  7209  000072  EF3D  F000         	goto	i2u241_40
  7210  000076                     i2u241_41:
  7211  000076  EF4A  F000         	goto	i2l135
  7212  00007A                     i2u241_40:
  7213  00007A                     
  7214                           ;FINAL.c: 106:         INTCONbits.TMR0IF = 0;
  7215  00007A  94F2               	bcf	242,2,c	;volatile
  7216  00007C                     
  7217                           ;FINAL.c: 108:         if(timeron == 1){
  7218  00007C  0100               	movlb	0	; () banked
  7219  00007E  05CE               	decf	_timeron& (0+255),w,b
  7220  000080  11CF               	iorwf	(_timeron+1)& (0+255),w,b
  7221  000082  A4D8               	btfss	status,2,c
  7222  000084  EF46  F000         	goto	i2u242_41
  7223  000088  EF48  F000         	goto	i2u242_40
  7224  00008C                     i2u242_41:
  7225  00008C  EF4A  F000         	goto	i2l135
  7226  000090                     i2u242_40:
  7227  000090                     
  7228                           ; BSR set to: 0
  7229                           ;FINAL.c: 110:         puntaje++;
  7230  000090  4BD8               	infsnz	_puntaje& (0+255),f,b
  7231  000092  2BD9               	incf	(_puntaje+1)& (0+255),f,b
  7232  000094                     i2l135:
  7233  000094  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  7234  000096  0011               	retfie		f
  7235  000098                     __end_of_rutinainterrupciones:
  7236                           	callstack 0
  7237                           
  7238                           	psect	rparam
  7239  0000                     
  7240                           	psect	temp
  7241  00005E                     btemp:
  7242                           	callstack 0
  7243  00005E                     	ds	1
  7244  0000                     int$flags	set	btemp
  7245  0000                     wtemp8	set	btemp+1
  7246  0000                     ttemp5	set	btemp+1
  7247  0000                     ttemp6	set	btemp+4
  7248  0000                     ttemp7	set	btemp+8
  7249                           
  7250                           	psect	config
  7251                           
  7252                           ;Config register CONFIG1L @ 0x1FFF8
  7253                           ;	Watchdog Timer
  7254                           ;	WDTEN = OFF, Disabled - Controlled by SWDTEN bit
  7255                           ;	PLL Prescaler Selection
  7256                           ;	PLLDIV = 3, Divide by 3 (12 MHz oscillator input)
  7257                           ;	PLL Enable Configuration Bit
  7258                           ;	CFGPLLEN = ON, PLL Enabled
  7259                           ;	Stack Overflow/Underflow Reset
  7260                           ;	STVREN = ON, Enabled
  7261                           ;	Extended Instruction Set
  7262                           ;	XINST = OFF, Disabled
  7263  1FFF8                     	org	131064
  7264  1FFF8  AA                 	db	170
  7265                           
  7266                           ;Config register CONFIG1H @ 0x1FFF9
  7267                           ;	CPU System Clock Postscaler
  7268                           ;	CPUDIV = OSC1, No CPU system clock divide
  7269                           ;	Code Protect
  7270                           ;	CP0 = OFF, Program memory is not code-protected
  7271  1FFF9                     	org	131065
  7272  1FFF9  F7                 	db	247
  7273                           
  7274                           ;Config register CONFIG2L @ 0x1FFFA
  7275                           ;	Oscillator
  7276                           ;	OSC = HSPLL, HS+PLL, USB-HS+PLL
  7277                           ;	T1OSC/SOSC Power Selection Bits
  7278                           ;	SOSCSEL = HIGH, High Power T1OSC/SOSC circuit selected
  7279                           ;	EC Clock Out Enable Bit
  7280                           ;	CLKOEC = ON, CLKO output enabled on the RA6 pin
  7281                           ;	Fail-Safe Clock Monitor
  7282                           ;	FCMEN = ON, Enabled
  7283                           ;	Internal External Oscillator Switch Over Mode
  7284                           ;	IESO = ON, Enabled
  7285  1FFFA                     	org	131066
  7286  1FFFA  FD                 	db	253
  7287                           
  7288                           ;Config register CONFIG2H @ 0x1FFFB
  7289                           ;	Watchdog Postscaler
  7290                           ;	WDTPS = 32768, 1:32768
  7291  1FFFB                     	org	131067
  7292  1FFFB  FF                 	db	255
  7293                           
  7294                           ;Config register CONFIG3L @ 0x1FFFC
  7295                           ;	DSWDT Clock Select
  7296                           ;	DSWDTOSC = INTOSCREF, DSWDT uses INTRC
  7297                           ;	RTCC Clock Select
  7298                           ;	RTCOSC = T1OSCREF, RTCC uses T1OSC/T1CKI
  7299                           ;	Deep Sleep BOR
  7300                           ;	DSBOREN = OFF, Disabled
  7301                           ;	Deep Sleep Watchdog Timer
  7302                           ;	DSWDTEN = OFF, Disabled
  7303                           ;	Deep Sleep Watchdog Postscaler
  7304                           ;	DSWDTPS = G2, 1:2,147,483,648 (25.7 days)
  7305  1FFFC                     	org	131068
  7306  1FFFC  F3                 	db	243
  7307                           
  7308                           ;Config register CONFIG3H @ 0x1FFFD
  7309                           ;	IOLOCK One-Way Set Enable bit
  7310                           ;	IOL1WAY = ON, The IOLOCK bit (PPSCON<0>) can be set once
  7311                           ;	ADC 10 or 12 Bit Select
  7312                           ;	ADCSEL = BIT12, 12 - Bit ADC Enabled
  7313                           ;	MSSP address masking
  7314                           ;	MSSP7B_EN = MSK7, 7 Bit address masking mode
  7315  1FFFD                     	org	131069
  7316  1FFFD  F9                 	db	249
  7317                           
  7318                           ;Config register CONFIG4L @ 0x1FFFE
  7319                           ;	Write/Erase Protect Page Start/End Location
  7320                           ;	WPFP = PAGE_127, Write Protect Program Flash Page 127
  7321                           ;	Write/Erase Protect Configuration Region
  7322                           ;	WPCFG = OFF, Configuration Words page not erase/write-protected
  7323  1FFFE                     	org	131070
  7324  1FFFE  FF                 	db	255
  7325                           
  7326                           ;Config register CONFIG4H @ 0x1FFFF
  7327                           ;	Write Protect Disable bit
  7328                           ;	WPDIS = OFF, WPFP<6:0>/WPEND region ignored
  7329                           ;	Write/Erase Protect Region Select bit (valid when WPDIS = 0)
  7330                           ;	WPEND = PAGE_WPFP, Pages WPFP<6:0> through Configuration Words erase/write protected
  7331                           ;	Low Speed USB mode with 48 MHz system clock bit
  7332                           ;	LS48MHZ = SYS48X8, System clock at 48 MHz USB CLKEN divide-by is set to 8
  7333  1FFFF                     	org	131071
  7334  1FFFF  FB                 	db	251
  7335                           tosu	equ	0xFFF
  7336                           tosh	equ	0xFFE
  7337                           tosl	equ	0xFFD
  7338                           stkptr	equ	0xFFC
  7339                           pclatu	equ	0xFFB
  7340                           pclath	equ	0xFFA
  7341                           pcl	equ	0xFF9
  7342                           tblptru	equ	0xFF8
  7343                           tblptrh	equ	0xFF7
  7344                           tblptrl	equ	0xFF6
  7345                           tablat	equ	0xFF5
  7346                           prodh	equ	0xFF4
  7347                           prodl	equ	0xFF3
  7348                           indf0	equ	0xFEF
  7349                           postinc0	equ	0xFEE
  7350                           postdec0	equ	0xFED
  7351                           preinc0	equ	0xFEC
  7352                           plusw0	equ	0xFEB
  7353                           fsr0h	equ	0xFEA
  7354                           fsr0l	equ	0xFE9
  7355                           wreg	equ	0xFE8
  7356                           indf1	equ	0xFE7
  7357                           postinc1	equ	0xFE6
  7358                           postdec1	equ	0xFE5
  7359                           preinc1	equ	0xFE4
  7360                           plusw1	equ	0xFE3
  7361                           fsr1h	equ	0xFE2
  7362                           fsr1l	equ	0xFE1
  7363                           bsr	equ	0xFE0
  7364                           indf2	equ	0xFDF
  7365                           postinc2	equ	0xFDE
  7366                           postdec2	equ	0xFDD
  7367                           preinc2	equ	0xFDC
  7368                           plusw2	equ	0xFDB
  7369                           fsr2h	equ	0xFDA
  7370                           fsr2l	equ	0xFD9
  7371                           status	equ	0xFD8

Data Sizes:
    Strings     190
    Constant    0
    Data        544
    BSS         74
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     93      93
    BANK0           160    100     160
    BANK1           256    256     256
    BANK2           256    256     256
    BANK3           256      0      48
    BANK4           256      0     256
    BANK5           256      0     256
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          176      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_30(CODE[3]), STR_26(CODE[3]), STR_21(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_30(CODE[3]), STR_26(CODE[3]), STR_21(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_18(CODE[3]), STR_17(CODE[3]), STR_16(CODE[17]), STR_15(CODE[11]), 
		 -> STR_14(CODE[15]), STR_13(CODE[11]), STR_12(CODE[16]), STR_11(CODE[10]), 
		 -> STR_10(CODE[15]), STR_9(CODE[15]), STR_8(CODE[14]), STR_7(CODE[8]), 
		 -> STR_6(CODE[8]), STR_5(CODE[8]), STR_4(CODE[9]), STR_3(CODE[4]), 
		 -> STR_2(CODE[11]), STR_1(CODE[9]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_18(CODE[3]), STR_17(CODE[3]), STR_16(CODE[17]), STR_15(CODE[11]), 
		 -> STR_14(CODE[15]), STR_13(CODE[11]), STR_12(CODE[16]), STR_11(CODE[10]), 
		 -> STR_10(CODE[15]), STR_9(CODE[15]), STR_8(CODE[14]), STR_7(CODE[8]), 
		 -> STR_6(CODE[8]), STR_5(CODE[8]), STR_4(CODE[9]), STR_3(CODE[4]), 
		 -> STR_2(CODE[11]), STR_1(CODE[9]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK3[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK3[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK3[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_18(CODE[3]), STR_17(CODE[3]), STR_16(CODE[17]), STR_15(CODE[11]), 
		 -> STR_14(CODE[15]), STR_13(CODE[11]), STR_12(CODE[16]), STR_11(CODE[10]), 
		 -> STR_10(CODE[15]), STR_9(CODE[15]), STR_8(CODE[14]), STR_7(CODE[8]), 
		 -> STR_6(CODE[8]), STR_5(CODE[8]), STR_4(CODE[9]), STR_3(CODE[4]), 
		 -> STR_2(CODE[11]), STR_1(CODE[9]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 17
		 -> STR_18(CODE[3]), STR_17(CODE[3]), STR_16(CODE[17]), STR_15(CODE[11]), 
		 -> STR_14(CODE[15]), STR_13(CODE[11]), STR_12(CODE[16]), STR_11(CODE[10]), 
		 -> STR_10(CODE[15]), STR_9(CODE[15]), STR_8(CODE[14]), STR_7(CODE[8]), 
		 -> STR_6(CODE[8]), STR_5(CODE[8]), STR_4(CODE[9]), STR_3(CODE[4]), 
		 -> STR_2(CODE[11]), STR_1(CODE[9]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK3[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_18(CODE[3]), STR_17(CODE[3]), STR_16(CODE[17]), STR_15(CODE[11]), 
		 -> STR_14(CODE[15]), STR_13(CODE[11]), STR_12(CODE[16]), STR_11(CODE[10]), 
		 -> STR_10(CODE[15]), STR_9(CODE[15]), STR_8(CODE[14]), STR_7(CODE[8]), 
		 -> STR_6(CODE[8]), STR_5(CODE[8]), STR_4(CODE[9]), STR_3(CODE[4]), 
		 -> STR_2(CODE[11]), STR_1(CODE[9]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 16
		 -> clean_memory@vector(BANK0[16]), escritura@vector(BANK0[12]), colision@vector2(BANK0[15]), colision@vector(BANK0[15]), 
		 -> main@vector(BANK0[10]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1605$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S1605$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    Texto@A	PTR unsigned char  size(2) Largest target is 16
		 -> clean_memory@vector(BANK0[16]), escritura@vector(BANK0[12]), colision@vector2(BANK0[15]), colision@vector(BANK0[15]), 
		 -> main@vector(BANK0[10]), 


Critical Paths under _main in COMRAM

    _main->_clean_memory
    _inicializacion->_pulso
    _colision->_escritura
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _utoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _direccion2->_pulso
    _direccion1->_pulso
    _cleanDisp->_pulso
    _Texto->_pulso

Critical Paths under _rutinainterrupciones in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_colision
    _colision->_escritura
    _escritura->_sprintf
    _clean_memory->_sprintf

Critical Paths under _rutinainterrupciones in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _rutinainterrupciones in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _rutinainterrupciones in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _rutinainterrupciones in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _rutinainterrupciones in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _rutinainterrupciones in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _rutinainterrupciones in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _rutinainterrupciones in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _rutinainterrupciones in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _rutinainterrupciones in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _rutinainterrupciones in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _rutinainterrupciones in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _rutinainterrupciones in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _rutinainterrupciones in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _rutinainterrupciones in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               559   559      0   70941
                                             86 BANK0     14    14      0
                                              0 BANK1    256   256      0
                                              0 BANK2    256   256      0
                _InitEntradasSalidas
                            _InitINT
                              _Texto
                             ___wmul
                            _car_pos
                          _cleanDisp
                       _clean_memory
                           _colision
                          _configSPI
                         _direccion1
                     _inicializacion
                               _mapa
                              _mapeo
                              _pulso
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _mapeo                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _mapa                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _inicializacion                                       2     2      0       0
                                              1 COMRAM     2     2      0
                              _pulso
 ---------------------------------------------------------------------------------
 (1) _configSPI                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _colision                                            48    48      0   36301
                                             38 BANK0     48    48      0
                              _Texto
                            ___lwdiv
                             ___wmul
                          _cleanDisp
                         _direccion1
                         _direccion2
                          _escritura
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _escritura                                           21    21      0   18260
                                             91 COMRAM     2     2      0
                                             19 BANK0     19    19      0
                              _Texto
                            ___lwdiv
                             ___wmul
                          _cleanDisp
                         _direccion1
                         _direccion2
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     905
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     466
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _clean_memory                                        21    21      0   16711
                                             91 COMRAM     2     2      0
                                             19 BANK0     19    19      0
                              _Texto
                          _cleanDisp
                         _direccion1
                         _direccion2
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    15      6   14840
                                              0 BANK0     19    13      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   11899
                                             83 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           46    40      6   11533
                                             62 COMRAM    21    15      6
                              _fputc
                            _strncmp
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                35    24     11    4647
                                             27 COMRAM    35    24     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              6     4      2     388
                                              6 COMRAM     6     4      2
                            _islower
 ---------------------------------------------------------------------------------
 (6) _islower                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isalpha                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) _utoa                                                32    22     10    4139
                                             27 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2937
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) ___lomod                                             17     1     16     311
                                              0 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (5) ___lodiv                                             25     9     16     314
                                              0 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     909
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (3) _direccion2                                           0     0      0       0
                              _pulso
 ---------------------------------------------------------------------------------
 (1) _direccion1                                           0     0      0       0
                              _pulso
 ---------------------------------------------------------------------------------
 (3) _cleanDisp                                            1     1      0       0
                                              1 COMRAM     1     1      0
                              _pulso
 ---------------------------------------------------------------------------------
 (3) _Texto                                               10     8      2    1662
                                              1 COMRAM    10     8      2
                              _pulso
 ---------------------------------------------------------------------------------
 (1) _pulso                                                1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _car_pos                                             16    16      0      24
                                              0 COMRAM    16    16      0
 ---------------------------------------------------------------------------------
 (1) _InitINT                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitEntradasSalidas                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _rutinainterrupciones                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitEntradasSalidas
   _InitINT
   _Texto
     _pulso
   ___wmul
   _car_pos
   _cleanDisp
     _pulso
   _clean_memory
     _Texto
     _cleanDisp
     _direccion1
       _pulso
     _direccion2
       _pulso
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _fputc
             _putch
           _strncmp
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
               _fputs
                 _fputc
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
             _toupper
               _islower
   _colision
     _Texto
     ___lwdiv
     ___wmul
     _cleanDisp
     _direccion1
     _direccion2
     _escritura
       _Texto
       ___lwdiv
       ___wmul
       _cleanDisp
       _direccion1
       _direccion2
       _sprintf
     _sprintf
   _configSPI
   _direccion1
   _inicializacion
     _pulso
   _mapa
   _mapeo
   _pulso
   _sprintf

 _rutinainterrupciones (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EAF      0       0      49        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0     100      15      100.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0     100      13      100.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      30      11       18.8%
BITBANK2           100      0       0       8        0.0%
BANK2              100    100     100       9      100.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100    100     100       7      100.0%
BITBANK14           B0      0       0      32        0.0%
BANK14              B0      0       0      33        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     64      A0       5      100.0%
BITBIGSFRlllllh     65      0       0      45        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5D      5D       1       98.9%
BITBIGSFRllllh      36      0       0      44        0.0%
BITBIGSFRlllllh     21      0       0      46        0.0%
BITBIGSFRllhlhh     1D      0       0      39        0.0%
BITBIGSFRlh         18      0       0      35        0.0%
BITBIGSFRllllll      F      0       0      47        0.0%
BITBIGSFRhh          D      0       0      34        0.0%
BITBIGSFRllhlhl      8      0       0      40        0.0%
BITBIGSFRllhlhl      8      0       0      41        0.0%
BITBIGSFRlllh        8      0       0      43        0.0%
BITBIGSFRllhhhl      6      0       0      37        0.0%
BITBIGSFRllhll       5      0       0      42        0.0%
BITBIGSFRllhhhh      4      0       0      36        0.0%
BITBIGSFRllhhlh      1      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     52D      48        0.0%
DATA                 0      0     52D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Sun Jul 10 19:38:22 2022

                           _i 00E0                             _j 00DE                             _k 00DC  
                           _t 00DA           ___wmul@multiplicand 0003                           l200 1910  
                         l211 1956                           l203 1922                           l212 1958  
                         l205 1930                           l310 2078                           l222 19D0  
                         l214 1966                           l206 1932                           l231 1A16  
                         l215 196E                           l312 2086                           l304 2036  
                         l240 1A4A                           l208 1940                           l321 20C2  
                         l313 208C                           l233 1A24                           l225 19F2  
                         l217 197C                           l209 1948                           l153 144A  
                         l322 211E                           l306 2044                           l234 1A28  
                         l218 197E                           l323 20E6                           l315 209A  
                         l307 2064                           l260 2F80                           l332 212E  
                         l324 20EC                           l316 20A0                           l244 1B62  
                         l236 1A36                           l228 1A04                           l341 216A  
                         l333 2134                           l309 2072                           l237 1A3A  
                         l174 2EF2                           l254 2C30                           l342 216C  
                         l326 20FA                           l318 20AE                           l182 2334  
                         l263 2F5E                           l335 2142                           l327 20FC  
                         l319 20B4                           l239 1A48                           l191 18DC  
                         l247 300A                           l344 217A                           l336 2148  
                         l272 2F3C                           l257 2F9C                           l345 2180  
                         l329 210A                           l185 237E                           l281 2FC4  
                         l338 2156                           l354 2F18                           l194 18EE  
                         l266 24A0                           l275 2FE8                           l347 218E  
                         l339 215C                           l348 21F2                           l188 18BA  
                         l269 2FB2                           l349 21F2                           l197 1900  
                         l278 2FD6                           l199 190E                           l802 291E  
                         l809 293E                           l852 2CA4                           l845 2C9C  
                         l792 2770                           l799 2790                           _map 00E8  
                         _pad 2A0A                           fsr1 000FE1                           fsr2 000FD9  
                         wreg 000FE8                          l1111 1E08                          l1032 2D58  
                        l1130 2D06                          l1116 1842                          l1133 2E1C  
                        l1109 1DA4                          l1070 2ACE                          l2201 2758  
                        l1065 2A50                          l1129 2CFE                          l1154 2A08  
                        l1162 2DE0                          l1090 1B9C                          l2203 276A  
                        l2211 28AA                          l1171 2EC2                          l1075 1E42  
                        l1139 2E8C                          l3011 12EC                          l3003 12D8  
                        l1068 2A92                          l1092 1BA4                          l2213 28B8  
                        l2205 2870                          l1165 300C                          l2221 2A0A  
                        l1085 200C                          l1077 1E4A                          l2301 1B76  
                        l3021 131C                          l3013 12F4                          l1175 286E  
                        l2215 28E6                          l2207 288E                          l2151 2964  
                        l2231 2A5C                          l2223 2A1A                          l2311 1BEA  
                        l2303 1B90                          l3031 136C                          l3023 1320  
                        l2217 2906                          l2209 2896                          l2153 296E  
                        l2161 2D9E                          l2233 2A70                          l2225 2A2E  
                        l1185 2D94                          l2321 1C2E                          l2313 1BF4  
                        l2305 1BBA                          l2401 1572                          l3033 1380  
                        l3025 1332                          l3017 1314                          l3009 12E0  
                        l1194 2E54                          l2219 2918                          l2155 298C  
                        l2147 2940                          l2163 2DAA                          l2171 2E9A  
                        l2235 2A74                          l2227 2A3C                          l2243 2E56  
                        l2251 2D5A                          l2331 1C66                          l2315 1BFA  
                        l2307 1BC2                          l2411 1616                          l3051 1404  
                        l3035 1384                          l3027 1336                          l3019 1318  
                        l3043 13A4                          l1188 2D9C                          l2157 29C2  
                        l2149 2952                          l2165 2DBC                          l2173 2E9E  
                        l2237 2AA2                          l2229 2A48                          l2261 1E0A  
                        l2341 1CC8                          l2333 1C98                          l2325 1C3A  
                        l2317 1C02                          l2309 1BE2                          l2413 162C  
                        l2421 16B2                          l3053 1418                          l3029 135A  
                        l3045 13A8                          l2511 2BC8                          l2503 2BA6  
                        l2191 26E8                          l2183 26A2                          l2167 2DC0  
                        l2175 2EB6                          l2239 2AB6                          l2271 1E7A  
                        l2263 1E1A                          l2247 2DE2                          l2255 2D5A  
                        l2351 1D94                          l2335 1CAC                          l2319 1C1E  
                        l2343 1D26                          l2423 16E8                          l2415 163A  
                        l2407 15CE                          l3055 1424                          l3047 13E4  
                        l3039 139C                          l2521 2BF4                          l2513 2BCE  
                        l2505 2BB6                          l2193 26F6                          l2185 26AE  
                        l2169 2E8E                          l2281 1F0C                          l2273 1E84  
                        l2265 1E1C                          l2257 2D88                          l2353 1DB4  
                        l2345 1D42                          l2337 1CBC                          l2441 17E6  
                        l2425 171E                          l2417 1676                          l2409 15F2  
                        l2601 198C                          l3057 142A                          l3049 13E8  
                        l2523 2BF8                          l2515 2BD4                          l2507 2BBC  
                        l2531 2C26                          l2371 27D6                          l2363 2792  
                        l2195 2708                          l2187 26CC                          l2291 1FD4  
                        l2275 1E8A                          l2283 1F70                          l2267 1E36  
                        l2179 2E1E                          l2355 1DBA                          l2347 1D60  
                        l2339 1CC2                          l2427 1744                          l2435 17A0  
                        l2451 180C                          l2611 19DE                          l2603 19B6  
                        l2461 2FA0                          l2525 2BFC                          l2517 2BD8  
                        l2509 2BC2                          l2541 2F5A                          l2533 2F3E  
                        l2373 27F2                          l2365 27BC                          l2197 2736  
                        l2189 26D4                          l2285 1F82                          l2293 1FE4  
                        l2277 1F00                          l2269 1E72                          l2357 1DCA  
                        l2349 1D7A                          l2453 1830                          l2437 17C4  
                        l2445 17F2                          l2429 1754                          l2621 1A70  
                        l2613 19E2                          l2605 19BA                          l2701 2418  
                        l2463 2FB0                          l2527 2C14                          l2519 2BDC  
                        l2535 2F4E                          l2543 2FC6                          l2375 280E  
                        l2199 2756                          l2287 1FA0                          l2279 1F06  
                        l2359 1DE0                          l2447 1800                          l2439 17D2  
                        l2391 1496                          l2383 144E                          l2471 2CE2  
                        l2551 2F10                          l2631 1A9E                          l2623 1A74  
                        l2615 1A00                          l2607 19BE                          l2711 2440  
                        l2703 241C                          l2529 2C16                          l2537 2F52  
                        l2473 2FD8                          l2545 2FCA                          l2377 2820  
                        l2369 27C8                          l2289 1FBA                          l2297 1B64  
                        l2393 14BA                          l2385 1472                          l2465 2CA6  
                        l2481 2D1A                          l2561 2C54                          l2641 1AF4  
                        l2633 1ABC                          l2625 1A78                          l2617 1A12  
                        l2609 19C0                          l2801 223E                          l2721 246C  
                        l2713 2448                          l2705 2420                          l2459 2F9E  
                        l2491 2B82                          l2539 2F56                          l2475 2FDC  
                        l2547 2FCE                          l2379 284A                          l2299 1B74  
                        l2395 1504                          l2387 1480                          l2467 2CAE  
                        l2483 2D22                          l2571 2C8E                          l2563 2C5C  
                        l2555 2C32                          l2651 1B4C                          l2643 1AFC  
                        l2635 1AC8                          l2627 1A8E                          l2619 1A58  
                        l2811 227A                          l2803 2258                          l2731 2498  
                        l2723 2470                          l2715 244C                          l2707 2424  
                        l2733 2F60                          l2477 2FE0                          l2389 1492  
                        l2469 2CBC                          l2485 2D2A                          l2741 2030  
                        l2573 2C90                          l2565 2C6A                          l2557 2C3A  
                        l2549 2EF4                          l2645 1B12                          l2637 1ADE  
                        l2629 1A9A                          l2581 184E                          l2821 22F6  
                        l2813 2286                          l2805 225C                          l2725 2474  
                        l2717 2450                          l2709 2428                          l2661 2F3A  
                        l2653 2F1A                          l2901 1068                          l2663 2F82  
                        l2735 2F7C                          l2399 153C                          l2487 2D46  
                        l2479 2D08                          l2751 2074                          l2743 2032  
                        l2575 2C96                          l2567 2C70                          l2559 2C4C  
                        l2647 1B1E                          l2639 1AE4                          l2591 18C8  
                        l2583 1852                          l2831 234E                          l2823 230C  
                        l2815 228A                          l2807 2260                          l2671 2FBC  
                        l2727 2478                          l2719 2468                          l2655 2F1C  
                        l2911 10C2                          l2903 1082                          l2665 2F86  
                        l2497 2B86                          l2761 20DC                          l2753 2088  
                        l2745 2048                          l2737 200E                          l2569 2C86  
                        l2649 1B22                          l2593 18CC                          l2585 1868  
                        l2577 1844                          l2833 2360                          l2825 2314  
                        l2817 22CE                          l2809 2264                          l2673 2FBE  
                        l2729 2494                          l2681 2398                          l2657 2F24  
                        l2921 10FA                          l2913 10C6                          l2905 1086  
                        l2667 2F9A                          l2771 2144                          l2763 20E8  
                        l2755 209C                          l2747 205E                          l2739 2024  
                        l2595 18EA                          l2587 1874                          l2579 184A  
                        l2819 22EA                          l2675 2FC0                          l2691 23D8  
                        l2683 239C                          l2659 2F30                          l2931 111C  
                        l2923 10FC                          l2915 10DC                          l2907 109C  
                        l2781 21C6                          l2773 2158                          l2765 2118  
                        l2757 20B0                          l2749 2060                          l2597 18FC  
                        l2589 18B8                          l2829 2338                          l2837 236A  
                        l2677 2FC2                          l2669 2FB4                          l2693 23DC  
                        l2685 23A0                          l2941 1138                          l2925 1114  
                        l2917 10E8                          l2909 10A8                          ?_pad 0011  
                        l2783 21CA                          l2775 2196                          l2759 20C6  
                        l2599 191E                          l2791 220E                          l2695 23E0  
                        l2687 23B8                          l2679 2380                          l2951 1164  
                        l2919 10F2                          l2871 0FDE                          l2785 2EC4  
                        l2777 219E                          l2769 2130                          l2793 2210  
                        l2697 23FC                          l2689 23C0                          l2961 11C4  
                        l2953 1176                          l2945 1158                          l2937 1124  
                        l2881 0FF2                          l2873 0FE2                          l2787 2ED6  
                        l2779 21BA                          l2795 2218                          l2699 2400  
                        l2963 11C8                          l2955 117A                          l2947 115C  
                        l2971 11E8                          l2939 1130                          l2891 101C  
                        l2883 0FF6                          l2875 0FE6                          l2867 0FC0  
                        l2797 221C                          l2789 21F8                          l2981 124C  
                        l2957 119E                          l2949 1160                          l2973 11EC  
                        l2893 1028                          l2885 0FFA                          l2877 0FEA  
                        l2869 0FDA                          l2799 2232                          l2991 1294  
                        l2983 1262                          l2975 1228                          l2967 11E0  
                        l2959 11B0                          l2895 1042                          l2887 0FFE  
                        l2879 0FEE                          l2993 12AA                          l2985 126E  
                        l2977 122C                          l2897 1046                          l2889 1008  
                        l2995 12B6                          l2987 1274                          l2979 1248  
                        l2899 105C                          l2997 12CE                          l2989 1290  
                        STR_1 0F88                          STR_2 0F5D                          STR_3 0FB2  
                        STR_4 0F91                          STR_5 0F9A                          STR_6 0FA2  
                        STR_7 0FAA                          STR_8 0F4F                          STR_9 0F22  
                        u2000 190E                          u2001 190A                          u2010 191E  
                        u2011 191A                          u2100 1A00                          u2020 1930  
                        u2101 19FC                          u2021 192C                          u2110 1A12  
                        u2030 1940                          u2111 1A0E                          u2031 193C  
                        u1400 2E4E                          u2200 209A                          u2120 1A24  
                        u2040 1956                          u1401 2E48                          u2201 2096  
                        u2121 1A20                          u2041 1952                          u1410 2E50  
                        u2210 20AE                          u2130 1A36                          u2050 1966  
                        u2211 20AA                          u2131 1A32                          u2051 1962  
                        u1340 2952                          u1500 2A3C                          u2300 217A  
                        u2220 20C2                          u2140 1A48                          u2060 197C  
                        u1421 26A8                          u1341 294E                          u1501 2A38  
                        u2301 2176                          u2221 20BE                          u2141 1A44  
                        u2061 1978                          u1430 26CC                          u1350 2964  
                        u1510 2A92                          u2310 218E                          u2230 20FA  
                        u2150 1A58                          u2070 198C                          u1431 26C8  
                        u1351 2960                          u1511 2A8E                          u2311 218A  
                        u2231 20F6                          u2151 1A54                          u2071 1988  
                        _LATC 000F8B                          u1440 26F6                          u1360 298C  
                        u1520 2AA2                          u1600 1F82                          u2240 210A  
                        u2160 1AF4                          u2080 19B6                          _LATD 000F8C  
                        u2321 2ECE                          u1441 26F2                          u1361 2988  
                        u1521 2A9E                          u1601 1F7E                          u2241 2106  
                        u2161 1AF0                          u2081 19B2                          u1450 2736  
                        u1370 29C2                          u1610 1FA0                          u1530 2E86  
                        u2250 2118                          u2170 2044                          u2090 19DE  
                        u2330 220E                          u1451 2732                          u1371 29BE  
                        u1611 1F9C                          u1531 2E80                          u2251 2114  
                        u2171 2040                          u2091 19DA                          u2331 220A  
                        u1460 288E                          u1380 2DE0                          u1620 1FBA  
                        u1540 2E88                          u1700 1C98                          u2260 212E  
                        u2180 2072                          u1461 288A                          u1381 2DDC  
                        u1621 1FB6                          u1701 1C94                          u2261 212A  
                        u2181 206E                          u2341 2300                          u2501 12C0  
                        u1470 28B8                          u1390 2EB6                          u1630 1FD4  
                        u1550 2E16                          u1710 1D00                          u2270 2142  
                        u2190 2086                          u2350 2330                          u2510 1310  
                        u1471 28B4                          u1391 2EB2                          u1631 1FD0  
                        u1551 2E10                          u2271 213E                          u2191 2082  
                        u2351 232C                          u2511 130C                          u2431 1106  
                        u1800 280E                          u1480 28E6                          u1640 1FE4  
                        u1560 2E18                          u1720 1D42                          u2280 2156  
                        u2360 237E                          u2520 1380                          u2440 1154  
                        u1801 280A                          u1481 28E2                          u1641 1FE0  
                        u1721 1D3E                          u2281 2152                          u2361 237A  
                        u2521 137C                          u2441 1150                          u1810 2820  
                        u1490 2A1A                          u1570 2D88                          u1730 1D60  
                        u1650 1B74                          u2290 216A                          u2530 1398  
                        u2450 11C4                          u1811 281C                          u1491 2A16  
                        u1571 2D84                          u1731 1D5C                          u1715 1CEE  
                        u1651 1B70                          u2291 2166                          u2531 1394  
                        u2451 11C0                          u1820 284A                          u1580 1E1A  
                        u1740 1D7A                          u1660 1B90                          u1900 17C4  
                        u2540 13E4                          u2460 11DC                          u1821 2846  
                        u1581 1E16                          u1741 1D76                          u1661 1B8C  
                        u1901 17C0                          u2541 13E0                          u2461 11D8  
                        u1590 1E36                          u1750 1D94                          u1670 1BBA  
                        u1830 1472                          u1910 2CFE                          u2550 1404  
                        u2470 1228                          u1591 1E32                          u1751 1D90  
                        u1671 1BB6                          u1831 146E                          u1911 2CFA  
                        u2551 1400                          u2471 1224                          u2607 116C  
                        u1920 2BA2                          u1760 1DA4                          u1680 1C1E  
                        u1840 14BA                          u2560 1446                          u2480 1248  
                        u1921 2B9E                          u1761 1DA0                          u1681 1C1A  
                        u1841 14B6                          u2561 1442                          u2481 1244  
                        u2617 11A6                          u1930 2C26                          u1770 1DB4  
                        u1690 1C66                          u1850 1572                          u2490 1290  
                        u1931 2C22                          u1771 1DB0                          u1691 1C62  
                        u1851 156E                          u2707 245A                          u2627 1328  
                        u2491 128C                          u1780 27BC                          u1860 15F2  
                        u1940 2C4C                          u1781 27B8                          u1861 15EE  
                        u1941 2C48                          u2717 2482                          u2637 1362  
                        u1790 27F2                          u1870 1616                          u1950 2C6A  
                        u1791 27EE                          u1871 1612                          u2807 2052  
                        u1951 2C66                          u2727 224A                          u2647 238A  
                        u1880 16E8                          u1960 2C86                          u1881 16E4  
                        u2817 20D0                          u1961 2C82                          u2737 2356  
                        u2657 23AA                          u2577 1034                          u1890 171E  
                        u1970 18C8                          u2827 2F44                          u1891 171A  
                        u2747 18D2                          u1971 18C4                          u2667 23CA  
                        u2587 1074                          u1980 18EA                          u2837 2BE6  
                        u2757 19C6                          u1981 18E6                          u2677 23EA  
                        u2597 10B4                          u1990 18FC                          u2847 2C06  
                        u2767 19E8                          u1991 18F8                          u2687 240A  
                        u2857 2FA6                          u2777 1A62                          u2697 2432  
                        u2787 1AD2                          u2797 1B56                          _TMR0 000FD6  
                        _dbuf 0300                          _map2 00E6                          _map3 00E4  
                        _flag 00EC                          _main 0FC0                          _mapa 300A  
                        _prec 00C8                          _nout 00C4                          pad@i 0018  
                        pad@p 0015                          fsr1h 000FE2                          fsr2h 000FDA  
                        indf2 000FDF                          fsr1l 000FE1                          pad@w 001A  
                        fsr2l 000FD9                          btemp 005E                          _utoa 1E0A  
                        _xtoa 1B64                          prodh 000FF4                          prodl 000FF3  
                        start 0098                  ___param_bank 000000             clean_memory@dato1 0083  
           clean_memory@dato2 0084               __end_of_InitINT 2F82                         ??_pad 0017  
                       ?_main 0001                         ?_mapa 0001                         STR_10 0F40  
                       STR_11 0F7E                         STR_12 0F12                         STR_21 0F7B  
                       STR_13 0F73                         STR_30 0FB6                         STR_14 0F31  
                       STR_15 0F68                         STR_24 0FB9                         STR_16 0F01  
                       STR_17 0FBC                         STR_18 0FBC                         STR_26 0FB9  
                       STR_28 0FB6                         ?_utoa 001C               __end_of___lodiv 2792  
                       ?_xtoa 001C          __end_of_clean_memory 21F8               __end_of___lomod 2940  
             __end_of___lwdiv 2CA6                         i2l135 0094                  vfpfcnvrt@fmt 0041  
                vfpfcnvrt@llu 004C                         _PORTB 000F81                         _TRISA 000F92  
                       _TRISB 000F93                         _TRISC 000F94                         _TRISD 000F95  
             __end_of_car_pos 2EF4                         _Texto 2B82                         _flags 00CA  
                       _mapeo 2F1A                  colision@map2 0088                         _fputc 2940  
             __end_of_isalpha 2E1E                         _place 00FE                         _fputs 2D9E  
                       pad@fp 0011                         _width 00C6                         _putch 300C  
                       _start 00D2                         _pulso 2F9E               __end_of_islower 2E56  
             __end_of_isupper 2E8E                         tablat 000FF5                         plusw1 000FE3  
                       plusw2 000FDB                         ttemp5 005F                         ttemp6 0062  
                       ttemp7 0066                         utoa@d 001E                         utoa@i 003A  
                       utoa@n 0032                         utoa@p 002E                         utoa@w 0030  
                       status 000FD8                         wtemp8 005F               __end_of_sprintf 2D5A  
                       xtoa@c 003D                         xtoa@d 001E                         xtoa@i 003B  
                       xtoa@n 0033                         xtoa@p 002F                         xtoa@w 0031  
                       xtoa@x 0026               __end_of_strncmp 2870               __end_of_toupper 2D9E  
            ___lodiv@dividend 0001        ??_rutinainterrupciones 0001               __initialization 2AD0  
                __end_of_main 144E                  __end_of_mapa 300C                  __end_of_utoa 200E  
                __end_of_xtoa 1E0A            clean_memory@vector 0073                        ??_main 00B6  
                      ??_mapa 0001                        ??_utoa 0026                        ??_xtoa 0027  
               __activetblptr 000001              ___lodiv@quotient 0011                        ?_Texto 0002  
                      ?_mapeo 0001                        ?_fputc 0001                        ?_fputs 000A  
                      _EECON2 000FA7                        _ANCON0 000F48                        _ANCON1 000F49  
                      ?_putch 0001                        ?_pulso 0001                        i2l2841 0018  
                      i2l2851 0048                        i2l2843 001A                        i2l2861 007A  
                      i2l2853 004A                        i2l2845 0020                        i2l2863 007C  
                      i2l2855 0052                        i2l2847 0032                        i2l2839 000A  
                      i2l2865 0090                        i2l2857 0064                        i2l2849 003A  
                      i2l2859 006C                        _RPINR1 000EE1                        _RPINR2 000EE2  
                   ??_InitINT 0001                 colision@F7155 0320                  vfprintf@cfmt 005A  
                      Texto@A 0002                        Texto@i 000B              __end_of_colision 2380  
                      ___wmul 2EF4                     ??___lodiv 0011                     ??___lomod 0011  
                   ??___lwdiv 0005                     ??_car_pos 0001                        clear_0 2B5E  
                      clear_1 2B6A                        isa$std 000001                        _points 00CC  
                      pad@buf 0013                        _strlen 2E8E                        fputc@c 0001  
                      fputs@c 000E                        fputs@i 000F                        fputs@s 000A  
                   ??_isalpha 0003                     ??_islower 0003                  __mediumconst 0000  
                      tblptrh 000FF7                     ??_isupper 0003                        tblptrl 000FF6  
                      tblptru 000FF8                        putch@c 0001              __end_of_vfprintf 2D08  
                      utoa@fp 001C                     ??_sprintf 005C                        xtoa@fp 001C  
                   ??_strncmp 0007                     ??_toupper 0009                    __accesstop 0060  
     __end_of__initialization 2B70                 ___rparam_used 000001           _InitEntradasSalidas 2F82  
              __pcstackCOMRAM 0001                 __end_of_Texto 2C32                  __pidataBANK0 2FEA  
                __pidataBANK3 2FFA                  __pidataBANK4 24A2                  __pidataBANK5 25A2  
               __end_of_mapeo 2F3E                 __end_of_fputc 2A0A                 __end_of_fputs 2DE2  
               __end_of_putch 300E                 __end_of_pulso 2FB4                  escritura@lsb 0082  
                escritura@msb 0081          ?_InitEntradasSalidas 0001                _enter_colision 00D6  
                     ??_Texto 0004                       ??_mapeo 0001                       ??_fputc 0005  
                     ??_fputs 000E                       ??_putch 0001                       ??_pulso 0001  
                  __pbssBANK0 00C4                    __pbssBANK3 0300                  _clean_memory 200E  
                     ?___wmul 0001                    _direccion1 2FD8                    _direccion2 2FC6  
                     ?_strlen 0001         ??_InitEntradasSalidas 0001               escritura@vector 0073  
               _exit_colision 00D4                       _SSP1BUF 000FC9                     ?_colision 0001  
            ___lomod@dividend 0001             __end_of_cleanDisp 2F60                _inicializacion 2380  
                     _InitINT 2F60                       __Hparam 0000                       __Lparam 0000  
           __end_of_configSPI 2FC6                       ___lodiv 26A2                       ___lomod 2870  
                     ___lwdiv 2C32                     ?_vfprintf 0054                    car_pos@pos 0001  
                __psmallconst 0F00                       _car_pos 2EC4                       __pcinit 2AD0  
                     __ramtop 0F00             __end_of_escritura 1B64                       __ptext0 0FC0  
                     __ptext1 2F1A                       __ptext2 300A                       __ptext3 2380  
                     __ptext4 2FB4                       __ptext5 21F8                       __ptext6 1844  
                     __ptext7 2EF4                       __ptext8 2C32                       __ptext9 200E  
                   _T0CONbits 000FD5                       _isalpha 2DE2               _puntajeguardado 00D0  
                     _islower 2E1E                       _isupper 2E56                colision@vector 00A7  
                     _timeron 00CE                       _puntaje 00D8                       main@map 0100  
                     _sprintf 2D08                       _strncmp 2792                       _toupper 2D5A  
      __end_of_inicializacion 24A2                    ??_colision 0086          end_of_initialization 2B70  
                     fputc@fp 0003                       fputs@fp 000C             __end_of_vfpfcnvrt 1844  
                     postdec1 000FE5                       postdec2 000FDD                       postinc0 000FEE  
                     postinc1 000FE6                       postinc2 000FDE                    ??_vfprintf 005A  
                     strlen@a 0003                   Texto@total1 0007                   Texto@total2 0008  
                     strlen@s 0001                     _PORTAbits 000F80                   ?_direccion1 0001  
                 ?_direccion2 0001                     _PORTCbits 000F82               ?_inicializacion 0001  
                  _statusflag 00EA                    main@vector 00B8                   vfpfcnvrt@ap 0043  
                 vfpfcnvrt@fp 003F                __end_of___wmul 2F1A                __end_of_strlen 2EC4  
         start_initialization 2AD0               ___lodiv@divisor 0009               ___lodiv@counter 0019  
               clean_memory@a 0085                   __end_of_pad 2AD0                    escritura@a 0083  
               escritura@baja 0080                 escritura@alta 007F                   vfprintf@fmt 0056  
                    ??___wmul 0005                   __pdataBANK0 00EE                   __pdataBANK3 0320  
                 __pdataBANK4 0400                   __pdataBANK5 0500                  car_pos@F7150 00EE  
                    ??_strlen 0003                 __pcstackBANK0 0060                 __pcstackBANK1 0100  
               __pcstackBANK2 0200                      ?_InitINT 0001                     __pnvBANK0 00FE  
                   _cleanDisp 2F3E              ___lwdiv@dividend 0001                     __pintcode 0008  
                    ?___lodiv 0001                      ?___lomod 0001                      ?___lwdiv 0001  
 __end_of_InitEntradasSalidas 2F9E                     _configSPI 2FB4                      ?_car_pos 0001  
             ___lomod@divisor 0009                   __smallconst 0F00               ___lomod@counter 0011  
                    ?_isalpha 0001                      ?_islower 0001                     _escritura 1844  
                    ?_isupper 0001              ___lwdiv@quotient 0005                      ?_sprintf 0060  
                    ?_strncmp 0001                      ?_toupper 0007                ___wmul@product 0005  
                    _LATCbits 000F8B                    ?_cleanDisp 0001                      i2u240_40 0064  
                    i2u240_41 0060                      i2u241_40 007A                      i2u241_41 0076  
                    i2u242_40 0090                      i2u242_41 008C                      i2u237_40 0018  
                    i2u237_41 0014                      i2u238_40 0032                      i2u238_41 002E  
                    i2u239_40 0048                      i2u239_41 0044                      _PIR1bits 000F9E  
                    _RCONbits 000FD0                     main@F7145 0400                     main@F7147 0500  
                  ?_configSPI 0001                     _vfpfcnvrt 144E                  ??_direccion1 0002  
                ??_direccion2 0002             ___wmul@multiplier 0001              ??_inicializacion 0002  
                   main@speed 00C2                    ?_escritura 0001  __end_of_rutinainterrupciones 0098  
                  vfpfcnvrt@c 004B                   _INTCON2bits 000FF1                   _INTCON3bits 000FF0  
                   copy_data0 2AE4                     copy_data1 2B08                     copy_data2 2B2C  
                   copy_data3 2B4C            __end_of_direccion1 2FEA            __end_of_direccion2 2FD8  
                    __Hrparam 0000                    vfprintf@ap 0058                      __Lrparam 0000  
                  vfprintf@fp 0054                  __Lsmallconst 0F00                      Texto@LSB 0006  
                    Texto@MSB 000A                      Texto@aux 0009                    ?_vfpfcnvrt 003F  
                  sprintf@fmt 0062               ___lwdiv@divisor 0003        escritura@totalguardado 0084  
             ___lwdiv@counter 0007                      __ptext10 2D08                      __ptext11 2CA6  
                    __ptext20 2E8E                      __ptext12 144E                      __ptext21 2D9E  
                    __ptext13 1B64                      __ptext30 2B82                      __ptext22 2940  
                    __ptext14 2D5A                      __ptext31 2F9E                      __ptext23 300C  
                    __ptext15 2E1E                      __ptext32 2EC4                      __ptext24 2870  
                    __ptext16 2E56                      __ptext33 2F60                      __ptext25 26A2  
                    __ptext17 2DE2                      __ptext34 2F82                      __ptext26 2792  
                    __ptext18 1E0A                      __ptext27 2FC6                      __ptext19 2A0A  
                    __ptext28 2FD8                      __ptext29 2F3E                  _SSP1CON1bits 000FC6  
                _SSP1CON2bits 000FC5                      _colision 21F8                 ?_clean_memory 0001  
                 ??_cleanDisp 0002               colision@vector2 0098                      isa$xinst 000000  
                    _posicion 00E2                      int$flags 005E                      _vfprintf 2CA6  
                    main@map3 0200                   ??_configSPI 0001                  _SSP1STATbits 000FC7  
                  _INTCONbits 000FF2                   ??_escritura 005C                      isalpha@c 0001  
                    intlevel2 0000                     sprintf@ap 0066                      islower@c 0001  
              ??_clean_memory 005C                      isupper@c 0001                     strncmp@_l 0001  
                   strncmp@_r 0003          _rutinainterrupciones 0008                   ??_vfpfcnvrt 0045  
                    sprintf@f 0068                      sprintf@s 0060                    _PPSCONbits 000EBF  
                    strncmp@l 0008                      strncmp@n 0005                      strncmp@r 000A  
                    toupper@c 0007         ?_rutinainterrupciones 0001  
